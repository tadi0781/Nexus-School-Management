{% extends "layout/base.html" %}
{% from 'macros/_ui_components.html' import render_spinner, render_alert %}

{% block page_title %}My Saved Items{% endblock %}

{% block content_header %}
<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2 font-heading">My Saved Items</h1>
    {# Optional: Add actions like 'Clear All' here #}
</div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0" x-data="savedItemsManager()">
    <!-- Filters and Controls -->
    <div class="row mb-3">
        <div class="col-md-4">
            <label for="itemTypeFilter" class="form-label">Filter by Type</label>
            <select id="itemTypeFilter" class="form-select" x-model="itemTypeFilter" @change="fetchSavedItems(true)">
                <option value="">All Types</option>
                {% for item_type in filter_options %}
                    <option value="{{ item_type }}">{{ item_type.replace('_', ' ') }}</option>
                {% endfor %}
            </select>
        </div>
        <div class="col-md-4">
            <label for="sortBy" class="form-label">Sort By</label>
            <select id="sortBy" class="form-select" x-model="sortBy" @change="fetchSavedItems(true)">
                <option value="saved_at_desc">Newest Saved</option>
                <option value="saved_at_asc">Oldest Saved</option>
                <option value="item_type_asc">Type</option>
            </select>
        </div>
    </div>

    <!-- Saved Items List -->
    <div id="savedItemsContainer">
        <template x-if="isLoading">
            <div class="text-center p-5">
                {{ render_spinner('Loading your saved items...') }}
            </div>
        </template>
        
        <template x-if="!isLoading && savedItems.length === 0">
            <div class="text-center p-5">
                <i class="bi bi-bookmark-x-fill text-muted" style="font-size: 3rem;"></i>
                <p class="mt-3">You haven't saved any items yet.</p>
                <p class="text-muted">Click the bookmark icon on posts or messages to save them for later.</p>
            </div>
        </template>

        <template x-for="item in savedItems" :key="item.saved_item_id">
            <div class="card shadow-sm mb-3">
                <div class="card-body">
                    <div class="d-flex">
                        <div class="flex-shrink-0 me-3">
                            <i class="bi bi-pin-angle-fill text-primary" style="font-size: 1.5rem;" x-show="item.content_details.type === 'GlobalPost'"></i>
                            <i class="bi bi-broadcast text-info" style="font-size: 1.5rem;" x-show="item.content_details.type === 'ChannelPost'"></i>
                            <i class="bi bi-chat-left-text-fill text-success" style="font-size: 1.5rem;" x-show="item.content_details.type === 'DirectMessage'"></i>
                            <i class="bi bi-people-fill text-warning" style="font-size: 1.5rem;" x-show="item.content_details.type === 'GroupMessage'"></i>
                        </div>
                        <div class="flex-grow-1">
                            <h5 class="card-title mb-1">
                                <a :href="item.content_details.url || '#'" class="text-decoration-none" x-text="item.content_details.title || 'Untitled Item'"></a>
                            </h5>
                            <p class="card-text text-muted small mb-2">
                                Saved <span x-text="formatRelativeTime(item.saved_at)"></span>
                                <span x-show="item.content_details.author_name">
                                    • by <strong x-text="item.content_details.author_name"></strong>
                                </span>
                            </p>
                            <p class="card-text" x-text="item.content_details.snippet || 'No snippet available.'"></p>
                            
                            <!-- Notes Section -->
                            <div class="mt-2">
                                <p class="mb-1" x-show="item.notes">
                                    <strong>My Notes:</strong> <span x-text="item.notes"></span>
                                </p>
                                <button class="btn btn-sm btn-outline-secondary" @click="editNotes(item)">
                                    <i class="bi bi-pencil-square"></i>
                                    <span x-text="item.notes ? 'Edit Note' : 'Add Note'"></span>
                                </button>
                            </div>
                        </div>
                        <div class="ms-auto">
                            <button class="btn btn-sm btn-outline-danger" @click="unsaveItem(item.item_type, item.item_id)">
                                <i class="bi bi-bookmark-x"></i> Unsave
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </template>
    </div>

    <!-- Load More Button -->
    <div class="text-center" x-show="!isLoading && hasNextPage">
        <button class="btn btn-primary" @click="fetchSavedItems(false)">
             <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true" x-show="isPaginating"></span>
            Load More
        </button>
    </div>
</div>
{% endblock %}

{% block body_scripts %}
<script>
document.addEventListener('alpine:init', () => {
    Alpine.data('savedItemsManager', () => ({
        savedItems: [],
        isLoading: true,
        isPaginating: false,
        hasNextPage: false,
        currentPage: 1,
        itemTypeFilter: '',
        sortBy: 'saved_at_desc',

        init() {
            this.fetchSavedItems(true);
        },

        async fetchSavedItems(isNewQuery = false) {
            if (isNewQuery) {
                this.currentPage = 1;
                this.isLoading = true;
            } else {
                this.isPaginating = true;
            }

            const params = new URLSearchParams({
                page: this.currentPage,
                per_page: 15,
                item_type_filter: this.itemTypeFilter,
                sort_by: this.sortBy,
            });

            try {
                const response = await fetch(`/api/v1/saved_items?${params.toString()}`);
                if (!response.ok) throw new Error('Network response was not ok.');
                const data = await response.json();

                if (data.success) {
                    if (isNewQuery) {
                        this.savedItems = data.saved_items;
                    } else {
                        this.savedItems.push(...data.saved_items);
                    }
                    this.hasNextPage = data.pagination.has_next;
                    this.currentPage++;
                } else {
                    showToast('Error', data.error || 'Could not load saved items.', 'error');
                }
            } catch (error) {
                console.error('Fetch error:', error);
                showToast('Error', 'An error occurred while fetching your saved items.', 'error');
            } finally {
                this.isLoading = false;
                this.isPaginating = false;
            }
        },

        async unsaveItem(itemType, itemId) {
            const result = await Swal.fire({
                title: 'Are you sure?',
                text: "This item will be removed from your saved list.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#6c757d',
                confirmButtonText: 'Yes, unsave it!'
            });

            if (result.isConfirmed) {
                const params = new URLSearchParams({ item_type: itemType, item_id: itemId });
                try {
                    const response = await fetch(`/api/v1/saved_items?${params.toString()}`, {
                        method: 'DELETE',
                        headers: { 'X-CSRFToken': getCsrfToken() }
                    });
                    const data = await response.json();
                    if (data.success) {
                        this.savedItems = this.savedItems.filter(i => !(i.item_type === itemType && i.item_id === itemId));
                        showToast('Success', 'Item unsaved.', 'success');
                    } else {
                        showToast('Error', data.error || 'Failed to unsave item.', 'error');
                    }
                } catch(error) {
                    showToast('Error', 'A network error occurred.', 'error');
                }
            }
        },
        
        async editNotes(item) {
            const { value: text } = await Swal.fire({
                title: 'Add/Edit Your Notes',
                input: 'textarea',
                inputValue: item.notes || '',
                inputPlaceholder: 'Type your notes here...',
                showCancelButton: true,
                confirmButtonText: 'Save Notes',
                inputValidator: (value) => {
                    if (value.length > 1000) {
                        return 'Notes cannot be longer than 1000 characters.'
                    }
                }
            });

            if (text !== undefined) {
                try {
                    const response = await fetch(`/api/v1/saved_items/${item.saved_item_id}`, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json',
                            'X-CSRFToken': getCsrfToken()
                        },
                        body: JSON.stringify({ notes: text })
                    });
                    const data = await response.json();
                    if (data.success) {
                        item.notes = data.saved_item.notes; // Update note in the UI
                        showToast('Success', 'Notes updated!', 'success');
                    } else {
                        showToast('Error', data.error || 'Failed to update notes.', 'error');
                    }
                } catch(error) {
                    showToast('Error', 'A network error occurred.', 'error');
                }
            }
        },
        
        formatRelativeTime(isoString) {
            if (!isoString) return '';
            return timeAgo.format(new Date(isoString));
        }
    }));
    
    // Helper for relative time formatting
    const timeAgo = new Intl.RelativeTimeFormat('en', { numeric: 'auto' });
});
</script>
{% endblock %}{% extends "layout/base.html" %}

{% block page_title %}Set New Password{% endblock %}

{% block content %}
{% set no_sidebar = True %} {# Typically, forced password change happens before full dashboard access #}
<div class="container">
    <div class="row justify-content-center">
        <div class="col-lg-6 col-md-8 col-sm-10">
            <div class="auth-form-container card shadow-lg border-0 mt-4">
                <div class="card-body p-4 p-md-5">
                    <div class="text-center mb-4">
                        <img src="{{ url_for('static', filename='img/logo_light.png') }}" alt="Nexus Logo" class="auth-form-logo navbar-brand-img-light">
                        <img src="{{ url_for('static', filename='img/logo_dark.png') }}" alt="Nexus Logo Dark" class="auth-form-logo navbar-brand-img-dark" style="display: none;">
                        <h2 class="card-title font-heading mt-3">Set Your New Password</h2>
                        <p class="text-muted">
                            For security reasons, you are required to set a new password to continue.
                        </p>
                    </div>

                    {% include 'layout/_flash_messages.html' %}

                    <form method="POST" action="{{ url_for('change_password_forced') }}" novalidate>
                        {{ form.hidden_tag() if form.hidden_tag }} {# CSRF token #}

                        <div class="mb-3">
                            {{ form.new_password.label(class="form-label") }}
                            {{ form.new_password(class="form-control form-control-lg" + (" is-invalid" if form.new_password.errors else ""), placeholder="Enter new password (min. 8 characters)") }}
                            {% if form.new_password.errors %}
                                <div class="invalid-feedback">
                                    {% for error in form.new_password.errors %}<span>{{ error }}</span>{% endfor %}
                                </div>
                            {% endif %}
                        </div>

                        <div class="mb-4">
                            {{ form.confirm_new_password.label(class="form-label") }}
                            {{ form.confirm_new_password(class="form-control form-control-lg" + (" is-invalid" if form.confirm_new_password.errors else ""), placeholder="Confirm new password") }}
                            {% if form.confirm_new_password.errors %}
                                <div class="invalid-feedback">
                                    {% for error in form.confirm_new_password.errors %}<span>{{ error }}</span>{% endfor %}
                                </div>
                            {% endif %}
                        </div>

                        <div class="d-grid">
                            {{ form.submit(class="btn btn-primary btn-lg w-100", value="Set New Password & Continue") }}
                        </div>
                    </form>
                     <div class="text-center mt-4">
                        <p class="text-muted">
                            <small>If you encounter issues, please contact school administration.</small>
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}{% extends "layout/base.html" %}

{% block page_title %}Pre-Register{% endblock %}

{% block content %}
{% set no_sidebar = True %}
<div class="container">
    <div class="row justify-content-center">
        <div class="col-lg-6 col-md-8 col-sm-10">
            <div class="auth-form-container card shadow-lg border-0 mt-4">
                <div class="card-body p-4 p-md-5">
                    <div class="text-center mb-4">
                        <img src="{{ url_for('static', filename='img/logo_light.png') }}" alt="Nexus Logo" class="auth-form-logo navbar-brand-img-light">
                        <img src="{{ url_for('static', filename='img/logo_dark.png') }}" alt="Nexus Logo Dark" class="auth-form-logo navbar-brand-img-dark" style="display: none;">
                        <h2 class="card-title font-heading mt-3">Begin Registration</h2>
                        <p class="text-muted">Please enter your provided registration code to start.</p>
                    </div>

                    {% include 'layout/_flash_messages.html' %}

                    <form method="POST" action="{{ url_for('pre_register') }}" novalidate>
                        {{ form.hidden_tag() if form.hidden_tag }} {# CSRF token #}

                        <div class="mb-3">
                            {{ form.code.label(class="form-label") }}
                            {{ form.code(class="form-control form-control-lg" + (" is-invalid" if form.code.errors else ""), placeholder="Enter Registration Code") }}
                            {% if form.code.errors %}
                                <div class="invalid-feedback">
                                    {% for error in form.code.errors %}<span>{{ error }}</span>{% endfor %}
                                </div>
                            {% endif %}
                        </div>

                        <div class="d-grid mb-3">
                            {{ form.submit(class="btn btn-primary btn-lg w-100", value="Verify Code") }}
                        </div>
                    </form>

                    <div class="text-center mt-4">
                        <p class="text-muted">
                            Already have an account? <a href="{{ url_for('login') }}" class="text-decoration-none fw-medium">Login here</a>
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}{% extends "layout/base.html" %}

{% block page_title %}Login{% endblock %}

{% block content %}
{% set no_sidebar = True %} {# Tell base.html not to render the sidebar for this page #}
<div class="container">
    <div class="row justify-content-center">
        <div class="col-lg-6 col-md-8 col-sm-10">
            <div class="auth-form-container card shadow-lg border-0 mt-4">
                <div class="card-body p-4 p-md-5">
                    <div class="text-center mb-4">
                        <img src="{{ url_for('static', filename='img/logo_light.png') }}" alt="Nexus Logo" class="auth-form-logo navbar-brand-img-light">
                        <img src="{{ url_for('static', filename='img/logo_dark.png') }}" alt="Nexus Logo Dark" class="auth-form-logo navbar-brand-img-dark" style="display: none;">
                        <h2 class="card-title font-heading mt-3">Welcome Back!</h2>
                        <p class="text-muted">Login to access your Nexus dashboard.</p>
                    </div>

                    {# Flash messages specific to this form area if needed, or rely on global #}
                    {% include 'layout/_flash_messages.html' %}

                    <form method="POST" action="{{ url_for('login', next=request.args.get('next')) }}" novalidate>
                        {{ form.csrf_token }} {# CORRECTED LINE #}

                        <div class="mb-3">
                            {{ form.username.label(class="form-label") }}
                            {{ form.username(class="form-control form-control-lg" + (" is-invalid" if form.username.errors else ""), placeholder="Enter your username") }}
                            {% if form.username.errors %}
                                <div class="invalid-feedback">
                                    {% for error in form.username.errors %}<span>{{ error }}</span>{% endfor %}
                                </div>
                            {% endif %}
                        </div>

                        <div class="mb-3">
                            {{ form.password.label(class="form-label") }}
                            {{ form.password(class="form-control form-control-lg" + (" is-invalid" if form.password.errors else ""), placeholder="Enter your password") }}
                            {% if form.password.errors %}
                                <div class="invalid-feedback">
                                    {% for error in form.password.errors %}<span>{{ error }}</span>{% endfor %}
                                </div>
                            {% endif %}
                        </div>

                        {# Optional: Remember Me checkbox - Requires backend logic in login route #}
                        {# <div class="mb-3 form-check"> #}
                        {#    <input type="checkbox" class="form-check-input" id="rememberMe"> #}
                        {#    <label class="form-check-label" for="rememberMe">Remember me</label> #}
                        {# </div> #}

                        <div class="d-grid mb-3">
                            {{ form.submit(class="btn btn-primary btn-lg w-100") }}
                        </div>
                    </form>

                    <div class="text-center mt-4">
                        {# <p class="text-muted mb-1">
                            <a href="#" class="text-decoration-none">Forgot password?</a>
                        </p> #}
                        <p class="text-muted">
                            Don't have an account? <a href="{{ url_for('pre_register') }}" class="text-decoration-none fw-medium">Register here</a>
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block body_scripts %}
<script>
    // Client-side form validation styling (Bootstrap 5 handles this automatically with .was-validated or server-side .is-invalid)
    // No specific JS needed for this page in Phase A unless for advanced features.
</script>
{% endblock %}{% extends "layout/base.html" %}

{% block page_title %}Confirm Identity{% endblock %}

{% block content %}
{% set no_sidebar = True %} {# Assuming this variable is used in your base.html to control sidebar visibility #}
<div class="container">
    <div class="row justify-content-center">
        <div class="col-lg-7 col-md-9 col-sm-11">
            <div class="auth-form-container card shadow-lg border-0 mt-4">
                <div class="card-body p-4 p-md-5">
                    <div class="text-center mb-4">
                        {# Dynamically select logo based on theme if your base.html supports it #}
                        <img src="{{ url_for('static', filename='img/logo_light.png') }}" alt="Nexus Logo" class="auth-form-logo navbar-brand-img-light">
                        <img src="{{ url_for('static', filename='img/logo_dark.png') }}" alt="Nexus Logo Dark" class="auth-form-logo navbar-brand-img-dark" style="display: none;">
                        <h2 class="card-title font-heading mt-3">Confirm Your Identity</h2>
                        <p class="text-muted">Please confirm the following details match your registration information.</p>
                    </div>

                    {# Include flash messages partial #}
                    {% include 'layout/_flash_messages.html' %}

                    <div class="alert alert-info text-center shadow-sm" role="alert">
                        <h4 class="alert-heading font-heading">Is this you?</h4>
                        <p class="lead mb-2"><strong>Name:</strong> {{ full_name or "N/A" }}</p>
                        <p class="lead mb-3"><strong>Role:</strong> {{ role_name or "N/A" }}</p>
                        <hr>
                        <p class="mb-0">If this information is correct, please click "Yes, this is me" to proceed. Otherwise, click "No, start over".</p>
                    </div>

                    <form method="POST" action="{{ url_for('handle_confirmation') }}" class="mt-4">
                        <input type="hidden" name="csrf_token" value="{{ get_csrf_token_value() }}"> {# Correctly added CSRF token #}
                        <div class="d-grid gap-2 d-sm-flex justify-content-sm-center">
                            <button type="submit" name="confirmation" value="yes" class="btn btn-success btn-lg px-4 me-sm-3">
                                <i class="bi bi-check-circle-fill me-2"></i>Yes, this is me
                            </button>
                            <button type="submit" name="confirmation" value="no" class="btn btn-outline-danger btn-lg px-4">
                                <i class="bi bi-x-circle-fill me-2"></i>No, start over
                            </button>
                        </div>
                    </form>

                    <div class="text-center mt-4">
                        <p class="text-muted">
                            <small>If you believe there's an error, please contact school administration.</small>
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

{# Optional: Script to toggle logo based on theme if you have such functionality #}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const lightLogo = document.querySelector('.navbar-brand-img-light');
        const darkLogo = document.querySelector('.navbar-brand-img-dark');

        function applyThemeLogo() {
            const currentTheme = document.documentElement.getAttribute('data-bs-theme') || 'light';
            if (currentTheme === 'dark') {
                if (lightLogo) lightLogo.style.display = 'none';
                if (darkLogo) darkLogo.style.display = 'inline-block';
            } else {
                if (lightLogo) lightLogo.style.display = 'inline-block';
                if (darkLogo) darkLogo.style.display = 'none';
            }
        }

        // Apply on initial load
        applyThemeLogo();

        // Optional: Listen for theme changes if you have a theme switcher
        // This is a placeholder; actual theme change event depends on your implementation.
        // For example, if your theme switcher sets an attribute on <html> or <body>:
        const observer = new MutationObserver(mutationsList => {
            for (let mutation of mutationsList) {
                if (mutation.type === 'attributes' && mutation.attributeName === 'data-bs-theme') {
                    applyThemeLogo();
                }
            }
        });
        observer.observe(document.documentElement, { attributes: true });
    });
</script>
{% endblock %}{% extends "layout/base.html" %}

{% block page_title %}Change Password{% endblock %}

{% block content %}
{# This page WILL have a sidebar since the user is authenticated #}
<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-lg-7 col-md-9">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0 font-heading"><i class="bi bi-shield-lock-fill me-2"></i>Change Your Password</h4>
                </div>
                <div class="card-body p-4 p-md-5">
                    <p class="text-muted mb-4">
                        For your security, please enter your current password and then choose a new, strong password.
                    </p>

                    {% include 'layout/_flash_messages.html' %}

                    <form method="POST" action="{{ url_for('change_password') }}" novalidate>
                        {{ form.hidden_tag() if form.hidden_tag }} {# CSRF token #}

                        <div class="mb-3">
                            {{ form.current_password.label(class="form-label") }}
                            {{ form.current_password(class="form-control form-control-lg" + (" is-invalid" if form.current_password.errors else ""), placeholder="Enter your current password") }}
                            {% if form.current_password.errors %}
                                <div class="invalid-feedback">
                                    {% for error in form.current_password.errors %}<span>{{ error }}</span>{% endfor %}
                                </div>
                            {% endif %}
                        </div>

                        <hr class="my-4">

                        <div class="mb-3">
                            {{ form.new_password.label(class="form-label") }}
                            {{ form.new_password(class="form-control form-control-lg" + (" is-invalid" if form.new_password.errors else ""), placeholder="Enter new password (min. 8 characters)") }}
                            {% if form.new_password.errors %}
                                <div class="invalid-feedback">
                                    {% for error in form.new_password.errors %}<span>{{ error }}</span>{% endfor %}
                                </div>
                            {% endif %}
                        </div>

                        <div class="mb-4">
                            {{ form.confirm_new_password.label(class="form-label") }}
                            {{ form.confirm_new_password(class="form-control form-control-lg" + (" is-invalid" if form.confirm_new_password.errors else ""), placeholder="Confirm new password") }}
                            {% if form.confirm_new_password.errors %}
                                <div class="invalid-feedback">
                                    {% for error in form.confirm_new_password.errors %}<span>{{ error }}</span>{% endfor %}
                                </div>
                            {% endif %}
                        </div>

                        <div class="d-grid">
                            {{ form.submit(class="btn btn-primary btn-lg w-100", value="Update Password") }}
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}{% extends "layout/base.html" %}

{% block page_title %}Complete Registration{% endblock %}

{% block content %}
{% set no_sidebar = True %}
<div class="container">
    <div class="row justify-content-center">
        <div class="col-lg-7 col-md-9"> {# Slightly wider for more form fields #}
            <div class="auth-form-container card shadow-lg border-0 mt-4 mb-5"> {# Added mb-5 for spacing #}
                <div class="card-body p-4 p-md-5">
                    <div class="text-center mb-4">
                        <img src="{{ url_for('static', filename='img/logo_light.png') }}" alt="Nexus Logo" class="auth-form-logo navbar-brand-img-light">
                        <img src="{{ url_for('static', filename='img/logo_dark.png') }}" alt="Nexus Logo Dark" class="auth-form-logo navbar-brand-img-dark" style="display: none;">
                        <h2 class="card-title font-heading mt-3">Create Your Account</h2>
                        <p class="text-muted">Welcome, {{ pre_reg_full_name or "User" }}! Please complete your profile details below.</p>
                    </div>

                    {% include 'layout/_flash_messages.html' %}

                    <form method="POST" action="{{ url_for('complete_registration') }}" novalidate>
                        {{ form.hidden_tag() if form.hidden_tag }} {# CSRF token #}

                        <div class="mb-3">
                            {{ form.full_name.label(class="form-label") }}
                            {{ form.full_name(class="form-control form-control-lg" + (" is-invalid" if form.full_name.errors else ""), placeholder="Your Full Name") }}
                            {% if form.full_name.errors %}
                                <div class="invalid-feedback">
                                    {% for error in form.full_name.errors %}<span>{{ error }}</span>{% endfor %}
                                </div>
                            {% endif %}
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                {{ form.username.label(class="form-label") }}
                                {{ form.username(class="form-control form-control-lg" + (" is-invalid" if form.username.errors else ""), placeholder="Choose a username") }}
                                {% if form.username.errors %}
                                    <div class="invalid-feedback">
                                        {% for error in form.username.errors %}<span>{{ error }}</span>{% endfor %}
                                    </div>
                                {% endif %}
                            </div>
                            <div class="col-md-6 mb-3">
                                {{ form.email.label(class="form-label") }}
                                {{ form.email(class="form-control form-control-lg" + (" is-invalid" if form.email.errors else ""), placeholder="your.email@example.com") }}
                                {% if form.email.errors %}
                                    <div class="invalid-feedback">
                                        {% for error in form.email.errors %}<span>{{ error }}</span>{% endfor %}
                                    </div>
                                {% endif %}
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                {{ form.password.label(class="form-label") }}
                                {{ form.password(class="form-control form-control-lg" + (" is-invalid" if form.password.errors else ""), placeholder="Create a password") }}
                                {% if form.password.errors %}
                                    <div class="invalid-feedback">
                                        {% for error in form.password.errors %}<span>{{ error }}</span>{% endfor %}
                                    </div>
                                {% endif %}
                            </div>
                            <div class="col-md-6 mb-3">
                                {{ form.password2.label(class="form-label") }}
                                {{ form.password2(class="form-control form-control-lg" + (" is-invalid" if form.password2.errors else ""), placeholder="Confirm your password") }}
                                {% if form.password2.errors %}
                                    <div class="invalid-feedback">
                                        {% for error in form.password2.errors %}<span>{{ error }}</span>{% endfor %}
                                    </div>
                                {% endif %}
                            </div>
                        </div>
                        
                        <hr class="my-4">
                        <h5 class="mb-3 font-heading">Optional Profile Information</h5>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                {{ form.age.label(class="form-label") }}
                                {{ form.age(class="form-control" + (" is-invalid" if form.age.errors else ""), placeholder="e.g., 16") }}
                                {% if form.age.errors %}
                                    <div class="invalid-feedback">
                                        {% for error in form.age.errors %}<span>{{ error }}</span>{% endfor %}
                                    </div>
                                {% endif %}
                            </div>
                            <div class="col-md-6 mb-3">
                                {{ form.sex.label(class="form-label") }}
                                {{ form.sex(class="form-select" + (" is-invalid" if form.sex.errors else "")) }}
                                {% if form.sex.errors %}
                                    <div class="invalid-feedback">
                                        {% for error in form.sex.errors %}<span>{{ error }}</span>{% endfor %}
                                    </div>
                                {% endif %}
                            </div>
                        </div>
                        
                        {# Profile Photo URL - Not ideal for UX, file upload would be better later #}
                        {# For Phase A, this field from the User model is a string #}
                        <div class="mb-3">
                            {{ form.profile_photo_url.label(class="form-label") }}
                            {{ form.profile_photo_url(class="form-control" + (" is-invalid" if form.profile_photo_url.errors else ""), placeholder="http://example.com/photo.jpg (Optional)") }}
                            <small class="form-text text-muted">Direct link to an image (e.g., .jpg, .png). File upload will be available later.</small>
                            {% if form.profile_photo_url.errors %}
                                <div class="invalid-feedback">
                                    {% for error in form.profile_photo_url.errors %}<span>{{ error }}</span>{% endfor %}
                                </div>
                            {% endif %}
                        </div>


                        {# Add other optional fields from CompleteRegistrationForm if they exist e.g., grade, section #}
                        {# Example: #}
                        {# {% if form.grade %}
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                {{ form.grade.label(class="form-label") }}
                                {{ form.grade(class="form-control" + (" is-invalid" if form.grade.errors else "")) }}
                                {% if form.grade.errors %}<div class="invalid-feedback">{% for e in form.grade.errors %}{{e}}{% endfor %}</div>{% endif %}
                            </div>
                            <div class="col-md-6 mb-3">
                                {{ form.section.label(class="form-label") }}
                                {{ form.section(class="form-control" + (" is-invalid" if form.section.errors else "")) }}
                                {% if form.section.errors %}<div class="invalid-feedback">{% for e in form.section.errors %}{{e}}{% endfor %}</div>{% endif %}
                            </div>
                        </div>
                        {% endif %} #}

                        <div class="d-grid mt-4">
                            {{ form.submit(class="btn btn-primary btn-lg w-100", value="Create Account") }}
                        </div>
                    </form>

                    <div class="text-center mt-4">
                        <p class="text-muted">
                            Already registered? <a href="{{ url_for('login') }}" class="text-decoration-none fw-medium">Login</a>
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}{% extends "layout/base.html" %}

{% block page_title %}Select Notification Recipients{% endblock %}

{% block content %}
<form id="recipient-selection-form" method="POST" action="{{ url_for('compose_notification') }}">
    
    {# This renders the CSRF token from our new CSRFOnlyForm #}
    {{ form.hidden_tag() }}

    {# We now MANUALLY add the hidden input for our recipient IDs. #}
    <input type="hidden" id="recipient_id_list" name="recipient_id_list" value="">

    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-people-fill me-2 text-primary"></i>Select Recipients
        </h1>
        <div class="d-flex align-items-center">
            <input type="search" id="recipient-search-bar" class="form-control me-3" placeholder="Search for anyone...">
            <button type="submit" class="btn btn-success flex-shrink-0">
                <i class="bi bi-arrow-right-circle-fill me-1"></i>
                Proceed (<span id="selected-count">0</span>)
            </button>
        </div>
    </div>

    <div class="accordion" id="recipient-groups-accordion">
        {% for category_title, groups in grouped_recipients.items() %}
            {% if groups %}
                <div class="accordion-item recipient-group-card">
                    <h2 class="accordion-header" id="heading-{{ category_title|replace(' ', '-')|lower }}">
                        <button class="accordion-button {% if not loop.first %}collapsed{% endif %}" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-{{ category_title|replace(' ', '-')|lower }}" aria-expanded="{{ 'true' if loop.first else 'false' }}">
                            {{ category_title }}
                        </button>
                    </h2>
                    <div id="collapse-{{ category_title|replace(' ', '-')|lower }}" class="accordion-collapse collapse {% if loop.first %}show{% endif %}" data-bs-parent="#recipient-groups-accordion">
                        <div class="accordion-body">
                            {% for group_name, users in groups.items() %}
                                {% include 'partials/_recipient_group.html' %}
                            {% endfor %}
                        </div>
                    </div>
                </div>
            {% endif %}
        {% endfor %}
    </div>
</form>
{% endblock %}

{% block body_scripts %}
<script>
    // The JavaScript does not need to change, as it still finds the elements by their IDs.
    document.addEventListener('DOMContentLoaded', function() {
        const form = document.getElementById('recipient-selection-form');
        const searchBar = document.getElementById('recipient-search-bar');
        const selectedCountEl = document.getElementById('selected-count');
        const hiddenInput = document.getElementById('recipient_id_list');

        const updateSelectedCount = () => {
            const checkedCount = form.querySelectorAll('.recipient-checkbox:checked').length;
            selectedCountEl.textContent = checkedCount;
        };

        const handleSelectionChange = (e) => {
            if (e.target.matches('.select-all-group')) {
                const groupContainer = e.target.closest('.recipient-group-container');
                const isChecked = e.target.checked;
                groupContainer.querySelectorAll('.recipient-checkbox').forEach(checkbox => {
                    if (checkbox.closest('.recipient-list-item').style.display !== 'none') {
                        checkbox.checked = isChecked;
                    }
                });
            }
            updateSelectedCount();
        };

        const handleSearch = () => {
            const searchTerm = searchBar.value.toLowerCase().trim();
            document.querySelectorAll('.recipient-group-card').forEach(groupCard => {
                let groupHasVisibleMatch = false;
                groupCard.querySelectorAll('.recipient-list-item').forEach(item => {
                    const name = item.dataset.name.toLowerCase();
                    const username = item.dataset.username.toLowerCase();
                    const isVisible = name.includes(searchTerm) || username.includes(searchTerm);
                    item.style.display = isVisible ? '' : 'none';
                    if (isVisible) {
                        groupHasVisibleMatch = true;
                    }
                });
                groupCard.style.display = groupHasVisibleMatch ? '' : 'none';
            });
        };

        const handleSubmit = (e) => {
            e.preventDefault();
            const checkedBoxes = form.querySelectorAll('.recipient-checkbox:checked');
            if (checkedBoxes.length === 0) {
                alert('Please select at least one recipient.');
                return;
            }
            const recipientIds = Array.from(checkedBoxes).map(cb => cb.value);
            hiddenInput.value = recipientIds.join(',');
            form.submit();
        };

        form.addEventListener('change', handleSelectionChange);
        form.addEventListener('submit', handleSubmit);
        searchBar.addEventListener('input', handleSearch);

        updateSelectedCount();
    });
</script>
{% endblock %}{% extends "layout/base.html" %}
{% from "_form_helpers.html" import render_field %}

{% block page_title %}Compose Notification{% endblock %}

{% block content %}
<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <h1 class="page-title font-heading mb-4">
                <a href="{{ url_for('select_recipients') }}" class="btn btn-sm btn-outline-secondary me-3" title="Back to Recipient Selection">
                    <i class="bi bi-arrow-left"></i>
                </a>
                <i class="bi bi-send me-2 text-primary"></i>{{ title }}
            </h1>
        </div>
    </div>

    <div class="row g-4">
        {# --- Notification Form Column --- #}
        <div class="col-lg-7">
            <div class="card shadow-sm">
                <div class="card-header">
                    <h5 class="mb-0">Compose Message</h5>
                </div>
                <div class="card-body">
                    <form method="POST" action="{{ url_for('send_final_notification') }}">
                        {{ form.hidden_tag() }}
                        {# This hidden input carries the selected IDs to the final POST request #}
                        <input type="hidden" name="recipient_id_list" value="{{ recipient_id_list }}">
                        
                        {{ render_field(form.content, rows=5, placeholder="Enter your notification message here...") }}
                        {{ render_field(form.link_url, placeholder="e.g., https://example.com/some/link") }}

                        <div class="d-grid mt-4">
                             <button type="submit" class="btn btn-primary btn-lg" {% if not recipients %}disabled{% endif %}>
                                <i class="bi bi-send-check-fill me-2"></i>Send to {{ recipients|length }} Recipient(s)
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        {# --- Recipient List Column --- #}
        <div class="col-lg-5">
            <div class="card shadow-sm">
                <div class="card-header">
                    <h5 class="mb-0">Confirm Recipients ({{ recipients|length }})</h5>
                </div>
                {% if recipients %}
                <div class="list-group list-group-flush" style="max-height: 500px; overflow-y: auto;">
                    {% for recipient in recipients %}
                    <div class="list-group-item d-flex align-items-center">
                        <img src="{{ url_for('static', filename=recipient.profile_photo_url or 'img/placeholders/avatar.png') }}" alt="{{ recipient.username }}" class="rounded-circle me-3" width="32" height="32">
                        <div class="flex-grow-1">
                            <div class="fw-bold">{{ recipient.full_name or recipient.username }}</div>
                            <small class="text-muted">{{ recipient.role.name.replace('_',' ').title() if recipient.role else 'User' }}</small>
                        </div>
                    </div>
                    {% endfor %}
                </div>
                {% else %}
                <div class="card-body text-center text-muted p-4">
                    <p class="mb-0">No recipients were selected.</p>
                </div>
                {% endif %}
            </div>
        </div>
    </div>
</div>
{% endblock %}{% extends "layout/base.html" %}
{# This 'from' statement seems to be unused in this template, but we can leave it. #}
{% from "_macros.html" import render_content_card_header %}

{% block page_title %}My Notifications{% endblock %}

{% block content_header %}
<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="page-title font-heading mb-0">
        <i class="bi bi-bell-fill me-2 text-primary"></i>My Notifications
    </h1>
    <div class="btn-toolbar mb-2 mb-md-0">
        {# 
          CORRECTED: 
          The link now points to 'select_recipients', which is the new, correct endpoint 
          for the interactive selection page we just built.
        #}
        <a href="{{ url_for('select_recipients') }}" class="btn btn-sm btn-success">
            <i class="bi bi-send-plus-fill me-1"></i> New Notification
        </a>
    </div>
</div>
{% endblock %}

{% block content %}
<div class="list-group">
    {% if notifications %}
        {% for notification in notifications %}
            {# This partial renders each individual notification item #}
            {% include 'partials/_notification_item.html' %}
        {% endfor %}
    {% else %}
        <div class="card card-body text-center shadow-sm">
            <i class="bi bi-bell-slash fs-1 text-muted mb-2"></i>
            <p class="text-muted mb-0">You have no notifications.</p>
        </div>
    {% endif %}
</div>
{% endblock %}{% extends "layout/base.html" %}
{# CORRECTED: Simplified the import path and removed the incorrect "macros/" subdirectory #}
{% from "_form_helpers.html" import render_field with context %}

{% block page_title %}{{ title }}{% endblock %}

{% block content %}
<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <h1 class="page-title font-heading mb-4">
                <a href="{{ url_for('notification_recipient_groups') }}" class="btn btn-sm btn-outline-secondary me-3" title="Back to Recipient Groups">
                    <i class="bi bi-arrow-left"></i>
                </a>
                <i class="bi bi-send me-2 text-primary"></i>{{ title }}
            </h1>
        </div>
    </div>

    <div class="row g-4">
        {# --- Notification Form Column --- #}
        <div class="col-lg-7">
            <div class="card shadow-sm">
                <div class="card-header">
                    <h5 class="mb-0">Compose Message</h5>
                </div>
                <div class="card-body">
                    <form method="POST" action="{{ url_for('send_notification_to_group', filter_type=filter_type, filter_value=filter_value) }}">
                        {{ form.hidden_tag() }}
                        
                        {{ render_field(form.content, rows=5, placeholder="Enter your notification message here...") }}
                        {{ render_field(form.link_url, placeholder="e.g., https://example.com/some/link") }}

                        <div class="d-grid mt-4">
                             <button type="submit" class="btn btn-primary btn-lg" {% if not recipients %}disabled{% endif %}>
                                <i class="bi bi-send-check-fill me-2"></i>Send to {{ recipients|length }} Recipient(s)
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        {# --- Recipient List Column --- #}
        <div class="col-lg-5">
            <div class="card shadow-sm">
                <div class="card-header">
                    <h5 class="mb-0">Recipients ({{ recipients|length }})</h5>
                </div>
                {% if recipients %}
                <div class="list-group list-group-flush" style="max-height: 500px; overflow-y: auto;">
                    {% for recipient in recipients %}
                    <div class="list-group-item d-flex align-items-center">
                        <img src="{{ url_for('static', filename=recipient.profile_photo_url or 'img/placeholders/avatar.png') }}" alt="{{ recipient.username }}" class="rounded-circle me-3" width="32" height="32">
                        <div class="flex-grow-1">
                            <div class="fw-bold">{{ recipient.full_name or recipient.username }}</div>
                            <small class="text-muted">{{ recipient.role.name.replace('_',' ').title() if recipient.role else 'User' }}</small>
                        </div>
                    </div>
                    {% endfor %}
                </div>
                {% else %}
                <div class="card-body text-center text-muted p-4">
                    <p class="mb-0">No active recipients found in this group.</p>
                </div>
                {% endif %}
            </div>
        </div>
    </div>
</div>
{% endblock %}{% extends "layout/base.html" %}
{% from "_form_helpers.html" import render_field %} {# Assumes you have a form helper macro #}

{% block page_title %}{{ title }}{% endblock %}

{% block content %}
<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <h1 class="page-title font-heading mb-4">
                <a href="{{ url_for('notification_recipient_groups') }}" class="btn btn-sm btn-outline-secondary me-3" title="Back to Recipient Groups">
                    <i class="bi bi-arrow-left"></i>
                </a>
                <i class="bi bi-send me-2 text-primary"></i>{{ title }}
            </h1>
        </div>
    </div>

    <div class="row g-4">
        {# --- Notification Form Column --- #}
        <div class="col-lg-7">
            <div class="card shadow-sm">
                <div class="card-header">
                    <h5 class="mb-0">Compose Message</h5>
                </div>
                <div class="card-body">
                    <form method="POST" action="">
                        {{ form.hidden_tag() }}
                        
                        {{ render_field(form.content, rows=5, placeholder="Enter your notification message here...") }}
                        {{ render_field(form.link_url, placeholder="e.g., https://example.com/some/link") }}

                        <div class="d-grid mt-4">
                             <button type="submit" class="btn btn-primary btn-lg">
                                <i class="bi bi-send-check-fill me-2"></i>Send to {{ recipients|length }} Recipient(s)
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        {# --- Recipient List Column --- #}
        <div class="col-lg-5">
            <div class="card shadow-sm">
                <div class="card-header">
                    <h5 class="mb-0">Recipients ({{ recipients|length }})</h5>
                </div>
                {% if recipients %}
                <div class="list-group list-group-flush" style="max-height: 500px; overflow-y: auto;">
                    {% for recipient in recipients %}
                    <div class="list-group-item d-flex align-items-center">
                        <img src="{{ url_for('static', filename=recipient.profile_photo_url or 'img/placeholders/avatar.png') }}" alt="{{ recipient.username }}" class="rounded-circle me-3" width="32" height="32">
                        <div class="flex-grow-1">
                            <div class="fw-bold">{{ recipient.full_name or recipient.username }}</div>
                            <small class="text-muted">{{ recipient.role.name.replace('_',' ').title() if recipient.role else 'User' }}</small>
                        </div>
                    </div>
                    {% endfor %}
                </div>
                {% else %}
                <div class="card-body text-center text-muted">
                    No recipients found in this group.
                </div>
                {% endif %}
            </div>
        </div>
    </div>
</div>
{% endblock %}{% extends "layout/base.html" %}

{% block page_title %}Send Notification{% endblock %}

{% block content %}
<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <h1 class="page-title font-heading mb-4">
                <i class="bi bi-send-fill me-2 text-primary"></i>Send Notification: Select a Group
            </h1>
            <p class="text-muted">Choose a recipient group to compose and send your notification.</p>
        </div>
    </div>

    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
        {# --- Staff Roles --- #}
        {% if staff_roles %}
        <div class="col">
            <div class="card h-100 shadow-sm">
                <div class="card-header bg-primary-subtle">
                    <h5 class="mb-0 font-heading"><i class="bi bi-briefcase-fill me-2"></i>Staff Roles</h5>
                </div>
                <div class="list-group list-group-flush">
                    {% for role_name in staff_roles %}
                    <a href="{{ url_for('send_notification_to_group', filter_type='role', filter_value=role_name) }}" class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
                        All {{ role_name.replace('_', ' ').title() }}s
                        <i class="bi bi-chevron-right text-muted small"></i>
                    </a>
                    {% endfor %}
                </div>
            </div>
        </div>
        {% endif %}

        {# --- Teachers by Subject --- #}
        {% if subjects %}
        <div class="col">
            <div class="card h-100 shadow-sm">
                <div class="card-header bg-success-subtle">
                    <h5 class="mb-0 font-heading"><i class="bi bi-journal-bookmark-fill me-2"></i>Teachers by Subject</h5>
                </div>
                <div class="list-group list-group-flush">
                    {% for subject in subjects %}
                    <a href="{{ url_for('send_notification_to_group', filter_type='subject', filter_value=subject) }}" class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
                        All {{ subject }} Teachers
                        <i class="bi bi-chevron-right text-muted small"></i>
                    </a>
                    {% endfor %}
                </div>
            </div>
        </div>
        {% endif %}

        {# --- Students by Class --- #}
        {% if student_classes %}
        <div class="col">
            <div class="card h-100 shadow-sm">
                <div class="card-header bg-warning-subtle">
                    <h5 class="mb-0 font-heading"><i class="bi bi-book-half me-2"></i>Students by Class</h5>
                </div>
                <div class="list-group list-group-flush" style="max-height: 400px; overflow-y: auto;">
                    {% for grade, section in student_classes %}
                    <a href="{{ url_for('send_notification_to_group', filter_type='class', filter_value=grade + '-' + section) }}" class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
                        Grade {{ grade }} - Section {{ section }}
                        <i class="bi bi-chevron-right text-muted small"></i>
                    </a>
                    {% endfor %}
                </div>
            </div>
        </div>
        {% endif %}
    </div>
</div>
{% endblock %}{% extends "layout/base.html" %}

{% block page_title %}Send Notification{% endblock %}

{% block content %}
<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <h1 class="page-title font-heading mb-4">
                <i class="bi bi-send-fill me-2 text-primary"></i>Send Notification: Select a Group
            </h1>
            <p class="text-muted">Choose a recipient group to compose and send your notification.</p>
        </div>
    </div>

    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
        {# --- Staff Roles --- #}
        {% if staff_roles %}
        <div class="col">
            <div class="card h-100 shadow-sm">
                <div class="card-header bg-primary-subtle">
                    <h5 class="mb-0 font-heading"><i class="bi bi-briefcase-fill me-2"></i>Staff Roles</h5>
                </div>
                <div class="list-group list-group-flush">
                    {% for role_name in staff_roles %}
                    <a href="{{ url_for('send_notification_to_group', filter_type='role', filter_value=role_name) }}" class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
                        {{ role_name.replace('_', ' ').title() }}s
                        <i class="bi bi-chevron-right text-muted small"></i>
                    </a>
                    {% endfor %}
                </div>
            </div>
        </div>
        {% endif %}

        {# --- Teachers by Subject --- #}
        {% if subjects %}
        <div class="col">
            <div class="card h-100 shadow-sm">
                <div class="card-header bg-success-subtle">
                    <h5 class="mb-0 font-heading"><i class="bi bi-journal-bookmark-fill me-2"></i>Teachers by Subject</h5>
                </div>
                <div class="list-group list-group-flush">
                    {% for subject in subjects %}
                    <a href="{{ url_for('send_notification_to_group', filter_type='subject', filter_value=subject) }}" class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
                        All {{ subject }} Teachers
                        <i class="bi bi-chevron-right text-muted small"></i>
                    </a>
                    {% endfor %}
                </div>
            </div>
        </div>
        {% endif %}

        {# --- Students by Class --- #}
        {% if student_classes %}
        <div class="col">
            <div class="card h-100 shadow-sm">
                <div class="card-header bg-warning-subtle">
                    <h5 class="mb-0 font-heading"><i class="bi bi-book-half me-2"></i>Students by Class</h5>
                </div>
                <div class="list-group list-group-flush" style="max-height: 400px; overflow-y: auto;">
                    {% for grade, section in student_classes %}
                    <a href="{{ url_for('send_notification_to_group', filter_type='class', filter_value=grade + '-' + section) }}" class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
                        Grade {{ grade }} - Section {{ section }}
                        <i class="bi bi-chevron-right text-muted small"></i>
                    </a>
                    {% endfor %}
                </div>
            </div>
        </div>
        {% endif %}
    </div>
</div>
{% endblock %}{% extends "layout/base.html" %}

{% set is_edit_mode = record is defined and record.id is not none %} {# Simplified is_edit for template logic #}
{% set page_action = "Edit" if is_edit_mode else "Add New" %}
{% set form_action_url = url_for('edit_behavior_record', record_id=record.id) if is_edit_mode else url_for('add_behavior_record', student_id=student.id) %}

{% block page_title %}{{ page_action }} Behavioral Record - {{ student.full_name or student.username }}{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi {{ 'bi-pencil-square text-primary' if is_edit_mode else 'bi-journal-plus text-success' }} me-2"></i>
            {{ page_action }} Behavioral Record
        </h1>
        <a href="{{ url_for('view_student_behavior_records', user_id=student.id) }}" class="btn btn-sm btn-outline-secondary">
            <i class="bi bi-arrow-left-circle me-1"></i> Back to {{ student.full_name or student.username }}'s Records
        </a>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    <div class="row justify-content-center">
        <div class="col-lg-8 col-md-10">
            <div class="card shadow-sm">
                <div class="card-header {{ 'bg-primary-subtle text-primary-emphasis' if is_edit_mode else 'bg-success-subtle text-success-emphasis' }}">
                    <h5 class="mb-0 font-heading">
                        Record for: <span class="fw-bold">{{ student.full_name or student.username }}</span> (ID: {{ student.id }})
                    </h5>
                </div>
                <div class="card-body p-4">
                    {% include 'layout/_flash_messages.html' %}

                    <form method="POST" action="{{ form_action_url }}" novalidate>
                        {{ form.hidden_tag() if form.hidden_tag }} {# CSRF Token #}

                        {# Date of Record - Backend sets this on add, could be display-only on edit or admin-editable #}
                        {% if is_edit_mode and record.date %}
                        <div class="mb-3">
                            <label class="form-label fw-medium">Date of Record (System Set):</label>
                            <input type="text" class="form-control" value="{{ record.date | datetimeformat }}" readonly disabled>
                        </div>
                        {% endif %}

                        <div class="mb-3">
                            {{ form.behavior_type.label(class="form-label fw-medium") }}
                            {{ form.behavior_type(class="form-select" + (" is-invalid" if form.behavior_type.errors else "")) }}
                            {% if form.behavior_type.errors %}<div class="invalid-feedback">{% for e in form.behavior_type.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>

                        <div class="mb-3">
                            {{ form.description.label(class="form-label fw-medium") }}
                            {{ form.description(class="form-control" + (" is-invalid" if form.description.errors else ""), rows="5", placeholder="Detailed, objective account of the behavior, context, and any immediate observations...") }}
                            {% if form.description.errors %}<div class="invalid-feedback">{% for e in form.description.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>
                        
                        <div class="mb-3">
                            {{ form.severity.label(class="form-label fw-medium") }}
                            {{ form.severity(class="form-select" + (" is-invalid" if form.severity.errors else "")) }}
                            {% if form.severity.errors %}<div class="invalid-feedback">{% for e in form.severity.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>

                        <hr class="my-4">
                        <h5 class="font-heading mb-3">Resolution & Follow-up</h5>

                        <div class="mb-3">
                            {{ form.resolution.label(class="form-label fw-medium") }}
                            {{ form.resolution(class="form-control" + (" is-invalid" if form.resolution.errors else ""), rows="4", placeholder="Actions taken, communication with parents, counseling notes, etc. (Optional)") }}
                            {% if form.resolution.errors %}<div class="invalid-feedback">{% for e in form.resolution.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>

                        <div class="form-check form-switch mb-3">
                            {{ form.is_resolved(class="form-check-input" + (" is-invalid" if form.is_resolved.errors else ""), role="switch", id="isResolvedSwitch") }}
                            {{ form.is_resolved.label(class="form-check-label fw-medium", for="isResolvedSwitch") }}
                            {% if form.is_resolved.errors %}<div class="invalid-feedback d-block">{% for e in form.is_resolved.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>
                        
                        <div class="d-flex justify-content-end mt-4">
                            <a href="{{ url_for('view_student_behavior_records', user_id=student.id) }}" class="btn btn-outline-secondary me-2">Cancel</a>
                            {{ form.submit(class="btn btn-primary px-4", value=("Update Record" if is_edit_mode else "Add Record")) }}
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}{% extends "layout/base.html" %}

{% block title %}Behavioral Records for {{ student.full_name or student.username }}{% endblock %} {# Corrected: Use student.full_name #}

{% block content %}
<div class="container-fluid mt-4">
    <!-- Student Header -->
    <div class="card shadow-sm mb-4">
        <div class="card-body d-flex flex-column flex-md-row justify-content-between align-items-center">
            <div>
                <h1 class="h3 mb-1 text-gray-800">Behavioral Records</h1>
                <h2 class="h5 mb-2 font-weight-normal text-muted">
                    {{ student.full_name or student.username }} {# Corrected #}
                </h2>
                <p class="mb-0">
                    <span class="badge bg-secondary">ID: {{ student.id }}</span> {# Corrected #}
                    <span class="badge bg-secondary">Grade: {{ student.grade or 'N/A' }} - Section: {{ student.section or 'N/A' }}</span> {# Corrected #}
                </p>
            </div>
            <div class="mt-3 mt-md-0">
                 {# Ensure can_add_record is passed from backend route view_student_behavior_records #}
                {% if can_add_record %}
                <a href="{{ url_for('add_behavior_record', student_id=student.id) }}" class="btn btn-primary">
                    <i class="bi bi-plus-circle me-1"></i> Add New Record
                </a>
                {% endif %}
            </div>
        </div>
    </div>

    <!-- Record Timeline -->
    <div class="record-timeline">
        {% for record in records %}
            {% set is_positive = record.behavior_type == 'Positive' %} {# Example based on a possible behavior_type value #}
            {% set is_concern = record.behavior_type == 'Concern' or record.severity in ['High', 'Critical'] %}
            
            <div class="card shadow-sm mb-3 border-start bw-4 
                {% if is_positive %}border-success{% elif is_concern %}border-danger{% else %}border-warning{% endif %}">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-start">
                        <div>
                            <h5 class="card-title mb-1">
                                <i class="bi {{ 'bi-award-fill text-success' if is_positive else ('bi-exclamation-triangle-fill text-danger' if is_concern else 'bi-info-circle-fill text-warning') }} me-2"></i>
                                {{ record.behavior_type }} - Severity: {{ record.severity }}
                            </h5>
                            <p class="card-subtitle mb-2 text-muted">
                                <span class="fw-bold">Date:</span> {{ record.date | datetimeformat }} | 
                                {# Location: If added to model, display here. Otherwise, part of description. #}
                                <span class="fw-bold">Reported by:</span> {{ record.recorded_by.full_name or record.recorded_by.username if record.recorded_by else 'N/A' }}
                            </p>
                        </div>
                        {# Edit/Delete buttons based on permissions passed from backend or calculated here #}
                        {% set can_edit_this = (current_user.id == record.recorded_by_id) or can_edit_any_record %}
                        {% set can_delete_this = (current_user.id == record.recorded_by_id) or can_delete_any_record %}
                        {% if can_edit_this or can_delete_this %}
                        <div class="dropdown">
                            <button class="btn btn-sm btn-light border-0" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="bi bi-three-dots-vertical"></i>
                            </button>
                            <ul class="dropdown-menu dropdown-menu-end">
                                {% if can_edit_this %}
                                <li><a class="dropdown-item" href="{{ url_for('edit_behavior_record', record_id=record.id) }}"><i class="bi bi-pencil-fill me-2"></i>Edit</a></li>
                                {% endif %}
                                {% if can_delete_this %}
                                <li>
                                    <form action="{{ url_for('delete_behavior_record', record_id=record.id) }}" method="POST" onsubmit="return confirm('Are you sure you want to delete this record?');" class="d-inline">
                                        {{ csrf_token() if csrf_token else '' }}
                                        <button type="submit" class="dropdown-item text-danger"><i class="bi bi-trash-fill me-2"></i>Delete</button>
                                    </form>
                                </li>
                                {% endif %}
                            </ul>
                        </div>
                        {% endif %}
                    </div>
                    
                    <hr>
                    
                    <div class="row">
                        <div class="col-md-6">
                            <h6>Description of Behavior</h6>
                            <p style="white-space: pre-wrap;">{{ record.description | nl2br | safe }}</p>
                        </div>
                        <div class="col-md-6">
                            <h6>Resolution/Actions Taken</h6>
                            <p style="white-space: pre-wrap;">{{ record.resolution | nl2br | safe if record.resolution else '<em class="text-muted">No resolution notes yet.</em>' }}</p>
                        </div>
                    </div>
                    
                    <div class="mt-2">
                        <span class="badge {{ 'bg-success-subtle text-success-emphasis' if record.is_resolved else 'bg-warning-subtle text-warning-emphasis' }} rounded-pill p-2">
                            Status: {{ "Resolved" if record.is_resolved else "Open / Needs Attention" }}
                        </span>
                    </div>
                </div>
            </div>
        {% else %}
            <div class="text-center p-5">
                <i class="bi bi-journal-check" style="font-size: 3rem;"></i>
                <h4 class="mt-3">No Behavioral Records Found</h4>
                <p class="text-muted">This student has a clean slate, or no records have been added yet.</p>
                {% if can_add_record %}
                <a href="{{ url_for('add_behavior_record', student_id=student.id) }}" class="btn btn-primary mt-2">
                    <i class="bi bi-plus-circle me-1"></i> Add First Record
                </a>
                {% endif %}
            </div>
        {% endfor %}
    </div>
</div>
<style>
    .bw-4 { border-width: 4px !important; }
</style>
{% endblock %}{% extends "layout/base.html" %}

{% block page_title %}My Lab Equipment - {{ lab_name }}{% endblock %}

{# Define mappings for badge colors and icons to simplify the template logic #}
{% set condition_map = {
    'New': ('success', 'bi-star-fill'),
    'Good': ('success', 'bi-check-circle-fill'),
    'Fair': ('info', 'bi-dash-circle-fill'),
    'Poor': ('warning', 'bi-exclamation-triangle-fill'),
    'Needs Repair': ('warning', 'bi-tools'),
    'Broken': ('danger', 'bi-x-octagon-fill')
} %}

{% set status_map = {
    'Available': ('success', 'bi-check-circle-fill'),
    'Pending Review': ('warning', 'bi-hourglass-split'),
    'CheckedOut': ('info', 'bi-arrow-up-right-circle-fill'),
    'Under Maintenance': ('danger', 'bi-tools'),
    'Needs Repair': ('danger', 'bi-exclamation-triangle-fill'),
    'Retired': ('dark', 'bi-slash-circle-fill'),
    'Lost': ('dark', 'bi-question-diamond-fill')
} %}


{% block content_header %}
<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2 font-heading">
        <i class="bi bi-binoculars-fill me-2 text-primary"></i>Lab Equipment: {{ lab_name }}
    </h1>
    <div class="btn-toolbar mb-2 mb-md-0">
         <a href="{{ url_for('add_asset') }}" class="btn btn-sm btn-success me-2" title="Add or request new equipment for your lab">
            <i class="bi bi-plus-circle-dotted me-1"></i>Add Equipment
        </a>
        <a href="{{ url_for('teacher_dashboard') }}" class="btn btn-sm btn-outline-secondary">
            <i class="bi bi-arrow-left-circle me-1"></i>Back to Dashboard
        </a>
    </div>
</div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    {% include 'layout/_flash_messages.html' %}

    {# Case 1: User is not assigned to a lab #}
    {% if not current_user.lab_id %}
        <div class="alert alert-warning" role="alert">
            <h4 class="alert-heading"><i class="bi bi-exclamation-triangle-fill me-2"></i>Not Assigned to a Lab</h4>
            <p>You are not currently assigned to a specific lab, so no equipment can be displayed.</p>
            <hr>
            <p class="mb-0">If you believe this is an error, please contact an administrator.</p>
        </div>

    {# Case 2: Lab has equipment #}
    {% elif lab_equipment %}
        <div class="card shadow-sm">
            <div class="card-header bg-light-subtle">
                <h5 class="mb-0 font-heading">Equipment in {{ lab_name }}</h5>
            </div>
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover table-striped mb-0 align-middle">
                        <thead class="table-light">
                            <tr>
                                <th scope="col">Asset ID</th>
                                <th scope="col">Name</th>
                                <th scope="col">Category</th>
                                <th scope="col" class="text-center">Quantity</th>
                                <th scope="col">Condition</th>
                                <th scope="col">Status</th>
                                <th scope="col" class="text-center">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% for asset in lab_equipment %}
                            {# Get badge info from our maps, with a fallback for unknown values #}
                            {% set cond_info = condition_map.get(asset.condition, ('secondary', 'bi-question-circle')) %}
                            {% set stat_info = status_map.get(asset.status, ('secondary', 'bi-question-circle')) %}
                            <tr>
                                <td>{{ asset.id }}</td>
                                <td class="fw-bold">{{ asset.name | truncate(40) }}</td>
                                <td><span class="badge bg-secondary-subtle text-secondary-emphasis fw-normal">{{ asset.category.name or 'N/A' }}</span></td>
                                <td class="text-center">{{ asset.quantity }}</td>
                                <td>
                                    <span class="badge bg-{{ cond_info[0] }}-subtle text-{{ cond_info[0] }}-emphasis">
                                        <i class="bi {{ cond_info[1] }} me-1"></i>{{ asset.condition }}
                                    </span>
                                </td>
                                <td>
                                    <span class="badge bg-{{ stat_info[0] }}-subtle text-{{ stat_info[0] }}-emphasis">
                                        <i class="bi {{ stat_info[1] }} me-1"></i>
                                        {% if asset.status == 'CheckedOut' %}Checked Out{% else %}{{ asset.status or 'Unknown' }}{% endif %}
                                    </span>
                                </td>
                                <td class="text-center">
                                    <a href="{{ url_for('report_asset_specific', asset_id=asset.id) }}" class="btn btn-sm btn-outline-warning" data-bs-toggle="tooltip" title="Report an issue with this asset">
                                        <i class="bi bi-exclamation-triangle-fill"></i> Report
                                    </a>
                                </td>
                            </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    {# Case 3: Lab is assigned but has no equipment #}
    {% else %}
        <div class="text-center text-muted p-5">
            <i class="bi bi-box-fill display-3 mb-3"></i>
            <h4 class="font-heading">No Equipment Listed</h4>
            <p>There is currently no equipment listed for your assigned lab: <strong>{{ lab_name }}</strong>.</p>
            <p>You can <a href="{{ url_for('add_asset') }}">add or request new equipment</a> to get started.</p>
        </div>
    {% endif %}
</div>
{% endblock %}{% extends "layout/base.html" %}

{% set student_page_title = "Student Profile: " + (student.full_name or student.username if student else "N/A") %}
{% block page_title %}{{ student_page_title }}{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0 text-truncate" style="max-width: 70%;">
            <i class="bi bi-person-vcard-fill me-2 text-primary"></i>{{ student_page_title }}
        </h1>
        <a href="{{ request.referrer or url_for('student_database_block', grade=student.grade, section=student.section) if student and student.grade and student.section else url_for('teacher_dashboard') }}" class="btn btn-sm btn-outline-secondary">
            <i class="bi bi-arrow-left-circle me-1"></i> Back
        </a>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    {% include 'layout/_flash_messages.html' %}

    {% if student %}
    <div class="row g-4">
        {# Left Column: Student Info & Quick Actions #}
        <div class="col-lg-4 col-xl-3">
            <div class="card shadow-sm mb-4 text-center">
                <div class="card-body">
                    {% set student_avatar = url_for('static', filename=(student.profile_photo_url if student.profile_photo_url else 'img/placeholders/user_avatar_default.png')) %}
                    <img src="{{ student_avatar }}" alt="{{ student.username }}" class="rounded-circle mb-3 shadow-sm" style="width: 120px; height: 120px; object-fit: cover; border: 3px solid var(--nexus-border-color);">
                    <h4 class="font-heading mb-1">{{ student.full_name or student.username }}</h4>
                    <p class="text-muted mb-0">{{ student.username }}</p>
                    <p class="text-muted"><small>Grade: {{ student.grade or 'N/A' }} | Section: {{ student.section or 'N/A' }}</small></p>
                </div>
            </div>

            <div class="card shadow-sm mb-4">
                 <div class="card-header">
                    <h5 class="mb-0 font-heading"><i class="bi bi-person-lines-fill me-2"></i>Contact & Details</h5>
                </div>
                <ul class="list-group list-group-flush small">
                    <li class="list-group-item"><strong>Email:</strong> {{ student.email or 'N/A' }}</li>
                    <li class="list-group-item"><strong>Phone:</strong> {{ student.phone or 'N/A' }}</li>
                    <li class="list-group-item"><strong>Date of Birth:</strong> {{ student.date_of_birth | dateformat if student.date_of_birth else 'N/A' }} (Age: {{ student.age or 'N/A' }})</li>
                    <li class="list-group-item"><strong>Gender:</strong> {{ student.gender or student.sex or 'N/A' }}</li>
                    {# Add more relevant details if available on User model #}
                </ul>
            </div>

            {% set student_profile_quick_links = [
                {'url': url_for('add_behavior_record', student_id=student.id), 'text': 'Log Behavior', 'icon': 'bi-journal-plus', 'color_class': 'text-warning'},
                {'url': url_for('universal_chat', target_user_id=student.id), 'text': 'Send Message', 'icon': 'bi-chat-dots-fill', 'color_class': 'text-success'},
                {'url': url_for('send_notification_to_user', receiver_id=student.id), 'text': 'Send Notification', 'icon': 'bi-bell-fill', 'color_class': 'text-info'}
            ] %}
            {{ render_quick_links(student_profile_quick_links, "Teacher Actions") }}
        </div>

        {# Right Column: Academic Performance, Attendance, Behavior #}
        <div class="col-lg-8 col-xl-9">
            {# Marks/Grades Section #}
            <div class="card shadow-sm mb-4">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0 font-heading"><i class="bi bi-award-fill me-2"></i>Academic Performance</h5>
                    {% if current_user.role.name == 'teacher' and teacher_profile and student.grade == teacher_profile.grade and student.section == teacher_profile.section %}
                    <a href="{{ url_for('enter_marks') }}?student_id={{ student.id }}" class="btn btn-sm btn-outline-primary"><i class="bi bi-pencil-square me-1"></i> Edit Marks</a>
                    {% endif %}
                </div>
                <div class="card-body p-0">
                     {% if student_marks and student_marks | length > 0 %}
                        <div class="table-responsive">
                            <table class="table table-striped table-hover mb-0">
                                <thead class="table-light">
                                    <tr>
                                        <th>Subject</th>
                                        <th class="text-center">Sem 1</th>
                                        <th class="text-center">Sem 2</th>
                                        <th class="text-center">Total</th>
                                        <th class="text-center">Average</th>
                                        <th class="text-center">Rank</th>
                                    </tr>
                                </thead>
                                <tbody>
                                {% for mark in student_marks %}
                                    <tr>
                                        <td class="fw-medium">{{ mark.subject }}</td>
                                        <td class="text-center">{{ mark.semester_1 if mark.semester_1 is not none else '-' }}</td>
                                        <td class="text-center">{{ mark.semester_2 if mark.semester_2 is not none else '-' }}</td>
                                        <td class="text-center fw-bold">{{ mark.total if mark.total is not none else '-' }}</td>
                                        <td class="text-center fw-bold {{ 'text-success' if mark.average and mark.average >= 75 else ('text-warning' if mark.average and mark.average >= 50 else 'text-danger') }}">{{ mark.average if mark.average is not none else '-' }}</td>
                                        <td class="text-center">{{ mark.rank if mark.rank is not none else '-' }}</td>
                                    </tr>
                                {% endfor %}
                                </tbody>
                            </table>
                        </div>
                    {% else %}
                        <p class="text-muted text-center p-3">No marks recorded for this student yet.</p>
                    {% endif %}
                </div>
            </div>

            {# Attendance Section #}
            <div class="card shadow-sm mb-4">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0 font-heading"><i class="bi bi-calendar-check-fill me-2"></i>Recent Attendance</h5>
                     {% if current_user.role.name == 'teacher' and teacher_profile and student.grade == teacher_profile.grade and student.section == teacher_profile.section %}
                     <a href="{{ url_for('mark_attendance') }}?date={{ now.strftime('%Y-%m-%d') }}&highlight_student={{ student.id }}" class="btn btn-sm btn-outline-primary"><i class="bi bi-calendar-plus me-1"></i> Mark Today's Attendance</a>
                    {% endif %}
                </div>
                 <div class="list-group list-group-flush" style="max-height: 250px; overflow-y:auto;">
                    {% if student_attendance and student_attendance | length > 0 %}
                        {% for att in student_attendance %}
                            <div class="list-group-item d-flex justify-content-between align-items-center">
                                <span>{{ att.date | dateformat('%A, %b %d, %Y') }}</span>
                                <span class="badge fs-08rem p-2 rounded-pill
                                    {% if att.status == 'Present' %} bg-success-subtle text-success-emphasis
                                    {% elif att.status == 'Late' %} bg-warning-subtle text-warning-emphasis
                                    {% elif att.status == 'Excused' %} bg-info-subtle text-info-emphasis
                                    {% else %} bg-danger-subtle text-danger-emphasis {% endif %}">
                                    {{ att.status }}
                                </span>
                            </div>
                        {% endfor %}
                    {% else %}
                        <div class="list-group-item text-muted text-center p-3">No recent attendance records.</div>
                    {% endif %}
                </div>
            </div>

            {# Behavior Records Section #}
            <div class="card shadow-sm">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0 font-heading"><i class="bi bi-person-exclamation me-2"></i>Behavior Log</h5>
                    <a href="{{ url_for('view_student_behavior_records', user_id=student.id) }}" class="btn btn-sm btn-outline-secondary"><i class="bi bi-view-list me-1"></i> View Full Log & Add</a>
                </div>
                 <div class="list-group list-group-flush" style="max-height: 250px; overflow-y:auto;">
                    {% if student_behavior_records and student_behavior_records | length > 0 %}
                        {% for record in student_behavior_records %}
                            <div class="list-group-item">
                                <div class="d-flex w-100 justify-content-between">
                                    <span class="fw-medium">{{ record.behavior_type }} - {{ record.date | dateformat }}</span>
                                    <small class="text-muted">Severity: {{ record.severity }}</small>
                                </div>
                                <p class="mb-1 small text-muted">{{ record.description | truncate(100) }}</p>
                            </div>
                        {% endfor %}
                    {% else %}
                         <div class="list-group-item text-muted text-center p-3">No behavior records logged recently.</div>
                    {% endif %}
                </div>
            </div>
        </div>
    </div>
    {% else %}
        <div class="alert alert-danger text-center" role="alert">
            <h4 class="alert-heading">Student Not Found</h4>
            <p>The requested student profile could not be loaded.</p>
        </div>
    {% endif %}
</div>

{# Re-define macros if not globally available or imported from _macros.html #}
{% macro render_quick_links(links, title="Quick Actions") %}
    {% if links and links | length > 0 %}
    <div class="card shadow-sm dashboard-quick-links-card">
        <div class="card-header">
            <h5 class="mb-0 font-heading"><i class="bi bi-lightning-charge-fill me-2"></i>{{ title }}</h5>
        </div>
        <div class="list-group list-group-flush">
            {% for link in links %}
                <a href="{{ link.url | default('#') }}" class="list-group-item list-group-item-action d-flex align-items-center py-3">
                    <i class="bi {{ link.icon | default('bi-link-45deg') }} fs-5 me-3 {{ link.color_class | default('text-primary') }}" style="min-width: 24px;"></i>
                    <span class="fw-medium">{{ link.text | default('Link') }}</span>
                    <i class="bi bi-chevron-right ms-auto text-muted small"></i>
                </a>
            {% endfor %}
        </div>
    </div>
    {% endif %}
{% endmacro %}

{% endblock %}{% extends "layout/base.html" %}

{# DEFINE MACROS AT THE TOP #}
{% macro render_stat_card(title, value, icon, color_class, url=None, url_text='View Details') %}
<div class="col">
    <div class="card dashboard-stat-card h-100 shadow-sm">
        <div class="card-body d-flex align-items-center">
            <div class="stat-icon display-4 me-3 {{ color_class or 'text-primary' }}">
                <i class="bi {{ icon or 'bi-bar-chart-line-fill' }}"></i>
            </div>
            <div>
                <h6 class="card-subtitle mb-1 text-body-secondary text-uppercase" style="font-size: 0.75rem;">{{ title }}</h6>
                <p class="card-text display-6 fw-bold mb-0 font-heading">{{ value }}</p>
            </div>
        </div>
        {% if url and url != '#' %}
        <a href="{{ url }}" class="card-footer text-decoration-none text-muted bg-light-subtle hover-bg-light small">
            {{ url_text }} <i class="bi bi-arrow-right-short ms-1"></i>
        </a>
        {% endif %}
    </div>
</div>
{% endmacro %}

{% macro render_quick_links(links, title="Quick Actions", icon="bi-lightning-charge-fill") %}
    {% if links %}
    <div class="card shadow-sm dashboard-quick-links-card">
        <div class="card-header bg-light-subtle">
            <h5 class="mb-0 font-heading"><i class="bi {{ icon }} me-2"></i>{{ title }}</h5>
        </div>
        <div class="list-group list-group-flush">
            {% for link in links %}
                {# This condition now correctly handles the permissions check #}
                {% if link.condition is not defined or link.condition %}
                    <a href="{{ link.url | default('#') }}" class="list-group-item list-group-item-action d-flex align-items-center py-3">
                        <i class="bi {{ link.icon | default('bi-link-45deg') }} fs-5 me-3 {{ link.color_class | default('text-primary') }}" style="min-width: 24px;"></i>
                        <span class="fw-medium">{{ link.text or 'Link' }}</span>
                        <i class="bi bi-chevron-right ms-auto small"></i>
                    </a>
                {% endif %}
            {% endfor %}
        </div>
    </div>
    {% endif %}
{% endmacro %}

{% macro render_recent_activity(activities) %}
<div class="card shadow-sm recent-activity-card">
    <div class="card-header bg-light-subtle">
        <h5 class="mb-0 font-heading"><i class="bi bi-clock-history me-2"></i>Recent Activity</h5>
    </div>
    <div class="card-body" style="max-height: 400px; overflow-y: auto;">
        {% if activities %}
            <ul class="list-unstyled mb-0">
                {% for activity in activities %}
                    <li class="d-flex align-items-start pb-3 {% if not loop.last %}mb-3 border-bottom{% endif %}">
                        <div class="activity-icon me-3">
                            <span class="badge bg-{{ activity.badge_color or 'secondary' }} p-2 rounded-circle d-flex">
                                <i class="bi {{ activity.icon or 'bi-bell' }} fs-5 text-white"></i>
                            </span>
                        </div>
                        <div class="activity-content">
                            {# FIX: Correctly accesses Notification object properties #}
                            <p class="mb-1">{{ activity.content | safe }}</p>
                            <small class="text-muted">
                                <i class="bi bi-calendar3 me-1"></i>{{ activity.timestamp | humanize_time_diff }}
                            </small>
                            {% if activity.link_url %}
                                <a href="{{ activity.link_url }}" class="ms-2 small text-decoration-none">View <i class="bi bi-arrow-up-right-square"></i></a>
                            {% endif %}
                        </div>
                    </li>
                {% endfor %}
            </ul>
        {% else %}
            <div class="text-center text-muted p-4"><i class="bi bi-moon-stars fs-1 mb-2"></i><p>No recent activity.</p></div>
        {% endif %}
    </div>
    {% if activities and activities|length > 5 %}
    <a href="{{ url_for('view_notifications') }}" class="card-footer text-center text-decoration-none text-muted bg-light-subtle hover-bg-light small">View All Activity</a>
    {% endif %}
</div>
{% endmacro %}
{# END OF MACRO DEFINITIONS #}

{% block page_title %}Teacher Dashboard{% endblock %}

{% block content_header %}
<div class="d-flex justify-content-between align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2 font-heading"><i class="bi bi-person-video3 me-2 text-primary"></i>Teacher Dashboard</h1>
</div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    <div class="alert alert-primary-subtle border-primary-subtle mb-4">
        <h4 class="alert-heading font-heading">Welcome, {{ current_user.full_name or current_user.username }}!</h4>
        {% if teacher_profile and teacher_profile.subject %}
            <p class="mb-0">You are assigned to teach <strong>{{ teacher_profile.subject }}</strong> for <strong>Grade {{ teacher_profile.grade or 'N/A' }} - Section {{ teacher_profile.section or 'N/A' }}</strong>.</p>
        {% else %}
            <p class="mb-0">Your teaching profile seems incomplete. Please contact an administrator.</p>
        {% endif %}
    </div>

    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-4 g-4 mb-4">
        {{ render_stat_card("Unread Notifications", unread_notifications_count|default(0), "bi-bell-fill", "text-warning", url_for('view_notifications')) }}
        {{ render_stat_card("Unread Messages", unread_messages_count|default(0), "bi-chat-left-text-fill", "text-success", url_for('contacts_list')) }}
        {{ render_stat_card("Students in Class", students_count|default(0), "bi-people-fill", "text-info", url_for('student_database_block', grade=(teacher_profile.grade or '0'), section=(teacher_profile.section or '0')) if teacher_profile and teacher_profile.grade and teacher_profile.section else "#") }}
        {{ render_stat_card("Assigned Tasks", my_tasks|length, "bi-list-task", "text-primary", url_for('my_tasks')) }}
    </div>

    <div class="row g-4">
        <div class="col-lg-4">
            {% set teacher_quick_links = [
                {'url': url_for('mark_attendance'), 'text': 'Mark Attendance', 'icon': 'bi-calendar-check-fill', 'color_class': 'text-primary'},
                {'url': url_for('enter_marks'), 'text': 'Enter Student Marks', 'icon': 'bi-pencil-square', 'color_class': 'text-success'},
                {'url': url_for('teacher_lab_equipment'), 'text': 'My Lab Equipment', 'icon': 'bi-binoculars-fill', 'color_class': 'text-info'},
                {'url': url_for('my_tasks'), 'text': 'My Tasks', 'icon': 'bi-list-task', 'color_class': 'text-secondary'},
                {'url': url_for('submit_request'), 'text': 'Submit a Request', 'icon': 'bi-file-earmark-plus-fill', 'color_class': 'text-warning', 'condition': permissions and permissions.can_create_request }
            ] %}
            {{ render_quick_links(teacher_quick_links, title="Classroom Actions") }}

            <div class="card shadow-sm mt-4 content-placeholder">
                <div class="card-header bg-light-subtle"><h5 class="mb-0 font-heading"><i class="bi bi-table me-2"></i>My Schedule</h5></div>
                <div class="card-body text-center text-muted placeholder-glow py-5"><span class="placeholder col-8 rounded-pill"></span></div>
            </div>
        </div>

        <div class="col-lg-8">
            {{ render_recent_activity(recent_activities) }}

            <div class="card shadow-sm mt-4 content-placeholder">
                <div class="card-header bg-light-subtle"><h5 class="mb-0 font-heading"><i class="bi bi-graph-up-arrow me-2"></i>Class Performance Overview</h5></div>
                <div class="card-body text-center text-muted placeholder-glow py-5"><span class="placeholder col-6 rounded-pill"></span></div>
            </div>
        </div>
    </div>
</div>
{% endblock %}{% extends "layout/base.html" %}

{% block title %}Take Attendance - Grade {{ teacher_profile.grade or 'N/A' }} Section {{ teacher_profile.section or 'N/A' }}{% endblock %}

{% block content_header %}
<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2 font-heading">
        <i class="bi bi-person-check-fill me-2 text-primary"></i>Take Attendance
    </h1>
    <div class="d-flex align-items-center">
        {# Date selector form #}
        <form method="GET" action="{{ url_for('mark_attendance') }}" class="d-inline-block me-2">
            <input type="date" name="date" class="form-control form-control-sm"
                   value="{{ attendance_date_str }}" onchange="this.form.submit()"
                   data-bs-toggle="tooltip" title="Select a date to view or mark attendance">
        </form>
    </div>
</div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    {% include 'layout/_flash_messages.html' %}

    <div class="card shadow-sm">
        <div class="card-header bg-light-subtle d-flex justify-content-between align-items-center">
            <div>
                <h5 class="mb-0 font-heading">Class: Grade {{ teacher_profile.grade or 'N/A' }} | Section: {{ teacher_profile.section or 'N/A' }}</h5>
                <small class="text-body-secondary">Date: {{ attendance_date_obj.strftime('%A, %B %d, %Y') if attendance_date_obj else 'N/A' }}</small>
            </div>
            <button type="button" id="markAllPresentBtn" class="btn btn-sm btn-outline-success">
                <i class="bi bi-check-all me-1"></i>Mark All Present
            </button>
        </div>
        <div class="card-body p-0">
            {% if students %}
            <form method="POST" action="{{ url_for('mark_attendance') }}">
                {{ form.csrf_token }} {# Assumes form object is passed for CSRF protection #}
                <input type="hidden" name="date" value="{{ attendance_date_str }}">

                <div class="table-responsive">
                    <table class="table table-hover table-striped mb-0 align-middle">
                        <thead class="table-light">
                            <tr>
                                <th scope="col" style="width: 5%;">#</th>
                                <th scope="col">Student Name</th>
                                <th scope="col" class="text-center" style="width: 30%;">Status</th>
                                <th scope="col">Notes (Optional)</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% for student in students %}
                                {# This simplifies the logic by setting the status once per student. Defaults to 'Present' if no record exists. #}
                                {% set existing_record = existing_attendance_map.get(student.id) %}
                                {% set current_status = existing_record.status if existing_record else 'Present' %}
                                {% set current_notes = existing_record.notes if existing_record else '' %}
                            <tr>
                                <td class="text-center">{{ loop.index }}</td>
                                <td>
                                    <div class="d-flex align-items-center">
                                        <img src="{{ url_for('static', filename=(student.profile_photo_url or 'img/placeholders/user_avatar_default.png')) }}" alt="{{ student.username }}" class="rounded-circle me-2" width="32" height="32">
                                        <div>
                                            <div class="fw-bold">{{ student.full_name or student.username }}</div>
                                            <small class="text-muted">{{ student.username }}</small>
                                        </div>
                                    </div>
                                </td>
                                <td class="text-center">
                                    <div class="btn-group" role="group" aria-label="Attendance status for {{ student.username }}">
                                        {# Present Button #}
                                        <input type="radio" class="btn-check" name="status_{{ student.id }}" id="present_{{ student.id }}" value="Present" autocomplete="off" {% if current_status == 'Present' %}checked{% endif %}>
                                        <label class="btn btn-sm btn-outline-primary" for="present_{{ student.id }}"><i class="bi bi-check-circle-fill me-1"></i>Present</label>

                                        {# Absent Button #}
                                        <input type="radio" class="btn-check" name="status_{{ student.id }}" id="absent_{{ student.id }}" value="Absent" autocomplete="off" {% if current_status == 'Absent' %}checked{% endif %}>
                                        <label class="btn btn-sm btn-outline-danger" for="absent_{{ student.id }}"><i class="bi bi-x-circle-fill me-1"></i>Absent</label>

                                        {# Late Button #}
                                        <input type="radio" class="btn-check" name="status_{{ student.id }}" id="late_{{ student.id }}" value="Late" autocomplete="off" {% if current_status == 'Late' %}checked{% endif %}>
                                        <label class="btn btn-sm btn-outline-warning" for="late_{{ student.id }}"><i class="bi bi-clock-fill me-1"></i>Late</label>

                                        {# Excused Button #}
                                        <input type="radio" class="btn-check" name="status_{{ student.id }}" id="excused_{{ student.id }}" value="Excused" autocomplete="off" {% if current_status == 'Excused' %}checked{% endif %}>
                                        <label class="btn btn-sm btn-outline-info" for="excused_{{ student.id }}"><i class="bi bi-info-circle-fill me-1"></i>Excused</label>
                                    </div>
                                </td>
                                <td>
                                    <input type="text" name="notes_{{ student.id }}" class="form-control form-control-sm" value="{{ current_notes }}" placeholder="Add a note...">
                                </td>
                            </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                </div>
                <div class="card-footer text-end">
                    <button type="submit" class="btn btn-primary btn-lg">
                        <i class="bi bi-save-fill me-2"></i>Save Attendance
                    </button>
                </div>
            </form>
            {% else %}
                <div class="text-center p-5 text-muted">
                    <i class="bi bi-people-fill display-4 mb-3"></i>
                    <p class="mb-0">No active students found for this class.</p>
                </div>
            {% endif %}
        </div>
    </div>
</div>
{% endblock %}

{% block body_scripts %}
<script>
document.addEventListener('DOMContentLoaded', function () {
    const markAllPresentBtn = document.getElementById('markAllPresentBtn');
    if (markAllPresentBtn) {
        markAllPresentBtn.addEventListener('click', function () {
            // Find all radio buttons with the value "Present" and check them
            const presentRadios = document.querySelectorAll('input[type="radio"][value="Present"]');
            presentRadios.forEach(function(radio) {
                radio.checked = true;
            });
        });
    }
});
</script>
{% endblock %}{% extends "layout/base.html" %}

{% block title %}Enter Marks for {{ subject_taught }}{% endblock %}

{% block content_header %}
<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2 font-heading">
        <i class="bi bi-pencil-square me-2 text-primary"></i>Enter/Edit Marks
    </h1>
    <a href="{{ url_for('teacher_dashboard') }}" class="btn btn-sm btn-outline-secondary">
        <i class="bi bi-arrow-left-circle me-1"></i>Back to Dashboard
    </a>
</div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    {% include 'layout/_flash_messages.html' %}

    <div class="card shadow-sm mb-4">
        <div class="card-header bg-light-subtle">
            <h5 class="mb-0 font-heading">Marks for Subject: <span class="text-primary">{{ subject_taught }}</span></h5>
            <small class="text-body-secondary">Class: Grade {{ teacher_profile.grade or 'N/A' }} - Section {{ teacher_profile.section or 'N/A' }}</small>
        </div>
        <div class="card-body">
            {% if students %}
                <div class="alert alert-info small py-2">
                    <i class="bi bi-info-circle-fill me-2"></i>
                    Enter scores for each semester. Total, Average, and Rank are calculated automatically upon saving. You can save partial marks (e.g., only Semester 1) and update the rest later.
                </div>

                <form method="POST" action="{{ url_for('enter_marks') }}" novalidate>
                    {{ csrf_token() }} {# Assumes a global CSRF token function #}
                    <div class="table-responsive">
                        <table class="table table-bordered table-striped table-hover align-middle" id="marksTable">
                            <thead class="table-light text-center">
                                <tr>
                                    <th scope="col" style="width: 5%;">#</th>
                                    <th scope="col" class="text-start">Student Name</th>
                                    <th scope="col" class="text-start">Username</th>
                                    <th scope="col" style="width: 15%;">Semester 1 (100)</th>
                                    <th scope="col" style="width: 15%;">Semester 2 (100)</th>
                                    <th scope="col" style="width: 10%;">Total</th>
                                    <th scope="col" style="width: 10%;">Average</th>
                                    <th scope="col" style="width: 10%;">Rank</th>
                                </tr>
                            </thead>
                            <tbody>
                                {% for student in students %}
                                    {# Set variables for cleaner access inside the loop #}
                                    {% set mark = existing_marks_map.get(student.id) %}
                                    {% set errors = validation_errors.get(student.id, []) %}

                                    <tr>
                                        <td class="text-center">{{ loop.index }}</td>
                                        <td>{{ student.full_name or student.username }}</td>
                                        <td class="text-body-secondary">{{ student.username }}</td>

                                        {# Semester 1 Input #}
                                        <td>
                                            {# This logic correctly preserves user input on validation error #}
                                            {% set s1_value = mark.semester_1 if mark and mark.semester_1 is not none else request.form.get('semester_1_' + student.id|string, '') %}
                                            <input type="number" name="semester_1_{{ student.id }}"
                                                   class="form-control form-control-sm text-center marks-input {{ 'is-invalid' if errors and 'Semester 1' in (errors|join) }}"
                                                   value="{{ s1_value }}"
                                                   min="0" max="100" step="0.1" placeholder="Score">
                                        </td>

                                        {# Semester 2 Input #}
                                        <td>
                                            {% set s2_value = mark.semester_2 if mark and mark.semester_2 is not none else request.form.get('semester_2_' + student.id|string, '') %}
                                            <input type="number" name="semester_2_{{ student.id }}"
                                                   class="form-control form-control-sm text-center marks-input {{ 'is-invalid' if errors and 'Semester 2' in (errors|join) }}"
                                                   value="{{ s2_value }}"
                                                   min="0" max="100" step="0.1" placeholder="Score">
                                        </td>

                                        {# Calculated Fields #}
                                        <td class="text-center fw-medium">{{ mark.total if mark and mark.total is not none else '—' }}</td>
                                        <td class="text-center fw-bold 
                                            {% if mark and mark.average is not none %}
                                                {% if mark.average >= 75 %}text-success
                                                {% elif mark.average >= 50 %}text-warning
                                                {% else %}text-danger{% endif %}
                                            {% endif %}">
                                            {{ "%.2f"|format(mark.average) if mark and mark.average is not none else '—' }}
                                        </td>
                                        <td class="text-center fw-medium">{{ mark.rank if mark and mark.rank is not none else '—' }}</td>
                                    </tr>
                                {% endfor %}
                            </tbody>
                        </table>
                    </div>
                    <div class="d-flex justify-content-end mt-4">
                        <button type="submit" class="btn btn-primary btn-lg">
                            <i class="bi bi-save-fill me-2"></i>Save All Marks
                        </button>
                    </div>
                </form>
            {% else %}
                <div class="alert alert-info text-center">
                    <p class="mb-0">No active students found for Grade {{ teacher_profile.grade or 'N/A' }}, Section {{ teacher_profile.section or 'N/A' }}.</p>
                </div>
            {% endif %}
        </div>
    </div>
</div>
{% endblock %}{# templates/social/global/feed.html #}
{% extends "layout/base.html" %}

{% block page_title %}Nexus Pulse - Community Feed{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="page-title mb-0">Nexus Pulse</h1>
    </div>
{% endblock %}

{% block content %}
<div class="row">
    <div class="col-lg-8 mx-auto">
        
        {# UPDATE: Post creation form is now inside a card for better styling #}
        <div class="card mb-4" id="globalPostCreateContainer">
            <div class="card-body">
                {% if global_post_create_form %}
                    {% with 
                        form = global_post_create_form,
                        submit_url = url_for('create_global_post'),
                        placeholder_text = "Share something with the community...",
                        submit_button_text = "Post",
                        form_id = "globalPostCreateForm",
                        textarea_id = "globalPostTextarea",
                        file_input_name = "attached_file",
                        allow_file_upload = True
                    %}
                        {% include "partials/_social_content_form.html" %}
                    {% endwith %}
                {% else %}
                    <p class="text-muted">Post creation form is unavailable. Please contact an administrator.</p>
                {% endif %}
            </div>
        </div>

        {# UPDATE: Added filter tabs for the feed #}
        <div class="feed-filters mb-3">
            <ul class="nav nav-pills nav-fill">
                <li class="nav-item">
                    <a class="nav-link {% if request.args.get('filter', 'all') == 'all' %}active{% endif %}" 
                       aria-current="page" 
                       href="{{ url_for('social_feed_placeholder', filter='all') }}">All Posts</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link {% if request.args.get('filter') == 'following' %}active{% endif %}" 
                       href="{{ url_for('social_feed_placeholder', filter='following') }}">Following</a>
                </li>
            </ul>
        </div>


        <div id="globalFeedContainer" class="social-feed-container">
            <div class="text-center py-5 content-placeholder" id="globalFeedLoadingPlaceholder">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Loading posts...</span>
                </div>
                <p class="mt-2 text-muted">Loading Nexus Pulse...</p>
            </div>
            <div class="text-center py-5 d-none content-placeholder" id="globalFeedEmptyPlaceholder">
                <i class="bi bi-megaphone-fill display-1 text-muted"></i>
                <p class="mt-3 lead text-muted">The Pulse is quiet right now.</p>
                <p class="text-muted">Be the first to share something!</p>
            </div>
        </div>

        <div id="loadMoreGlobalPostsTrigger" class="text-center my-4 d-none">
            <button class="btn btn-outline-primary load-more-btn" data-feed-type="global">
                <span class="spinner-border spinner-border-sm d-none me-1" role="status" aria-hidden="true"></span>
                Load More Posts
            </button>
        </div>
    </div>
</div>
{% endblock %}

{% block scripts %}
    {{ super() }}
    {# UPDATE: Pass filter and highlight_post_id to the JS initializer #}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            if (typeof nexusSocial !== 'undefined' && typeof nexusSocial.initGlobalFeed === 'function') {
                const urlParams = new URLSearchParams(window.location.search);
                
                nexusSocial.initGlobalFeed({
                    feedContainerId: 'globalFeedContainer',
                    loadingPlaceholderId: 'globalFeedLoadingPlaceholder',
                    emptyPlaceholderId: 'globalFeedEmptyPlaceholder',
                    loadMoreTriggerId: 'loadMoreGlobalPostsTrigger',
                    createFormId: 'globalPostCreateForm',
                    apiEndpointFetchPosts: '{{ url_for("get_global_posts") }}',
                    apiEndpointCreatePost: '{{ url_for("create_global_post") }}',
                    
                    // New parameters for added features
                    filter: urlParams.get('filter') || 'all',
                    highlightPostId: '{{ highlight_post_id or 'null' }}'
                });
            } else {
                console.error('nexusSocial or nexusSocial.initGlobalFeed is not defined. Ensure social.js is correctly loaded.');
            }
        });
    </script>
{% endblock %}{% extends "layout/base.html" %}

{% block title %}My Social Groups{% endblock %}

{% block content_header %}
<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2 font-heading">
        <i class="bi bi-collection-fill me-2 text-primary"></i>My Social Groups
    </h1>
    <div class="btn-toolbar mb-2 mb-md-0">
        {# The "Create Group" button is permission-driven and can stay #}
        {% if current_user.role.name in ['hr_ceo', 'system_admin', 'teacher'] %}
            <a href="{{ url_for('create_social_group') }}" class="btn btn-sm btn-primary shadow-sm">
                <i class="bi bi-plus-circle-fill me-1"></i>Create New Group
            </a>
        {% endif %}
    </div>
</div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    {% include 'layout/_flash_messages.html' %}

    {# FIX: The template now correctly iterates over `my_groups` from the backend #}
    <div class="row row-cols-1 row-cols-md-2 row-cols-xl-3 g-4">
        {% for group in my_groups %}
            {# FIX: Includes the newly created partial to render each group card #}
            {% include "partials/_group_card_item.html" %}
        {% else %}
            {# FIX: The empty state message is now relevant to a "My Groups" page #}
            <div class="col-12">
                <div class="text-center text-muted p-5 bg-light rounded">
                    <i class="bi bi-wind fs-1 mb-3"></i>
                    <h4 class="font-heading">It's a bit empty here...</h4>
                    <p>You haven't joined or created any social groups yet.</p>
                    {# A 'discover' page would be linked here if it existed. For now, create is the main action. #}
                    {% if current_user.role.name in ['hr_ceo', 'system_admin', 'teacher'] %}
                        <a href="{{ url_for('create_social_group') }}" class="btn btn-primary">Create a Group</a>
                    {% endif %}
                </div>
            </div>
        {% endfor %}
    </div>
</div>
{% endblock %}{% extends "layout/base.html" %}

{% block page_title %}{{ group.name }} - Group{% endblock %}

{% block head_css %}
<style>
    .group-chat-window { /* Similar to universal_chat.html but can be distinct */
        height: calc(100vh - 56px - 56px - 70px - 3rem - 70px); /* Adjust for group header */
        min-height: 350px;
        overflow-y: auto;
        display: flex;
        flex-direction: column-reverse;
        padding: 1rem;
        background-color: var(--nexus-body-bg);
    }
    .group-chat-input-area {
        border-top: 1px solid var(--nexus-border-color);
        background-color: var(--nexus-content-bg);
    }
    .group-header {
        background-color: var(--nexus-content-bg);
        border-bottom: 1px solid var(--nexus-border-color);
    }
</style>
{% endblock %}

{% block content_header %}
    <div class="group-header pt-3 pb-2 mb-0 sticky-top shadow-sm" style="top: 56px; z-index: 1010;">
        <div class="container-fluid"> {# Use container-fluid from base for alignment #}
            <div class="d-flex flex-column flex-md-row align-items-md-center">
                <div class="me-md-3 mb-2 mb-md-0 text-center text-md-start">
                    {% set group_avatar_view = url_for('static', filename=(group.profile_photo_url if group.profile_photo_url else 'img/placeholders/group_default_avatar.png')) %}
                    <img src="{{ group_avatar_view }}" alt="{{ group.name }} Profile Photo" class="rounded-circle shadow-sm" style="width: 60px; height: 60px; object-fit: cover; border: 2px solid var(--nexus-body-bg);">
                </div>
                <div class="flex-grow-1 text-center text-md-start">
                    <h1 class="page-title font-heading mb-0 fs-4">{{ group.name }}</h1>
                    <p class="text-muted mb-1 small">
                        <i class="bi bi-people-fill me-1"></i> <span id="groupMemberCount">{{ group.members.count() }}</span> Member{{ 's' if group.members.count() != 1 else '' }}
                        <span class="mx-1 text-muted">|</span>
                        Owned by: {{ group.owner.full_name or group.owner.username if group.owner else 'N/A' }}
                    </p>
                </div>
                <div class="mt-2 mt-md-0 ms-md-auto">
                    {% if user_group_role in ['owner', 'admin'] %}
                        <a href="{{ url_for('edit_social_group', group_id=group.id) }}" class="btn btn-sm btn-outline-primary me-2" title="Edit Group Settings">
                            <i class="bi bi-gear-fill"></i>
                        </a>
                        <a href="{{ url_for('manage_group_members', group_id=group.id) }}" class="btn btn-sm btn-outline-info" title="Manage Members">
                            <i class="bi bi-person-plus-fill"></i>
                        </a>
                    {% endif %}
                     {% if user_group_role %} {# If member #}
                        <button class="btn btn-sm btn-outline-danger ms-2 group-action-btn" data-action="leave" data-group-id="{{ group.id }}" title="Leave Group">
                            <i class="bi bi-door-closed-fill"></i>
                        </button>
                    {% endif %}
                </div>
            </div>
             {% if group.description %}
                <p class="text-muted small mb-2 mt-2 text-center text-md-start">{{ group.description | truncate(150) }}</p>
            {% endif %}
        </div>
    </div>
{% endblock %}

{% block content %}
{% set no_sidebar = True %} {# Full focus on group chat #}

<div class="container-fluid px-0 h-100 d-flex flex-column">
    <div class="group-chat-window flex-grow-1" id="groupChatWindowMessages-{{ group.id }}">
        {% if messages and messages | length > 0 %}
            {% for message in messages %} {# Assuming messages are pre-sorted newest first for column-reverse #}
                {% include 'partials/_chat_message_item.html' with {'message': message, 'current_user_id': current_user.id} %}
            {% endfor %}
        {% else %}
            <div class="text-center text-muted p-5 flex-grow-1 d-flex align-items-center justify-content-center">
                <div>
                    <i class="bi bi-chat-square-dots-fill display-3 mb-3"></i>
                    <h4 class="font-heading">Welcome to the {{ group.name }} group!</h4>
                    <p>Be the first to send a message.</p>
                </div>
            </div>
        {% endif %}
    </div>

    <div class="group-chat-input-area p-3">
        {% if user_group_role %} {# Only show input if user is a member #}
            {# Using _social_content_form.html for consistency in posting UI #}
            {% include 'partials/_social_content_form.html' with {
                'post_form': post_form, {# Assumes post_form is an instance of PostContentForm #}
                'submit_url': url_for('create_group_message', group_id=group.id),
                'submit_button_text': 'Send',
                'parent_id': group.id
            } %}
        {% else %}
            <p class="text-center text-muted">You must be a member to send messages in this group.</p>
        {% endif %}
    </div>
</div>
{% endblock %}

{% block body_scripts %}
<script src="{{ url_for('static', filename='js/social.js') }}?v={{ range(1, 100000) | random }}"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const groupId = {{ group.id | tojson }};
        const currentUserId = {{ current_user.id | tojson }};

        // Initialize chat-like functionality for group messages
        if (typeof initializeGroupChat === 'function') { // This function would be in social.js or a new group.js
            initializeGroupChat(groupId, currentUserId);
        } else {
            console.warn('initializeGroupChat function not found. Using generic social post handler for messages.');
            // The generic social post handler in social.js might work if the form action is correct
            // and backend returns appropriate JSON for prepending messages.
        }

        // Handle Leave Group button
        document.querySelectorAll('.group-action-btn[data-action="leave"]').forEach(button => {
            button.addEventListener('click', async function(e){
                e.preventDefault();
                await handleGroupMembershipAction(groupId, 'leave', this);
            });
        });

        console.log('View Group page JS loaded.');
    });
</script>
{% endblock %}{% extends "layout/base.html" %}

{% block page_title %}Edit Group: {{ group.name }}{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-pencil-square me-2 text-primary"></i>Edit Group Settings
        </h1>
        <a href="{{ url_for('view_social_group', group_id=group.id) }}" class="btn btn-sm btn-outline-secondary">
            <i class="bi bi-arrow-left-circle me-1"></i> Back to Group
        </a>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    <div class="row justify-content-center">
        <div class="col-lg-8 col-md-10">
            <div class="card shadow-sm">
                <div class="card-header bg-primary-subtle text-primary-emphasis">
                    <h5 class="mb-0 font-heading">Editing: {{ group.name }}</h5>
                </div>
                <div class="card-body p-4">
                    {% include 'layout/_flash_messages.html' %}

                    <form method="POST" action="{{ url_for('edit_social_group', group_id=group.id) }}" enctype="multipart/form-data" novalidate>
                        {{ form.hidden_tag() if form.hidden_tag }} {# CSRF Token #}

                        <div class="mb-3">
                            {{ form.name.label(class="form-label fw-medium") }}
                            {{ form.name(class="form-control form-control-lg" + (" is-invalid" if form.name.errors else ""), placeholder="Enter group name") }}
                            {% if form.name.errors %}<div class="invalid-feedback">{% for e in form.name.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>

                        <div class="mb-3">
                             {{ form.bio.label(text="Description (Optional)", class="form-label fw-medium") }}
                            {{ form.bio(class="form-control" + (" is-invalid" if form.bio.errors else ""), rows="3", placeholder="Brief group description") }}
                            {% if form.bio.errors %}<div class="invalid-feedback">{% for e in form.bio.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>
                        
                        {% if group.profile_photo_url %}
                        <div class="mb-2">
                            <label class="form-label fw-medium">Current Group Photo:</label><br>
                            <img src="{{ url_for('static', filename=group.profile_photo_url) }}" alt="Current group photo" class="img-thumbnail mb-2" style="max-width: 150px; max-height: 150px;">
                        </div>
                        {% endif %}

                        <div class="mb-3">
                            {{ form.profile_photo.label(text="Change Group Photo (Optional)", class="form-label fw-medium") }}
                            {{ form.profile_photo(class="form-control" + (" is-invalid" if form.profile_photo.errors else "")) }}
                            <small class="form-text text-muted">Max 2MB. JPG, PNG, GIF, WEBP. Leave blank to keep current photo.</small>
                            {% if form.profile_photo.errors %}<div class="invalid-feedback">{% for e in form.profile_photo.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>
                        
                        {# Add other group settings if they exist on EditGroupForm, e.g., group type #}
                        {# <div class="mb-3">
                            <label for="groupIsActive" class="form-label fw-medium">Group Status:</label>
                            <select name="is_active" id="groupIsActive" class="form-select">
                                <option value="true" {% if group.is_active %}selected{% endif %}>Active</option>
                                <option value="false" {% if not group.is_active %}selected{% endif %}>Inactive (Archived)</option>
                            </select>
                        </div> #}

                        <div class="d-flex justify-content-end mt-4">
                            <a href="{{ url_for('view_social_group', group_id=group.id) }}" class="btn btn-outline-secondary me-2">Cancel</a>
                            {{ form.submit(class="btn btn-primary px-4", value="Save Group Changes") }}
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block body_scripts %}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        console.log('Edit Group page JS loaded.');
    });
</script>
{% endblock %}{% extends "layout/base.html" %}

{% block page_title %}Create New Social Group{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-plus-circle-fill me-2 text-primary"></i>Create New Social Group
        </h1>
        <a href="{{ request.referrer or url_for('social_group_list') }}" class="btn btn-sm btn-outline-secondary">
            <i class="bi bi-arrow-left-circle me-1"></i> Cancel & Go Back
        </a>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    <div class="row justify-content-center">
        <div class="col-lg-8 col-md-10">
            <div class="card shadow-sm">
                <div class="card-header bg-primary-subtle text-primary-emphasis">
                    <h5 class="mb-0 font-heading">Group Details</h5>
                </div>
                <div class="card-body p-4">
                    {% include 'layout/_flash_messages.html' %}

                    <form method="POST" action="{{ url_for('create_social_group') }}" enctype="multipart/form-data" novalidate>
                        {{ form.hidden_tag() if form.hidden_tag }} {# CSRF Token #}

                        <div class="mb-3">
                            {{ form.name.label(class="form-label fw-medium") }}
                            {{ form.name(class="form-control form-control-lg" + (" is-invalid" if form.name.errors else ""), placeholder="Enter a unique group name") }}
                            {% if form.name.errors %}<div class="invalid-feedback">{% for e in form.name.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>

                        <div class="mb-3">
                            {# form.bio is the field name from CreateGroupForm, corresponds to 'description' in model #}
                            {{ form.bio.label(text="Description (Optional)", class="form-label fw-medium") }}
                            {{ form.bio(class="form-control" + (" is-invalid" if form.bio.errors else ""), rows="3", placeholder="Briefly describe your group's purpose") }}
                            {% if form.bio.errors %}<div class="invalid-feedback">{% for e in form.bio.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>

                        <div class="mb-3">
                            {{ form.profile_photo.label(class="form-label fw-medium") }}
                            {{ form.profile_photo(class="form-control" + (" is-invalid" if form.profile_photo.errors else "")) }}
                            <small class="form-text text-muted">Optional. Max 2MB. JPG, PNG, GIF, WEBP.</small>
                            {% if form.profile_photo.errors %}<div class="invalid-feedback">{% for e in form.profile_photo.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>
                        
                        {# Add other group settings if they exist on CreateGroupForm, e.g., public/private type #}
                        {# <div class="mb-3">
                            <label for="groupType" class="form-label fw-medium">Group Type:</label>
                            <select name="group_type" id="groupType" class="form-select">
                                <option value="private" selected>Private (Invite Only)</option>
                                <option value="public">Public (Discoverable)</option>
                            </select>
                        </div> #}

                        <div class="d-flex justify-content-end mt-4">
                            <a href="{{ request.referrer or url_for('social_group_list') }}" class="btn btn-outline-secondary me-2">Cancel</a>
                            {{ form.submit(class="btn btn-primary px-4", value="Create Group") }}
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block body_scripts %}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // JS for profile photo preview if desired, similar to settings page
        console.log('Create Group page JS loaded.');
    });
</script>
{% endblock %}{% extends "layout/base.html" %}

{% block page_title %}Manage Members: {{ group.name }}{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-people-fill me-2 text-primary"></i>Manage Group Members
        </h1>
        <a href="{{ url_for('view_social_group', group_id=group.id) }}" class="btn btn-sm btn-outline-secondary">
            <i class="bi bi-arrow-left-circle me-1"></i> Back to Group: {{ group.name | truncate(30) }}
        </a>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    {% include 'layout/_flash_messages.html' %}

    <div class="card shadow-sm">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h5 class="mb-0 font-heading">Members of "{{ group.name }}"</h5>
            {# Optional: Add User to Group Button (for owner/admin) - Requires user search modal/flow #}
            {# <button class="btn btn-sm btn-success" data-bs-toggle="modal" data-bs-target="#addMemberModal"><i class="bi bi-person-plus-fill me-1"></i> Add Member</button> #}
        </div>
        <div class="card-body p-0">
            {% if members and members | length > 0 %}
                <div class="table-responsive">
                    <table class="table table-hover table-striped mb-0 align-middle">
                        <thead class="table-light">
                            <tr>
                                <th scope="col" style="width: 5%;">Avatar</th>
                                <th scope="col">User</th>
                                <th scope="col">Global Role</th>
                                <th scope="col">Group Role</th>
                                <th scope="col">Joined On</th>
                                <th scope="col" class="text-center">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% for member_entry in members %}
                                {% set user = member_entry.user %}
                                <tr id="member-row-{{ user.id }}">
                                    <td>
                                        {% set member_avatar = url_for('static', filename=(user.profile_photo_url if user.profile_photo_url else 'img/placeholders/user_avatar_default.png')) %}
                                        <img src="{{ member_avatar }}" alt="{{ user.username }}" class="rounded-circle" style="width: 35px; height: 35px; object-fit: cover;">
                                    </td>
                                    <td class="fw-medium">
                                        {{ user.full_name or user.username }}
                                        {% if user.id == group.owner_id %}<span class="badge bg-primary-subtle text-primary-emphasis ms-1 small">Owner</span>{% endif %}
                                    </td>
                                    <td><small class="text-muted">{{ user.role.name.replace('_',' ') | title if user.role else 'N/A' }}</small></td>
                                    <td>
                                        {% if user.id == group.owner_id %}
                                            <span class="badge bg-primary-subtle text-primary-emphasis p-2">{{ member_entry.role | title }}</span>
                                        {% elif user_group_role in ['owner'] or (user_group_role == 'admin' and member_entry.role != 'owner') %}
                                            <select class="form-select form-select-sm change-group-role-select" 
                                                    data-group-id="{{ group.id }}" data-member-id="{{ user.id }}"
                                                    {% if user.id == current_user.id %}disabled title="Cannot change your own role here"{% endif %}>
                                                <option value="member" {% if member_entry.role == 'member' %}selected{% endif %}>Member</option>
                                                <option value="admin" {% if member_entry.role == 'admin' %}selected{% endif %}>Admin</option>
                                                {# Only group owner can assign 'owner' role, usually via a separate "Transfer Ownership" action #}
                                            </select>
                                        {% else %}
                                             <span class="badge bg-secondary-subtle text-secondary-emphasis p-2">{{ member_entry.role | title }}</span>
                                        {% endif %}
                                    </td>
                                    <td><small class="text-muted">{{ member_entry.joined_at | dateformat }}</small></td>
                                    <td class="text-center">
                                        {% if user.id != group.owner_id and user.id != current_user.id %} {# Cannot remove owner or self #}
                                         {% if user_group_role in ['owner'] or (user_group_role == 'admin' and member_entry.role == 'member') %}
                                            <button class="btn btn-sm btn-outline-danger p-1 remove-group-member-btn"
                                                    data-group-id="{{ group.id }}" data-member-id="{{ user.id }}"
                                                    data-member-name="{{ user.full_name or user.username }}"
                                                    title="Remove Member">
                                                <i class="bi bi-person-x-fill fs-6"></i>
                                            </button>
                                         {% endif %}
                                        {% endif %}
                                    </td>
                                </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                </div>
            {% else %}
                <div class="text-center text-muted p-5 content-placeholder">
                    <i class="bi bi-person-plus-fill display-3 mb-3"></i>
                    <h4 class="font-heading">No Members Yet</h4>
                    <p>This group currently has no members other than potentially the owner. You can add members if you are an admin.</p>
                </div>
            {% endif %}
        </div>
    </div>
</div>
{% endblock %}

{% block body_scripts %}
<script src="{{ url_for('static', filename='js/social.js') }}?v={{ range(1, 100000) | random }}"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        document.querySelectorAll('.change-group-role-select').forEach(selectEl => {
            selectEl.addEventListener('change', handleGroupRoleChange);
        });
        // Remove buttons are handled by event delegation in social.js via .remove-group-member-btn
        console.log('Manage Group Members JS loaded.');
    });
</script>
{% endblock %}--- START OF FILE global_feed_placeholder.html ---

{% extends "layout/base.html" %}
{% from 'macros/_ui_components.html' import render_spinner %}

{% block page_title %}Nexus Pulse{% endblock %}

{% block content_header %}
<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2 font-heading">Nexus Pulse</h1>
    <div class="btn-toolbar mb-2 mb-md-0">
        {# Future actions like filtering could go here #}
    </div>
</div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    <div class="row justify-content-center">
        <div class="col-lg-8">

            {# 1. Create Post Component (Now a functional form) #}
            <div class="card shadow-sm mb-4">
                <form id="create-global-post-form" action="{{ url_for('create_global_post') }}" method="POST" enctype="multipart/form-data">
                    <input type="hidden" name="csrf_token" value="{{ get_csrf_token_value() }}">
                    <div class="card-body">
                        <div class="d-flex align-items-start">
                            <img src="{{ url_for('static', filename=(current_user.profile_photo_url or 'img/placeholders/user_avatar_default.png')) }}" class="rounded-circle me-3" width="48" height="48" alt="Your Avatar">
                            <div class="flex-grow-1">
                                <textarea id="global-post-content" name="content" class="form-control" rows="3" placeholder="What's happening, {{ current_user.first_name or current_user.username }}?"></textarea>
                                
                                {# File attachment display area #}
                                <div id="post-file-preview" class="mt-2 d-none">
                                    <div class="alert alert-secondary d-flex justify-content-between align-items-center p-2">
                                        <span>
                                            <i class="bi bi-paperclip me-2"></i>
                                            <span id="post-file-name"></span>
                                        </span>
                                        <button type="button" class="btn-close" aria-label="Remove File" id="remove-post-file-btn"></button>
                                    </div>
                                </div>

                                <div class="d-flex justify-content-between align-items-center mt-2">
                                    <div>
                                        {# This button will trigger the file input modal #}
                                        <button type="button" class="btn btn-sm btn-outline-secondary border-0" data-bs-toggle="tooltip" title="Attach File" id="attach-file-btn">
                                            <i class="bi bi-paperclip"></i>
                                        </button>
                                        {# Add other buttons as needed #}
                                    </div>
                                    <button type="submit" class="btn btn-primary" id="submit-global-post-btn">
                                        <span class="spinner-border spinner-border-sm d-none me-1" role="status" aria-hidden="true"></span>
                                        Post
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>

            {# 2. Feed Container (JavaScript will populate this) #}
            <div id="global-feed-container">
                {# Placeholder Skeleton UI - This is shown while the first API call is in progress #}
                <div id="feed-skeleton-loader">
                    {% for i in range(3) %} {# Show 3 skeleton cards #}
                    <div class="card shadow-sm mb-4">
                        <div class="card-body">
                            <div class="d-flex align-items-center mb-3">
                                <div class="skeleton-avatar rounded-circle me-3"></div>
                                <div class="flex-grow-1">
                                    <div class="skeleton-line skeleton-line-short"></div>
                                    <div class="skeleton-line skeleton-line-very-short mt-1"></div>
                                </div>
                            </div>
                            <div class="skeleton-line"></div>
                            <div class="skeleton-line skeleton-line-long"></div>
                            <div class="skeleton-line skeleton-line-medium"></div>
                        </div>
                    </div>
                    {% endfor %}
                </div>
            </div>

            {# 3. Load More Trigger #}
            <div id="load-more-trigger" class="text-center my-4 d-none">
                 <button class="btn btn-outline-primary" id="load-more-btn">
                    <span class="spinner-border spinner-border-sm d-none me-1" role="status" aria-hidden="true"></span>
                    Load More Posts
                 </button>
            </div>
        </div>
    </div>
</div>

{# Hidden file input for the "Attach File" button #}
<input type="file" id="global-post-file-input" name="attached_file" class="d-none">

{% endblock %}

{% block page_styles %}
{# Simple CSS for the skeleton loader effect #}
<style>
    .skeleton-line, .skeleton-avatar {
        background-color: #e9ecef;
        border-radius: .25rem;
        animation: skeleton-loading 1.5s infinite;
    }
    .skeleton-avatar { width: 48px; height: 48px; }
    .skeleton-line { height: 1em; }
    .skeleton-line-long { width: 80%; }
    .skeleton-line-medium { width: 60%; }
    .skeleton-line-short { width: 40%; }
    .skeleton-line-very-short { width: 20%; }
    @keyframes skeleton-loading {
        0% { background-color: #e9ecef; }
        50% { background-color: #ced4da; }
        100% { background-color: #e9ecef; }
    }
</style>
{% endblock %}
{% block body_scripts %}
{# Import the Socket.IO client library #}
<script src="https://cdn.socket.io/4.5.4/socket.io.min.js"></script>

<script type="module">
    // --- CONSTANTS & STATE ---
    const feedContainer = document.getElementById('global-feed-container');
    const skeletonLoader = document.getElementById('feed-skeleton-loader');
    const loadMoreTrigger = document.getElementById('load-more-trigger');
    const loadMoreBtn = document.getElementById('load-more-btn');
    const createPostForm = document.getElementById('create-global-post-form');
    const postContentTextarea = document.getElementById('global-post-content');
    const postFileInput = document.getElementById('global-post-file-input');
    const attachFileBtn = document.getElementById('attach-file-btn');
    const filePreview = document.getElementById('post-file-preview');
    const fileNameSpan = document.getElementById('post-file-name');
    const removeFileBtn = document.getElementById('remove-post-file-btn');

    let currentPage = 1;
    let isLoading = false;
    const currentUserId = {{ current_user.id|tojson }};
    const isAdmin = {{ 'true' if current_user.role and current_user.role.name in ['system_admin', 'hr_ceo'] else 'false' }};

    // --- SOCKET.IO SETUP ---
    const socket = io();
    socket.on('connect', () => console.log('Socket.IO connected to Nexus Pulse.'));

    socket.on('new_comment', (data) => {
        const { post_id, comment_html, new_comment_count } = data;
        const commentSection = document.getElementById(`comments-for-post-${post_id}`);
        if (commentSection) {
            commentSection.insertAdjacentHTML('beforeend', comment_html);
        }
        const commentCountSpan = document.querySelector(`#global-post-${post_id} .comment-count`);
        if (commentCountSpan) {
            commentCountSpan.textContent = new_comment_count;
        }
    });

    socket.on('like_update', (data) => {
        const { post_id, new_like_count } = data;
        const likeCountSpan = document.querySelector(`#global-post-${post_id} .like-count`);
        if (likeCountSpan) {
            likeCountSpan.textContent = new_like_count;
        }
    });

    // --- FUNCTIONS ---
    
    // START OF CHANGE 1: Correct and centralize the HTML escaping function
    const escapeHtml = (unsafe) => {
        if (!unsafe) return '';
        const div = document.createElement('div');
        div.textContent = unsafe;
        return div.innerHTML;
    };
    // END OF CHANGE 1

    async function fetchAndRenderPosts(page = 1) {
        if (isLoading) return;
        isLoading = true;
        const spinner = loadMoreBtn.querySelector('.spinner-border');
        if (spinner) spinner.classList.remove('d-none');
        
        try {
            const response = await fetch(`{{ url_for('get_global_posts') }}?page=${page}`);
            if (!response.ok) throw new Error('Failed to fetch posts');
            
            const data = await response.json();
            
            if (page === 1) {
                feedContainer.innerHTML = '';
            }
            
            data.posts.forEach(post => {
                const postHtml = renderPostHtml(post);
                feedContainer.insertAdjacentHTML('beforeend', postHtml);
                socket.emit('join_post_room', { 'post_id': post.id });
            });
            
            if (data.pagination.has_next) {
                loadMoreTrigger.classList.remove('d-none');
                currentPage = data.pagination.page + 1;
            } else {
                loadMoreTrigger.classList.add('d-none');
            }
        } catch (error) {
            console.error('Error fetching posts:', error);
            feedContainer.innerHTML = `<div class="alert alert-danger text-center">Could not load posts. Please try again later.</div>`;
        } finally {
            isLoading = false;
            if (spinner) spinner.classList.add('d-none');
            if (skeletonLoader) skeletonLoader.remove();
        }
    }

    // --- EVENT DELEGATION FOR DYNAMIC CONTENT ---
    feedContainer.addEventListener('click', (e) => {
        const likeButton = e.target.closest('.like-btn');
        const commentButton = e.target.closest('.comment-btn');
        const deleteButton = e.target.closest('.delete-post-btn');
        const editButton = e.target.closest('.edit-post-btn');
        
        if (likeButton) {
            e.preventDefault();
            handleLike(likeButton.dataset.postId, likeButton);
        } else if (commentButton) {
            e.preventDefault();
            toggleCommentSection(commentButton.dataset.postId);
        } else if (deleteButton) {
            e.preventDefault();
            if (confirm('Are you sure you want to delete this post? This cannot be undone.')) {
                handleDelete(deleteButton.dataset.postId);
            }
        } else if (editButton) {
            e.preventDefault();
            handleEdit(editButton.dataset.postId);
        }
    });

    feedContainer.addEventListener('submit', async (e) => {
        if (e.target.classList.contains('comment-form')) {
            e.preventDefault();
            handleCommentSubmit(e.target);
        }
        if (e.target.classList.contains('edit-post-form')) {
            e.preventDefault();
            handleEditSubmit(e.target);
        }
    });

    // --- ACTION HANDLERS ---
    async function handleLike(postId, button) {
        try {
            const response = await fetch(`{{ url_for('toggle_global_post_like', post_id=0) }}`.replace('0', postId), {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' }
            });
            const result = await response.json();
            if (response.ok) {
                const likeCountSpan = button.querySelector('.like-count');
                likeCountSpan.textContent = result.like_count;
                if (result.liked) {
                    button.classList.add('text-primary');
                    button.classList.remove('text-muted');
                } else {
                    button.classList.remove('text-primary');
                    button.classList.add('text-muted');
                }
            } else {
                alert(`Error: ${result.error}`);
            }
        } catch (error) {
            console.error('Like action failed:', error);
        }
    }

    function toggleCommentSection(postId) {
        const commentSection = document.getElementById(`comment-section-post-${postId}`);
        if (commentSection) {
            commentSection.classList.toggle('d-none');
            if (!commentSection.classList.contains('d-none')) {
                loadCommentsForPost(postId);
            }
        }
    }
    
    async function handleDelete(postId) {
        try {
            const response = await fetch(`{{ url_for('delete_global_post', post_id=0) }}`.replace('0', postId), { method: 'DELETE' });
            if(response.ok) {
                const postElement = document.getElementById(`global-post-${postId}`);
                if(postElement) {
                    postElement.style.transition = 'opacity 0.5s';
                    postElement.style.opacity = '0';
                    setTimeout(() => postElement.remove(), 500);
                }
            } else {
                const result = await response.json();
                alert(`Error: ${result.error}`);
            }
        } catch(error) {
            console.error('Delete action failed:', error);
        }
    }
    
    async function loadCommentsForPost(postId) {
        const commentsContainer = document.getElementById(`comments-for-post-${postId}`);
        if (commentsContainer.dataset.loaded === 'true') return;
        commentsContainer.innerHTML = '{{ render_spinner() }}';
        try {
            const response = await fetch(`{{ url_for('get_global_post_comments', post_id=0) }}?per_page=50`.replace('0', postId));
            const data = await response.json();
            commentsContainer.innerHTML = '';
            if (response.ok) {
                data.comments.forEach(comment => {
                    const commentHtml = renderCommentHtml(comment);
                    commentsContainer.insertAdjacentHTML('beforeend', commentHtml);
                });
                commentsContainer.dataset.loaded = 'true';
            } else {
                commentsContainer.innerHTML = '<p class="text-danger small">Could not load comments.</p>';
            }
        } catch (error) {
            console.error('Failed to load comments:', error);
            commentsContainer.innerHTML = '<p class="text-danger small">Could not load comments.</p>';
        }
    }
    
    async function handleCommentSubmit(form) {
        const postId = form.dataset.postId;
        const input = form.querySelector('input[type="text"]');
        const content = input.value.trim();
        if (!content) return;
        try {
            const response = await fetch(`{{ url_for('create_global_comment', post_id=0) }}`.replace('0', postId), {
                method: 'POST',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({ content: content })
            });
            const result = await response.json();
            if (response.ok) {
                const commentsContainer = document.getElementById(`comments-for-post-${postId}`);
                const commentHtml = renderCommentHtml(result.comment);
                commentsContainer.insertAdjacentHTML('beforeend', commentHtml);
                input.value = '';
                const commentCountSpan = document.querySelector(`#global-post-${postId} .comment-count`);
                if(commentCountSpan) commentCountSpan.textContent = result.post_comment_count;
            } else {
                alert(`Error: ${result.error}`);
            }
        } catch (error) {
            console.error('Failed to post comment:', error);
        }
    }

    function handleEdit(postId) {
        const postElement = document.getElementById(`global-post-${postId}`);
        const contentElement = postElement.querySelector('.post-content-area');
        const originalContentParagraph = contentElement.querySelector('p.card-text');
        const originalContent = originalContentParagraph ? originalContentParagraph.innerHTML : '';
        
        const editFormHtml = `
            <form class="edit-post-form" data-post-id="${postId}">
                <textarea class="form-control" name="content" rows="4">${originalContent.replace(/<br\s*[\/]?>/gi, "\n")}</textarea>
                <div class="text-end mt-2">
                    <button type="button" class="btn btn-sm btn-secondary cancel-edit-btn">Cancel</button>
                    <button type="submit" class="btn btn-sm btn-primary">Save Changes</button>
                </div>
            </form>
        `;
        contentElement.dataset.originalContent = contentElement.innerHTML;
        contentElement.innerHTML = editFormHtml;

        contentElement.querySelector('.cancel-edit-btn').addEventListener('click', () => {
            contentElement.innerHTML = contentElement.dataset.originalContent;
        }, { once: true });
    }

    async function handleEditSubmit(form) {
        const postId = form.dataset.postId;
        const textarea = form.querySelector('textarea');
        const content = textarea.value;

        try {
            const response = await fetch(`{{ url_for('update_global_post', post_id=0) }}`.replace('0', postId), {
                method: 'PUT',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({ content: content })
            });
            const result = await response.json();
            if(response.ok) {
                const contentElement = document.querySelector(`#global-post-${postId} .post-content-area`);
                contentElement.innerHTML = `<p class="card-text">${content.replace(/\n/g, '<br>')}</p>`;
            } else {
                alert(`Error: ${result.error}`);
            }
        } catch (error) {
            console.error('Failed to edit post:', error);
        }
    }

    // --- INITIALIZATION & CREATE POST FORM LISTENERS ---
    document.addEventListener('DOMContentLoaded', () => fetchAndRenderPosts(1));
    loadMoreBtn.addEventListener('click', () => fetchAndRenderPosts(currentPage));
    attachFileBtn.addEventListener('click', () => postFileInput.click());
    postFileInput.addEventListener('change', e => {
        const file = e.target.files[0];
        if (file) {
            fileNameSpan.textContent = file.name;
            filePreview.classList.remove('d-none');
        }
    });
    removeFileBtn.addEventListener('click', () => {
        postFileInput.value = '';
        filePreview.classList.add('d-none');
    });

    // START OF CHANGE 2: Fix the form submission logic for file uploads
    createPostForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        const submitBtn = document.getElementById('submit-global-post-btn');
        const spinner = submitBtn.querySelector('.spinner-border');
        
        // Correctly get values for validation
        const content = postContentTextarea.value.trim();
        const file = postFileInput.files[0];

        // Correctly validate that either content or a file is present
        if (!content && !file) {
            alert("Please write something or attach a file.");
            return;
        }

        // Correctly construct the FormData object
        const formData = new FormData(createPostForm); // Gets csrf_token and content
        if (file) {
            // Manually append the file because the input is outside the form
            formData.append('attached_file', file, file.name);
        }
        
        submitBtn.disabled = true;
        spinner.classList.remove('d-none');
        try {
            const response = await fetch("{{ url_for('create_global_post') }}", {
                method: 'POST',
                body: formData
            });
            const result = await response.json();
            if (response.ok) {
                const newPostHtml = renderPostHtml(result.post);
                feedContainer.insertAdjacentHTML('afterbegin', newPostHtml);
                socket.emit('join_post_room', { 'post_id': result.post.id });
                createPostForm.reset();
                filePreview.classList.add('d-none');
                postFileInput.value = '';
            } else {
                alert(`Error: ${result.error || 'Could not create post.'}`);
            }
        } catch (error) {
            console.error('Error creating post:', error);
            alert('A network error occurred. Please try again.');
        } finally {
            submitBtn.disabled = false;
            spinner.classList.add('d-none');
        }
    });
    // END OF CHANGE 2

    // --- HTML RENDERER HELPERS ---
    function renderPostHtml(post) {
        const getHumanTime = (isoString) => {
            if (!isoString) return '';
            const date = new Date(isoString);
            const now = new Date();
            const diffSeconds = Math.round((now - date) / 1000);
            if (diffSeconds < 60) return 'just now';
            if (diffSeconds < 3600) return `${Math.round(diffSeconds / 60)} min ago`;
            if (diffSeconds < 86400) return `${Math.round(diffSeconds / 3600)} hr ago`;
            return date.toLocaleDateString();
        };
        
        // No longer need local escapeHtml as it's defined globally now

        const authorProfileUrl = post.author.profile_photo_url ? `{{ url_for('static', filename='') }}${post.author.profile_photo_url}` : `{{ url_for('static', filename='img/placeholders/user_avatar_default.png') }}`;
        const contentHtml = post.content ? `<p class="card-text">${escapeHtml(post.content).replace(/\n/g, '<br>')}</p>` : '';
        
        let fileHtml = '';
        if (post.file) {
            if (post.file.mimetype.startsWith('image/')) {
                fileHtml = `<img src="${post.file.download_url}" class="img-fluid rounded mt-2" alt="Post attachment">`;
            } else {
                fileHtml = `<div class="border rounded p-3 mt-2"><i class="bi bi-file-earmark-text fs-4 me-2"></i><a href="${post.file.download_url}" target="_blank">${escapeHtml(post.file.original_filename)}</a></div>`;
            }
        }

        const isAuthor = post.author.id === currentUserId;
        const canDelete = isAuthor || isAdmin;
        const optionsDropdown = (isAuthor || canDelete) ? `
            <div class="dropdown">
                <button class="btn btn-sm btn-light border-0" type="button" data-bs-toggle="dropdown" aria-expanded="false"><i class="bi bi-three-dots"></i></button>
                <ul class="dropdown-menu dropdown-menu-end">
                    ${isAuthor ? `<li><a class="dropdown-item edit-post-btn" href="#" data-post-id="${post.id}">Edit Post</a></li>` : ''}
                    ${canDelete ? `<li><a class="dropdown-item text-danger delete-post-btn" href="#" data-post-id="${post.id}">Delete Post</a></li>` : ''}
                </ul>
            </div>` : '';

        const likedClass = post.current_user_liked ? 'text-primary' : 'text-muted';

        return `
            <div class="card shadow-sm mb-4" id="global-post-${post.id}">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-start">
                        <div class="d-flex align-items-center">
                            <img src="${authorProfileUrl}" class="rounded-circle me-3" width="48" height="48" alt="Avatar">
                            <div><h6 class="mb-0">${escapeHtml(post.author.full_name)}</h6><small class="text-muted">@${escapeHtml(post.author.username)} · ${getHumanTime(post.timestamp)}</small></div>
                        </div>
                        ${optionsDropdown}
                    </div>
                    <div class="mt-3 post-content-area">${contentHtml}${fileHtml}</div>
                </div>
                <div class="card-footer bg-white d-flex justify-content-around py-1">
                    <button class="btn btn-sm ${likedClass} w-100 like-btn" data-post-id="${post.id}"><i class="bi bi-hand-thumbs-up"></i> <span class="like-count">${post.like_count}</span> Like</button>
                    <button class="btn btn-sm text-muted w-100 comment-btn" data-post-id="${post.id}"><i class="bi bi-chat-dots"></i> <span class="comment-count">${post.comment_count}</span> Comment</button>
                    <button class="btn btn-sm text-muted w-100 save-post-btn" data-post-id="${post.id}"><i class="bi bi-bookmark"></i> Save</button>
                </div>
                <div class="card-footer bg-light p-2 d-none" id="comment-section-post-${post.id}">
                     <div class="comments-container mb-2" id="comments-for-post-${post.id}"></div>
                     <form class="comment-form" data-post-id="${post.id}">
                        <div class="input-group"><input type="text" class="form-control form-control-sm" placeholder="Write a comment..."><button class="btn btn-primary btn-sm" type="submit">Send</button></div>
                     </form>
                 </div>
            </div>`;
    }

    function renderCommentHtml(comment) {
        const authorProfileUrl = comment.author.profile_photo_url ? `{{ url_for('static', filename='') }}${comment.author.profile_photo_url}` : `{{ url_for('static', filename='img/placeholders/user_avatar_default.png') }}`;
        const canDelete = comment.author.id === currentUserId || isAdmin;
        const deleteButton = canDelete ? `<button class="btn btn-sm btn-link text-danger p-0 delete-comment-btn" data-comment-id="${comment.id}"><i class="bi bi-trash"></i></button>` : '';

        // No longer need local escapeHtml as it's defined globally now

        return `
            <div class="d-flex align-items-start mt-2" id="comment-${comment.id}">
                <img src="${authorProfileUrl}" class="rounded-circle me-2" width="32" height="32" alt="Avatar">
                <div class="flex-grow-1 bg-white p-2 rounded">
                    <div class="d-flex justify-content-between">
                        <strong>${escapeHtml(comment.author.full_name)}</strong>
                        ${deleteButton}
                    </div>
                    <p class="mb-0 small">${escapeHtml(comment.content)}</p>
                </div>
            </div>`;
    }
</script>
{% endblock %}{% extends "layout/base.html" %}

{% block page_title %}{{ channel.name }} - Channel{% endblock %}

{% block head_css %}
    {# Optional: Add CSS for image lightbox if used for post images #}
    {# <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bs5-lightbox@1.8.3/dist/bs5-lightbox.min.css"> #}
{% endblock %}


{% block content_header %}
    {# Channel Header - could be a banner image in future #}
    <div class="channel-header pt-3 pb-2 mb-3 border-bottom bg-light-subtle position-relative">
        <div class="container-fluid"> {# Use container-fluid from base for alignment #}
            <div class="d-flex flex-column flex-md-row align-items-md-center">
                <div class="me-md-3 mb-2 mb-md-0 text-center text-md-start">
                    {% set channel_avatar_view = url_for('static', filename=(channel.profile_photo_url if channel.profile_photo_url else 'img/placeholders/channel_default_avatar.png')) %}
                    <img src="{{ channel_avatar_view }}" alt="{{ channel.name }} Profile Photo" class="rounded-circle shadow-sm" style="width: 80px; height: 80px; object-fit: cover; border: 3px solid var(--nexus-content-bg);">
                </div>
                <div class="flex-grow-1 text-center text-md-start">
                    <h1 class="page-title font-heading mb-0 fs-3">{{ channel.name }}</h1>
                    <p class="text-muted mb-1">
                        <i class="bi bi-tag-fill me-1"></i>{{ channel.social_category.name if channel.social_category else 'Uncategorized' }}
                        <span class="mx-2 text-muted">|</span>
                        <i class="bi bi-people-fill me-1"></i> <span id="subscriberCount">{{ channel.subscribers.count() }}</span> Subscriber{{ 's' if channel.subscribers.count() != 1 else '' }}
                        <span class="mx-2 text-muted">|</span>
                        <i class="bi bi-shield-lock-fill me-1"></i>{{ channel.type | title }}
                    </p>
                    {% if channel.bio %}
                        <p class="text-muted small mb-0 d-none d-md-block">{{ channel.bio | truncate(150) }}</p>
                    {% endif %}
                </div>
                <div class="mt-2 mt-md-0 ms-md-auto">
                    {% if is_subscribed %}
                        <button class="btn btn-sm btn-outline-secondary channel-action-btn me-2" data-action="unsubscribe" data-channel-id="{{ channel.id }}">
                            <i class="bi bi-bell-slash-fill me-1"></i> Subscribed
                        </button>
                    {% elif channel.type == 'public' %}
                        <button class="btn btn-sm btn-primary channel-action-btn me-2" data-action="subscribe" data-channel-id="{{ channel.id }}">
                            <i class="bi bi-bell-fill me-1"></i> Subscribe
                        </button>
                    {% endif %}

                    {% if is_owner or is_admin %}
                        <a href="{{ url_for('edit_social_channel', channel_id=channel.id) }}" class="btn btn-sm btn-outline-primary me-2">
                            <i class="bi bi-pencil-square me-1"></i> Edit Channel
                        </a>
                        <a href="{{ url_for('manage_channel_subscribers', channel_id=channel.id) }}" class="btn btn-sm btn-outline-info">
                            <i class="bi bi-person-gear me-1"></i> Manage Subs
                        </a>
                    {% endif %}
                </div>
            </div>
             {% if channel.bio %} {# Show bio on mobile below header items #}
                <p class="text-muted small mb-2 d-md-none mt-2 text-center">{{ channel.bio | truncate(100) }}</p>
            {% endif %}
        </div>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    <div class="row g-4">
        {# Main Content Feed #}
        <div class="col-lg-8 col-xl-9 order-lg-2">
            {% include 'layout/_flash_messages.html' %}

            {# Post Creation Form - only if user can post (e.g., owner, admin, or if channel allows all subscribers) #}
            {% set can_post_in_channel = is_owner or is_admin %} {# Basic permission - can be expanded #}
            {% if can_post_in_channel %}
                <div class="mb-4">
                    {% include 'partials/_social_content_form.html' with {
                        'post_form': post_form,
                        'submit_url': url_for('create_channel_post', channel_id=channel.id),
                        'submit_button_text': 'Post to Channel',
                        'parent_id': channel.id
                    } %}
                </div>
            {% endif %}

            <h4 class="font-heading mb-3"><i class="bi bi-card-text me-2"></i>Channel Feed</h4>
            <div class="social-feed-container" id="channelFeedContainer-{{ channel.id }}">
                {% if posts and posts | length > 0 %}
                    {% for post in posts %}
                        {% include 'partials/_social_post_item.html' %}
                    {% endfor %}
                    {# Placeholder for "Load More" button or infinite scroll trigger #}
                    <div class="text-center my-4" id="loadMorePostsTrigger-{{ channel.id }}">
                        <button class="btn btn-outline-primary load-more-btn" data-channel-id="{{ channel.id }}" data-current-page="{{ pagination.page if pagination else 1 }}">
                            <span class="spinner-border spinner-border-sm d-none me-1" role="status" aria-hidden="true"></span>
                            Load More Posts
                        </button>
                    </div>
                {% else %}
                    <div class="text-center text-muted p-5 content-placeholder">
                        <i class="bi bi-mic-mute-fill display-3 mb-3"></i>
                        <h4 class="font-heading">It's Quiet Here...</h4>
                        {% if can_post_in_channel %}
                        <p>No posts in this channel yet. Be the first to share something!</p>
                        {% else %}
                        <p>No posts in this channel yet.</p>
                        {% endif %}
                    </div>
                {% endif %}
            </div>
        </div>

        {# Right Sidebar (Channel Info, Subscribers - Optional) #}
        <div class="col-lg-4 col-xl-3 order-lg-1 channel-sidebar">
            <div class="card shadow-sm mb-4">
                <div class="card-header">
                    <h5 class="mb-0 font-heading"><i class="bi bi-info-circle-fill me-2"></i>About This Channel</h5>
                </div>
                <div class="card-body">
                    <p><strong>Owner:</strong> {{ channel.owner.full_name or channel.owner.username if channel.owner else 'N/A' }}</p>
                    <p><strong>Created:</strong> {{ channel.created_at | dateformat }}</p>
                    <p><strong>Category:</strong> {{ channel.social_category.name if channel.social_category else 'N/A' }}</p>
                    <p><strong>Type:</strong> {{ channel.type | title }}</p>
                    <hr>
                    <p class="small text-muted">{{ channel.bio if channel.bio else "No detailed description provided for this channel."}}</p>
                </div>
            </div>

            <div class="card shadow-sm">
                <div class="card-header">
                    <h5 class="mb-0 font-heading"><i class="bi bi-people-fill me-2"></i>Subscribers ({{ channel.subscribers.count() }})</h5>
                </div>
                <div class="list-group list-group-flush" style="max-height: 300px; overflow-y: auto;">
                    {% for sub_entry in channel.subscribers.limit(10).all() %} {# Limit for display #}
                        <a href="#" class="list-group-item list-group-item-action d-flex align-items-center">
                             {% set sub_avatar = url_for('static', filename=(sub_entry.user.profile_photo_url if sub_entry.user.profile_photo_url else 'img/placeholders/user_avatar_default.png')) %}
                            <img src="{{ sub_avatar }}" alt="{{ sub_entry.user.username }}" class="rounded-circle me-2" style="width:32px; height:32px; object-fit:cover;">
                            <span class="small">{{ sub_entry.user.full_name or sub_entry.user.username }}</span>
                            {% if sub_entry.role != 'subscriber' %}
                                <span class="badge bg-primary-subtle text-primary-emphasis rounded-pill ms-auto small">{{ sub_entry.role | title }}</span>
                            {% endif %}
                        </a>
                    {% endfor %}
                    {% if channel.subscribers.count() > 10 %}
                        <a href="{{ url_for('manage_channel_subscribers', channel_id=channel.id) }}" class="list-group-item list-group-item-action text-center text-primary fw-medium">View All Subscribers...</a>
                    {% elif channel.subscribers.count() == 0 %}
                         <div class="list-group-item text-center text-muted small p-3">No subscribers yet.</div>
                    {% endif %}
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block body_scripts %}
<script src="{{ url_for('static', filename='js/social.js') }}?v={{ range(1, 100000) | random }}"></script>
{# Optional: BS5 Lightbox JS for image previews #}
{# <script src="https://cdn.jsdelivr.net/npm/bs5-lightbox@1.8.3/dist/bs5-lightbox.bundle.min.js"></script> #}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const channelId = {{ channel.id | tojson }};
        const currentUserId = {{ current_user.id | tojson }};

        // Initialize social interactions (posts, comments, reactions) for this channel
        if (typeof initializeSocialFeed === 'function') { // This function would be in social.js
            initializeSocialFeed('channel', channelId, currentUserId);
        } else {
            console.error('initializeSocialFeed function not found in social.js');
        }

        // Handle channel subscribe/unsubscribe buttons specifically on this page
        document.querySelectorAll('.channel-action-btn').forEach(button => {
            button.addEventListener('click', async function(e) {
                e.preventDefault();
                const action = this.dataset.action; // 'subscribe' or 'unsubscribe'
                const chanId = this.dataset.channelId;
                await handleChannelSubscriptionAction(chanId, action, this);
            });
        });
        console.log('View Channel page JS loaded.');
    });
</script>
{% endblock %}{% extends "layout/base.html" %}

{% block page_title %}My Channels{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-broadcast-pin me-2 text-primary"></i>My Channels
        </h1>
        <div class="btn-toolbar mb-2 mb-md-0">
            <a href="{{ url_for('social_channel_discover') }}" class="btn btn-sm btn-outline-info me-2">
                <i class="bi bi-compass-fill me-1"></i> Discover Channels
            </a>
            {% if current_user.role.name in ['hr_ceo', 'system_admin', 'teacher'] %} {# Role check for create button #}
            <a href="{{ url_for('create_social_channel') }}" class="btn btn-sm btn-success">
                <i class="bi bi-plus-circle-fill me-1"></i> Create New Channel
            </a>
            {% endif %}
        </div>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    {% include 'layout/_flash_messages.html' %}

    <ul class="nav nav-tabs mb-4" id="myChannelsTab" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link active" id="subscribed-tab" data-bs-toggle="tab" data-bs-target="#subscribed-channels-pane" type="button" role="tab" aria-controls="subscribed-channels-pane" aria-selected="true">
                <i class="bi bi-bell-fill me-1"></i> Subscribed Channels ({{ my_subscribed_channels | length if my_subscribed_channels else 0 }})
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="owned-tab" data-bs-toggle="tab" data-bs-target="#owned-channels-pane" type="button" role="tab" aria-controls="owned-channels-pane" aria-selected="false">
                 <i class="bi bi-person-video3 me-1"></i> Owned Channels ({{ my_owned_channels | length if my_owned_channels else 0 }})
            </button>
        </li>
    </ul>

    <div class="tab-content" id="myChannelsTabContent">
        <div class="tab-pane fade show active" id="subscribed-channels-pane" role="tabpanel" aria-labelledby="subscribed-tab" tabindex="0">
            {% if my_subscribed_channels and my_subscribed_channels | length > 0 %}
                <div class="row row-cols-1 row-cols-sm-2 row-cols-lg-3 row-cols-xl-4 g-4">
                    {% for subscription in my_subscribed_channels %}
                        {% set channel = subscription.channel %}
                        {# Variables needed by _channel_card_item.html must be set before include #}
                        {# current_user is assumed to be globally available from Flask-Login #}
                        {% set is_subscribed = True %}
                        {% set is_owner = (channel.owner_id == current_user.id) %}
                        
                        {# Call include in its simplest form #}
                        {% include 'partials/_channel_card_item.html' %}
                    {% endfor %}
                </div>
            {% else %}
                <div class="text-center text-muted p-5 content-placeholder">
                    <i class="bi bi-broadcast display-3 mb-3"></i>
                    <h4 class="font-heading">No Subscribed Channels Yet</h4>
                    <p>You haven't subscribed to any channels. Why not <a href="{{ url_for('social_channel_discover') }}">discover some</a>?</p>
                </div>
            {% endif %}
        </div>

        <div class="tab-pane fade" id="owned-channels-pane" role="tabpanel" aria-labelledby="owned-tab" tabindex="0">
            {% if my_owned_channels and my_owned_channels | length > 0 %}
                <div class="row row-cols-1 row-cols-sm-2 row-cols-lg-3 row-cols-xl-4 g-4">
                    {% for channel in my_owned_channels %}
                         {# Variables needed by _channel_card_item.html must be set before include #}
                         {# 'channel' is the loop variable, 'current_user' is global #}
                         {% set is_subscribed = True %} {# Owner is always subscribed conceptually #}
                         {% set is_owner = True %}

                         {# Call include in its simplest form #}
                         {% include 'partials/_channel_card_item.html' %}
                    {% endfor %}
                </div>
            {% else %}
                <div class="text-center text-muted p-5 content-placeholder">
                    <i class="bi bi-plus-square-dotted display-3 mb-3"></i>
                    <h4 class="font-heading">You Don't Own Any Channels</h4>
                     {% if current_user.role.name in ['hr_ceo', 'system_admin', 'teacher'] %}
                    <p>Ready to start one? <a href="{{ url_for('create_social_channel') }}">Create a new channel</a>.</p>
                    {% else %}
                    <p>Users with creator permissions can start new channels.</p>
                    {% endif %}
                </div>
            {% endif %}
        </div>
    </div>
</div>
{% endblock %}

{% block body_scripts %}
<script src="{{ url_for('static', filename='js/social.js') }}?v={{ range(1, 100000) | random }}"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // JS for handling channel subscribe/unsubscribe buttons if they are on this page
        // and not just on the discover page. The logic would be in social.js
        console.log('My Channels page JS loaded.');
    });
</script>
{% endblock %}
{% extends "layout/base.html" %}

{% block page_title %}Manage Subscribers: {{ channel.name }}{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-person-gear me-2 text-primary"></i>Manage Subscribers
        </h1>
        <a href="{{ url_for('view_social_channel', channel_id=channel.id) }}" class="btn btn-sm btn-outline-secondary">
            <i class="bi bi-arrow-left-circle me-1"></i> Back to Channel: {{ channel.name | truncate(30) }}
        </a>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    {% include 'layout/_flash_messages.html' %}

    <div class="card shadow-sm">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h5 class="mb-0 font-heading">Subscribers of "{{ channel.name }}"</h5>
            {# Optional: Add User to Channel Button (for owner/admin) #}
            {# <button class="btn btn-sm btn-success" data-bs-toggle="modal" data-bs-target="#addSubscriberModal"><i class="bi bi-person-plus-fill me-1"></i> Add Subscriber</button> #}
        </div>
        <div class="card-body p-0">
            {% if subscribers and subscribers | length > 0 %}
                <div class="table-responsive">
                    <table class="table table-hover table-striped mb-0 align-middle">
                        <thead class="table-light">
                            <tr>
                                <th scope="col" style="width: 5%;">Avatar</th>
                                <th scope="col">User</th>
                                <th scope="col">Global Role</th>
                                <th scope="col">Channel Role</th>
                                <th scope="col">Subscribed On</th>
                                <th scope="col" class="text-center">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% for sub_entry in subscribers %}
                                {% set user = sub_entry.user %}
                                <tr id="subscriber-row-{{ user.id }}">
                                    <td>
                                        {% set sub_avatar = url_for('static', filename=(user.profile_photo_url if user.profile_photo_url else 'img/placeholders/user_avatar_default.png')) %}
                                        <img src="{{ sub_avatar }}" alt="{{ user.username }}" class="rounded-circle" style="width: 35px; height: 35px; object-fit: cover;">
                                    </td>
                                    <td class="fw-medium">
                                        {{ user.full_name or user.username }}
                                        {% if user.id == channel.owner_id %}<span class="badge bg-primary-subtle text-primary-emphasis ms-1 small">Owner</span>{% endif %}
                                    </td>
                                    <td><small class="text-muted">{{ user.role.name.replace('_',' ') | title if user.role else 'N/A' }}</small></td>
                                    <td>
                                        {% if user.id == channel.owner_id %}
                                            <span class="badge bg-primary-subtle text-primary-emphasis p-2">{{ sub_entry.role | title }}</span>
                                        {% elif user_channel_role in ['owner'] or (user_channel_role == 'admin' and sub_entry.role != 'owner') %} {# Owner can edit all, Admin can edit non-owners #}
                                            <select class="form-select form-select-sm change-channel-role-select" 
                                                    data-channel-id="{{ channel.id }}" data-subscriber-id="{{ user.id }}"
                                                    {% if user.id == current_user.id %}disabled title="Cannot change your own role here"{% endif %}>
                                                <option value="subscriber" {% if sub_entry.role == 'subscriber' %}selected{% endif %}>Subscriber</option>
                                                <option value="admin" {% if sub_entry.role == 'admin' %}selected{% endif %}>Admin</option>
                                                {% if user_channel_role == 'owner' %} {# Only owner can make other owners #}
                                                {# <option value="owner" {% if sub_entry.role == 'owner' %}selected{% endif %}>Owner</option> #}
                                                {# Transfer ownership is a more complex action, typically separate #}
                                                {% endif %}
                                            </select>
                                        {% else %}
                                            <span class="badge bg-secondary-subtle text-secondary-emphasis p-2">{{ sub_entry.role | title }}</span>
                                        {% endif %}
                                    </td>
                                    <td><small class="text-muted">{{ sub_entry.subscribed_at | dateformat }}</small></td>
                                    <td class="text-center">
                                        {% if user.id != channel.owner_id and user.id != current_user.id %} {# Cannot remove owner or self here #}
                                         {% if user_channel_role in ['owner'] or (user_channel_role == 'admin' and sub_entry.role == 'subscriber') %}
                                            <button class="btn btn-sm btn-outline-danger p-1 remove-channel-subscriber-btn"
                                                    data-channel-id="{{ channel.id }}" data-subscriber-id="{{ user.id }}"
                                                    data-subscriber-name="{{ user.full_name or user.username }}"
                                                    title="Remove Subscriber">
                                                <i class="bi bi-person-x-fill fs-6"></i>
                                            </button>
                                         {% endif %}
                                        {% endif %}
                                    </td>
                                </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                </div>
            {% else %}
                <div class="text-center text-muted p-5 content-placeholder">
                    <i class="bi bi-person-plus-fill display-3 mb-3"></i>
                    <h4 class="font-heading">No Subscribers Yet</h4>
                    <p>This channel currently has no subscribers other than potentially the owner.</p>
                </div>
            {% endif %}
        </div>
    </div>
</div>

{# Modal for adding subscriber - placeholder for future implementation if direct add is desired
<div class="modal fade" id="addSubscriberModal" tabindex="-1" aria-labelledby="addSubscriberModalLabel" aria-hidden="true"> ... </div>
#}
{% endblock %}

{% block body_scripts %}
<script src="{{ url_for('static', filename='js/social.js') }}?v={{ range(1, 100000) | random }}"></script>
<script>
    // JavaScript for handling role changes and removals will be in social.js
    // This script block can initialize any page-specific listeners or TomSelect if needed.
    document.addEventListener('DOMContentLoaded', function () {
        // Initialize TomSelect for role dropdowns if they aren't too numerous.
        // For larger lists, direct select might be fine.
        document.querySelectorAll('.change-channel-role-select').forEach(selectEl => {
            // new TomSelect(selectEl, {create: false}); // If TomSelect is desired
            selectEl.addEventListener('change', handleChannelRoleChange);
        });

        // Remove buttons are handled by event delegation in social.js via .remove-channel-subscriber-btn
        console.log('Manage Channel Subscribers JS loaded.');
    });
</script>
{% endblock %}{% extends "layout/base.html" %}

{% block page_title %}Create New Channel{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-plus-square-fill me-2 text-primary"></i>Create New Channel
        </h1>
        <a href="{{ request.referrer or url_for('social_channel_list') }}" class="btn btn-sm btn-outline-secondary">
            <i class="bi bi-arrow-left-circle me-1"></i> Cancel & Go Back
        </a>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    <div class="row justify-content-center">
        <div class="col-lg-8 col-md-10">
            <div class="card shadow-sm">
                <div class="card-header bg-primary-subtle text-primary-emphasis">
                    <h5 class="mb-0 font-heading">Channel Details</h5>
                </div>
                <div class="card-body p-4">
                    {% include 'layout/_flash_messages.html' %}

                    <form method="POST" action="{{ url_for('create_social_channel') }}" enctype="multipart/form-data" novalidate>
                        {{ form.hidden_tag() if form.hidden_tag }} {# CSRF Token #}

                        <div class="mb-3">
                            {{ form.name.label(class="form-label fw-medium") }}
                            {{ form.name(class="form-control form-control-lg" + (" is-invalid" if form.name.errors else ""), placeholder="Enter a unique channel name") }}
                            {% if form.name.errors %}<div class="invalid-feedback">{% for e in form.name.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>

                        <div class="mb-3">
                            {{ form.bio.label(class="form-label fw-medium") }}
                            {{ form.bio(class="form-control" + (" is-invalid" if form.bio.errors else ""), rows="3", placeholder="Briefly describe your channel's purpose (optional)") }}
                            {% if form.bio.errors %}<div class="invalid-feedback">{% for e in form.bio.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                {{ form.channel_type.label(class="form-label fw-medium") }}
                                {{ form.channel_type(class="form-select" + (" is-invalid" if form.channel_type.errors else "")) }}
                                <small class="form-text text-muted">Public channels are visible to all; private channels require subscription approval (approval not yet implemented, treated as restricted view for now).</small>
                                {% if form.channel_type.errors %}<div class="invalid-feedback">{% for e in form.channel_type.errors %}{{e}}{% endfor %}</div>{% endif %}
                            </div>
                            <div class="col-md-6 mb-3">
                                {{ form.social_category_id.label(class="form-label fw-medium") }}
                                {{ form.social_category_id(class="form-select tom-select" + (" is-invalid" if form.social_category_id.errors else ""), placeholder="Select a category...") }}
                                {% if form.social_category_id.errors %}<div class="invalid-feedback">{% for e in form.social_category_id.errors %}{{e}}{% endfor %}</div>{% endif %}
                            </div>
                        </div>

                        <div class="mb-3">
                            {{ form.profile_photo.label(class="form-label fw-medium") }}
                            {{ form.profile_photo(class="form-control" + (" is-invalid" if form.profile_photo.errors else "")) }}
                            <small class="form-text text-muted">Optional. Max 2MB. JPG, PNG, GIF, WEBP.</small>
                            {% if form.profile_photo.errors %}<div class="invalid-feedback">{% for e in form.profile_photo.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>
                        
                        <hr class="my-4">
                        <h6 class="font-heading mb-3">Channel Settings:</h6>
                        <div class="form-check form-switch mb-2">
                            {{ form.allow_comments(class="form-check-input" + (" is-invalid" if form.allow_comments.errors else ""), role="switch", id="allowCommentsSwitch") }}
                            {{ form.allow_comments.label(class="form-check-label fw-medium", for="allowCommentsSwitch") }}
                            {% if form.allow_comments.errors %}<div class="invalid-feedback d-block">{% for e in form.allow_comments.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>
                        <div class="form-check form-switch mb-3">
                            {{ form.allow_reactions(class="form-check-input" + (" is-invalid" if form.allow_reactions.errors else ""), role="switch", id="allowReactionsSwitch") }}
                            {{ form.allow_reactions.label(class="form-check-label fw-medium", for="allowReactionsSwitch") }}
                            {% if form.allow_reactions.errors %}<div class="invalid-feedback d-block">{% for e in form.allow_reactions.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>


                        <div class="d-flex justify-content-end mt-4">
                            <a href="{{ request.referrer or url_for('social_channel_list') }}" class="btn btn-outline-secondary me-2">Cancel</a>
                            {{ form.submit(class="btn btn-primary px-4", value="Create Channel") }}
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block body_scripts %}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const categorySelect = document.getElementById('{{ form.social_category_id.id }}');
        if (categorySelect) {
            new TomSelect(categorySelect, {
                create: false, // Assuming categories are predefined
                placeholder: 'Select a category...'
            });
        }
        console.log('Create Channel page JS loaded.');
    });
</script>
{% endblock %}{% extends "layout/base.html" %}

{% block page_title %}Discover Channels{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-compass-fill me-2 text-primary"></i>Discover Channels
        </h1>
        <div class="btn-toolbar mb-2 mb-md-0">
            <a href="{{ url_for('social_channel_list') }}" class="btn btn-sm btn-outline-secondary me-2">
                <i class="bi bi-view-list me-1"></i> My Channels
            </a>
             {% if current_user.role.name in ['hr_ceo', 'system_admin', 'teacher'] %}
            <a href="{{ url_for('create_social_channel') }}" class="btn btn-sm btn-success">
                <i class="bi bi-plus-circle-fill me-1"></i> Create New Channel
            </a>
            {% endif %}
        </div>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    {% include 'layout/_flash_messages.html' %}

    {# Filter and Search Bar #}
    <div class="card shadow-sm mb-4">
        <div class="card-body bg-light-subtle p-3">
            <form method="GET" action="{{ url_for('social_channel_discover') }}" class="row g-3 align-items-end">
                <div class="col-md-5">
                    <label for="channelSearchInput" class="form-label fw-medium text-muted small">Search Channels:</label>
                    <input type="text" name="search_query" id="channelSearchInput" class="form-control form-control-sm" value="{{ search_query or '' }}" placeholder="Search by name or bio...">
                </div>
                <div class="col-md-5">
                    <label for="categoryFilter" class="form-label fw-medium text-muted small">Filter by Category:</label>
                    <select name="category_id" id="categoryFilter" class="form-select form-select-sm tom-select-filter">
                        <option value="" {% if not selected_category_id %}selected{% endif %}>All Categories</option>
                        {% for category in all_social_categories %}
                            <option value="{{ category.id }}" {% if selected_category_id == category.id %}selected{% endif %}>{{ category.name }}</option>
                        {% endfor %}
                    </select>
                </div>
                <div class="col-md-2 d-flex align-items-end">
                    <button type="submit" class="btn btn-primary btn-sm w-100"><i class="bi bi-search me-1"></i>Filter</button>
                </div>
            </form>
        </div>
    </div>

    {# Channel Listing #}
    {% if discoverable_channels and discoverable_channels | length > 0 %}
        <div class="row row-cols-1 row-cols-sm-2 row-cols-lg-3 row-cols-xl-4 g-4" id="discoverChannelsContainer">
            {% for channel in discoverable_channels %}
                 {# Pass subscription status to the card if available #}
                 {% set is_subscribed = channel_statuses.get(channel.id, {}).get('is_subscribed', False) %}
                 {% set is_owner = channel_statuses.get(channel.id, {}).get('is_owner', False) %}
                 {% include 'partials/_channel_card_item.html' %}
            {% endfor %}
        </div>
        {# Optional: Pagination for discoverable_channels #}
        {% if pagination %}
            <nav aria-label="Channel discovery pagination" class="mt-5 d-flex justify-content-center">
                <ul class="pagination shadow-sm">
                    <li class="page-item {{ 'disabled' if not pagination.has_prev else '' }}">
                        <a class="page-link" href="{{ url_for('social_channel_discover', page=pagination.prev_num, search_query=search_query, category_id=selected_category_id) if pagination.has_prev else '#' }}">«</a>
                    </li>
                    {% for page_num in pagination.iter_pages(left_edge=1, right_edge=1, left_current=2, right_current=2) %}
                        {% if page_num %}
                            <li class="page-item {{ 'active' if page_num == pagination.page else '' }}">
                                <a class="page-link" href="{{ url_for('social_channel_discover', page=page_num, search_query=search_query, category_id=selected_category_id) }}">{{ page_num }}</a>
                            </li>
                        {% else %}
                            <li class="page-item disabled"><span class="page-link">...</span></li>
                        {% endif %}
                    {% endfor %}
                    <li class="page-item {{ 'disabled' if not pagination.has_next else '' }}">
                        <a class="page-link" href="{{ url_for('social_channel_discover', page=pagination.next_num, search_query=search_query, category_id=selected_category_id) if pagination.has_next else '#' }}">»</a>
                    </li>
                </ul>
            </nav>
        {% endif %}

    {% else %}
        <div class="text-center text-muted p-5 content-placeholder">
            <i class="bi bi- binoculars-fill display-3 mb-3"></i>
            <h4 class="font-heading">No Channels Found</h4>
            <p>No public channels match your current search or filter criteria. Why not create one?</p>
        </div>
    {% endif %}
</div>
{% endblock %}

{% block body_scripts %}
<script src="{{ url_for('static', filename='js/social.js') }}?v={{ range(1, 100000) | random }}"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Initialize TomSelect for category filter
        const categoryFilterSelect = document.getElementById('categoryFilter');
        if (categoryFilterSelect) {
            new TomSelect(categoryFilterSelect, { create: false, placeholder: 'Select a category...' });
        }

        // Live search input (optional, AJAX based search is better)
        const channelSearchInput = document.getElementById('channelSearchInput');
        if (channelSearchInput && !document.getElementById('discoverChannelsContainer').children.length < 20) { // Simple disable if many items (server search better)
            // Basic live search example (can be improved with AJAX)
            // channelSearchInput.addEventListener('keyup', debounce(function() {
            //     const searchTerm = this.value.toLowerCase();
            //     document.querySelectorAll('#discoverChannelsContainer .channel-card').forEach(card => {
            //         const channelName = card.querySelector('.card-title a').textContent.toLowerCase();
            //         const channelBio = card.querySelector('.card-text').textContent.toLowerCase();
            //         if (channelName.includes(searchTerm) || channelBio.includes(searchTerm)) {
            //             card.parentElement.style.display = ''; // Show column
            //         } else {
            //             card.parentElement.style.display = 'none'; // Hide column
            //         }
            //     });
            // }, 300));
        }
        console.log('Discover Channels page JS loaded.');
    });
</script>
{% endblock %}{% extends "layout/base.html" %}

{% block page_title %}Edit Channel: {{ channel.name }}{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-pencil-square me-2 text-primary"></i>Edit Channel Settings
        </h1>
        <a href="{{ url_for('view_social_channel', channel_id=channel.id) }}" class="btn btn-sm btn-outline-secondary">
            <i class="bi bi-arrow-left-circle me-1"></i> Back to Channel
        </a>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    <div class="row justify-content-center">
        <div class="col-lg-8 col-md-10">
            <div class="card shadow-sm">
                <div class="card-header bg-primary-subtle text-primary-emphasis">
                    <h5 class="mb-0 font-heading">Editing: {{ channel.name }}</h5>
                </div>
                <div class="card-body p-4">
                    {% include 'layout/_flash_messages.html' %}

                    <form method="POST" action="{{ url_for('edit_social_channel', channel_id=channel.id) }}" enctype="multipart/form-data" novalidate>
                        {{ form.hidden_tag() if form.hidden_tag }} {# CSRF Token #}

                        <div class="mb-3">
                            {{ form.name.label(class="form-label fw-medium") }}
                            {{ form.name(class="form-control form-control-lg" + (" is-invalid" if form.name.errors else ""), placeholder="Enter channel name") }}
                            {% if form.name.errors %}<div class="invalid-feedback">{% for e in form.name.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>

                        <div class="mb-3">
                            {{ form.bio.label(class="form-label fw-medium") }}
                            {{ form.bio(class="form-control" + (" is-invalid" if form.bio.errors else ""), rows="3", placeholder="Brief channel description") }}
                            {% if form.bio.errors %}<div class="invalid-feedback">{% for e in form.bio.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>

                        <div class="mb-3">
                            {{ form.social_category_id.label(class="form-label fw-medium") }}
                            {{ form.social_category_id(class="form-select tom-select" + (" is-invalid" if form.social_category_id.errors else "")) }}
                            {% if form.social_category_id.errors %}<div class="invalid-feedback">{% for e in form.social_category_id.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>
                        
                        {# Current Profile Photo Preview #}
                        {% if channel.profile_photo_url %}
                        <div class="mb-2">
                            <label class="form-label fw-medium">Current Profile Photo:</label><br>
                            <img src="{{ url_for('static', filename=channel.profile_photo_url) }}" alt="Current channel photo" class="img-thumbnail mb-2" style="max-width: 150px; max-height: 150px;">
                        </div>
                        {% endif %}

                        <div class="mb-3">
                            {{ form.profile_photo.label(text="Change Profile Photo (Optional)", class="form-label fw-medium") }}
                            {{ form.profile_photo(class="form-control" + (" is-invalid" if form.profile_photo.errors else "")) }}
                            <small class="form-text text-muted">Max 2MB. JPG, PNG, GIF, WEBP. Leave blank to keep current photo.</small>
                            {% if form.profile_photo.errors %}<div class="invalid-feedback">{% for e in form.profile_photo.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>
                        
                        <hr class="my-4">
                        <h6 class="font-heading mb-3">Channel Content Settings:</h6>
                        <div class="form-check form-switch mb-2">
                            {{ form.allow_comments(class="form-check-input" + (" is-invalid" if form.allow_comments.errors else ""), role="switch", id="allowCommentsSwitch") }}
                            {{ form.allow_comments.label(class="form-check-label fw-medium", for="allowCommentsSwitch") }}
                            {% if form.allow_comments.errors %}<div class="invalid-feedback d-block">{% for e in form.allow_comments.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>
                        <div class="form-check form-switch mb-3">
                            {{ form.allow_reactions(class="form-check-input" + (" is-invalid" if form.allow_reactions.errors else ""), role="switch", id="allowReactionsSwitch") }}
                            {{ form.allow_reactions.label(class="form-check-label fw-medium", for="allowReactionsSwitch") }}
                            {% if form.allow_reactions.errors %}<div class="invalid-feedback d-block">{% for e in form.allow_reactions.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>

                        <div class="d-flex justify-content-end mt-4">
                            <a href="{{ url_for('view_social_channel', channel_id=channel.id) }}" class="btn btn-outline-secondary me-2">Cancel</a>
                            {{ form.submit(class="btn btn-primary px-4", value="Save Channel Changes") }}
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block body_scripts %}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const categorySelect = document.getElementById('{{ form.social_category_id.id }}');
        if (categorySelect) {
            new TomSelect(categorySelect, { create: false });
        }
        console.log('Edit Channel page JS loaded.');
    });
</script>
{% endblock %}{% extends "layout/base.html" %}

{% block title %}{{ title }}{% endblock %}

{% block content %}
<div class="container-fluid px-4 py-5">
    <div class="row">
        <div class="col-lg-8 col-md-10 mx-auto">
            
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <a href="{{ url_for('contacts_list') }}" class="btn btn-outline-secondary btn-sm me-2" title="Back to All Contacts">
                        <i class="bi bi-arrow-left"></i>
                    </a>
                    <h1 class="h2 text-primary fw-bold d-inline-block">{{ title }}</h1>
                </div>
            </div>

            <div class="card shadow-sm">
                <div class="card-body p-0">
                    <div class="list-group list-group-flush">
                        {% for contact in students %}
                            {% include 'partials/_contact_list_item.html' %}
                        {% else %}
                        <div class="list-group-item text-center text-muted p-4">
                            No students found in this section that match the criteria.
                        </div>
                        {% endfor %}
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>
{% endblock %}{% extends "layout/base.html" %}

{% block page_title %}Chat with {{ target_user.full_name or target_user.username }}{% endblock %}

{% block head_css %}
<style>
    .chat-window {
        height: calc(100vh - 56px - 56px - 70px - 3rem); /* Full height - navbar - footer - input_area - padding */
        min-height: 400px; /* Minimum height for chat window */
        overflow-y: auto;
        display: flex;
        flex-direction: column-reverse; /* Newest messages at the bottom, auto-scroll */
        padding: 1rem;
        background-color: var(--nexus-body-bg); /* Match overall body bg */
    }
    .chat-input-area {
        border-top: 1px solid var(--nexus-border-color);
        background-color: var(--nexus-content-bg);
    }
    /* Message bubble styles will be in style.scss */
</style>
{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-0 border-bottom bg-light-subtle sticky-top shadow-sm" style="top: 56px; z-index: 1010;"> {# Sticky header for chat target #}
        <div class="d-flex align-items-center">
            <a href="{{ url_for('contacts_list') }}" class="btn btn-sm btn-outline-secondary me-3" title="Back to Contacts">
                <i class="bi bi-arrow-left-circle"></i>
            </a>
            {% if target_user.profile_photo_url %}
                <img src="{{ url_for('static', filename=target_user.profile_photo_url) }}" alt="{{ target_user.username }}" class="rounded-circle me-2 shadow-sm" style="width: 40px; height: 40px; object-fit: cover;">
            {% else %}
                <i class="bi bi-person-circle fs-2 me-2 text-muted"></i>
            {% endif %}
            <div>
                <h1 class="page-title font-heading mb-0 fs-5">{{ target_user.full_name or target_user.username }}</h1>
                <small class="text-muted">{{ target_user.role.name.replace('_', ' ') | title if target_user.role else 'N/A' }}</small>
                {# Placeholder for online status / last seen #}
            </div>
        </div>
        <div class="btn-toolbar mb-2 mb-md-0">
            {# Optional: More actions like call, video call, view profile #}
            {# <button class="btn btn-sm btn-outline-secondary me-2"><i class="bi bi-telephone-fill"></i></button> #}
            {# <a href="#" class="btn btn-sm btn-outline-secondary"><i class="bi bi-info-circle-fill"></i></a> #}
        </div>
    </div>
{% endblock %}

{% block content %}
{# No sidebar for chat view, full width focus #}
{% set no_sidebar = True %}

<div class="container-fluid px-0 h-100 d-flex flex-column">
    {# Flash messages specific to chat operations could go here, but usually handled by JS alerts #}
    {# {% include 'layout/_flash_messages.html' %} #}

    <div class="chat-window flex-grow-1" id="chatWindowMessages">
        {# Messages will be appended here by JS, newest at the bottom #}
        {# Initial messages can be loaded from the backend if desired #}
        {% if messages and messages | length > 0 %}
            {% for message_loop_var in messages %} {# Changed loop variable #}
                {# Set context for the partial #}
                {% set message = message_loop_var %}
                {% set current_user_id = current_user.id %}
                {% include 'partials/_chat_message_item.html' %}
            {% endfor %}
        {% else %}
            <div class="text-center text-muted p-5 flex-grow-1 d-flex align-items-center justify-content-center">
                <div>
                    <i class="bi bi-chat-quote-fill display-3 mb-3"></i>
                    <h4 class="font-heading">Start the Conversation!</h4>
                    <p>Send a message to {{ target_user.full_name or target_user.username }}.</p>
                </div>
            </div>
        {% endif %}
    </div>

    <div class="chat-input-area p-3">
        <form id="chatMessageForm" method="POST" action="{{ url_for('universal_chat', target_user_id=target_user.id) }}" novalidate>
            {{ csrf_token() if csrf_token else '' }} {# CSRF for AJAX if forms are used that way #}
            <div class="input-group">
                {# Optional: File attachment button - requires more backend/JS logic #}
                {# <button class="btn btn-outline-secondary" type="button" id="chatAttachFileBtn" title="Attach file"><i class="bi bi-paperclip"></i></button> #}
                {# templates/chat/universal_chat.html #}
{# ... inside <div class="chat-input-area p-3"> ... #}
<form id="chatMessageForm" method="POST" enctype="multipart/form-data" novalidate> {# action removed as JS will handle, added enctype #}
    {{ csrf_token() if csrf_token else '' }}
    
    {# BEGIN ADD - Task E1.4 (File Input UI for DMs) #}
    <div id="dmFilePreviewArea" class="mb-2 small"></div> {# For displaying selected file info #}
    <input type="file" id="chatActualDmFileInput" name="dm_file" class="d-none" 
           accept="image/*,application/pdf,.doc,.docx,.xls,.xlsx,.ppt,.pptx,.txt,.zip,.rar,.mp3,.wav,.mp4,.mov,.avi">
    {# END ADD - Task E1.4 (File Input UI for DMs) #}

    <div class="input-group">
        {# BEGIN ADD - Task E1.4 (Attach Button for DMs) #}
        <button class="btn btn-outline-secondary" type="button" id="chatAttachFileBtn" title="Attach file">
            <i class="bi bi-paperclip"></i>
        </button>
        {# END ADD - Task E1.4 (Attach Button for DMs) #}
        <textarea class="form-control" id="chatMessageInput" name="message" rows="1" placeholder="Type your message..." aria-label="Message" style="resize: none;"></textarea>
        <button class="btn btn-primary" type="submit" id="sendChatMessageBtn" title="Send message">
            <i class="bi bi-send-fill"></i>
            <span class="d-none d-sm-inline ms-1">Send</span>
        </button>
    </div>
    <small class="text-muted d-block mt-1" id="typingIndicator" style="height: 1.2em;"></small>
</form>

         <small class="text-muted d-block mt-1" id="typingIndicator" style="height: 1.2em;"></small> {# For "User is typing..." #}
    </div>
</div>
{% endblock %}

{% block body_scripts %}
{# Ensure chat.js is loaded after main.js/utils.js in base.html #}
<script src="{{ url_for('static', filename='js/chat.js') }}?v={{ range(1, 100000) | random }}"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Pass target_user_id to chat.js for its operations
        const targetUserId = {{ target_user.id | tojson }};
        const currentUserId = {{ current_user.id | tojson }};

        if (typeof initializeChat === 'function') {
            initializeChat(targetUserId, currentUserId);
        } else {
            console.error('initializeChat function not found in chat.js');
        }

        // Auto-resize textarea
        const messageInput = document.getElementById('chatMessageInput');
        if(messageInput) {
            messageInput.addEventListener('input', function () {
                this.style.height = 'auto';
                this.style.height = (this.scrollHeight) + 'px';
            });
            // Allow Shift+Enter for new line, Enter to send
            messageInput.addEventListener('keydown', function(event) {
                if (event.key === 'Enter' && !event.shiftKey) {
                    event.preventDefault();
                    document.getElementById('chatMessageForm').requestSubmit();
                }
            });
        }
    });
</script>
{% endblock %}
{% extends "layout/base.html" %}

{% block title %}{{ title }}{% endblock %}

{% block content %}
<div class="container-fluid px-4 py-5">
    <div class="row">
        <div class="col-lg-11 col-xl-10 mx-auto">
            
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h1 class="h2 text-primary fw-bold"><i class="bi bi-people-fill me-2"></i>{{ title }}</h1>
            </div>

            <div class="row">
                <!-- Left Column: Staff and Teachers -->
                <div class="col-lg-6 mb-4 mb-lg-0">
                    
                    <!-- Staff & Admin Contacts -->
                    {% if other_contacts_by_role %}
                    <div class="card shadow-sm mb-4">
                        <div class="card-header bg-light">
                            <h5 class="mb-0 text-muted"><i class="bi bi-person-badge-fill me-2"></i>Staff & Administration</h5>
                        </div>
                        {% for role_name, contacts in other_contacts_by_role.items() %}
                        <div class="list-group list-group-flush">
                            <h6 class="list-group-item bg-light-subtle small text-uppercase fw-bold">{{ role_name }}</h6>
                            {% for contact in contacts %}
                                {% include 'partials/_contact_list_item.html' %}
                            {% endfor %}
                        </div>
                        {% endfor %}
                    </div>
                    {% endif %}

                    <!-- Teacher Contacts (Grouped by Class) -->
                    {% if 'teacher' in allowed_role_names and sorted_teacher_blocks %}
                    <div class="card shadow-sm">
                        <div class="card-header bg-light">
                            <h5 class="mb-0 text-muted"><i class="bi bi-person-video3 me-2"></i>Teachers (by Class)</h5>
                        </div>
                        <div class="accordion accordion-flush" id="teachersAccordion">
                            {% for (grade, section), teachers in sorted_teacher_blocks %}
                            <div class="accordion-item">
                                <h2 class="accordion-header" id="heading-{{ grade }}-{{ section }}">
                                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-{{ grade }}-{{ section }}" aria-expanded="false" aria-controls="collapse-{{ grade }}-{{ section }}">
                                        Grade {{ grade }} - Section {{ section }}
                                    </button>
                                </h2>
                                <div id="collapse-{{ grade }}-{{ section }}" class="accordion-collapse collapse" aria-labelledby="heading-{{ grade }}-{{ section }}" data-bs-parent="#teachersAccordion">
                                    <div class="list-group list-group-flush">
                                        {% for contact in teachers %}
                                            {% include 'partials/_contact_list_item.html' %}
                                        {% endfor %}
                                    </div>
                                </div>
                            </div>
                            {% endfor %}
                        </div>
                    </div>
                    {% endif %}

                </div> <!-- End Left Column -->

                <!-- Right Column: Students -->
                <div class="col-lg-6">
                    {% if 'student' in allowed_role_names %}
                    <div class="card shadow-sm">
                        <div class="card-header bg-light">
                            <h5 class="mb-0 text-muted"><i class="bi bi-mortarboard-fill me-2"></i>Students (by Grade/Section)</h5>
                        </div>
                        <div class="card-body">
                            
                            <!-- Talent Club Members Block -->
                            <h6 class="text-success fw-bold"><i class="bi bi-stars me-2"></i>Talent Club Members</h6>
                            {% if tc_student_blocks %}
                                <div class="list-group list-group-flush mb-4">
                                {% for grade, section, student_count in tc_student_blocks %}
                                    <a href="{{ url_for('contacts_by_section', grade=grade, section=section, tc_only='true') }}" class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
                                        <div>
                                            <i class="bi bi-grid-3x3-gap-fill me-2 text-success"></i>
                                            <span class="fw-bold">Grade {{ grade }} - Section {{ section }}</span>
                                        </div>
                                        <span class="badge bg-success-subtle text-success-emphasis rounded-pill">{{ student_count }} member(s)</span>
                                    </a>
                                {% endfor %}
                                </div>
                            {% else %}
                                <p class="small text-muted ps-3">No Talent Club members found.</p>
                            {% endif %}
                            
                            <hr>

                            <!-- Other Students Block -->
                            <h6 class="text-secondary fw-bold"><i class="bi bi-people me-2"></i>Other Students</h6>
                            {% if non_tc_student_blocks %}
                                <div class="list-group list-group-flush">
                                {% for grade, section, student_count in non_tc_student_blocks %}
                                    <a href="{{ url_for('contacts_by_section', grade=grade, section=section, tc_only='false') }}" class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
                                        <div>
                                            <i class="bi bi-grid-3x3-gap-fill me-2 text-secondary"></i>
                                            <span class="fw-bold">Grade {{ grade }} - Section {{ section }}</span>
                                        </div>
                                        <span class="badge bg-secondary-subtle text-secondary-emphasis rounded-pill">{{ student_count }} student(s)</span>
                                    </a>
                                {% endfor %}
                                </div>
                            {% else %}
                                <p class="small text-muted ps-3">No other students found.</p>
                            {% endif %}

                        </div>
                    </div>
                    {% endif %}
                </div> <!-- End Right Column -->
            </div>
        </div>
    </div>
</div>
{% endblock %}{% extends "layout/base.html" %}

{% block page_title %}My Talent Club Proposals{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-file-earmark-check-fill me-2 text-primary"></i>My Submitted Proposals
        </h1>
        <div class="btn-toolbar mb-2 mb-md-0">
            <a href="{{ url_for('create_talent_club_proposal') }}" class="btn btn-sm btn-success me-2">
                <i class="bi bi-plus-circle-fill me-1"></i> Submit New Proposal
            </a>
            <a href="{{ url_for('talent_club_configuration') }}" class="btn btn-sm btn-outline-secondary">
                <i class="bi bi-arrow-left-circle me-1"></i> Back to TC Configuration
            </a>
        </div>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    {% include 'layout/_flash_messages.html' %}

    <div class="card shadow-sm">
        <div class="card-header">
            <h5 class="mb-0 font-heading">Your Club Proposals</h5>
        </div>
        <div class="card-body p-0">
            {% if proposals and proposals | length > 0 %}
                <div class="list-group list-group-flush">
                    {% for proposal_loop_var in proposals %} {# Changed loop variable name for clarity to avoid collision if 'proposal' is set outside #}
                        {# Set the context variables needed by the partial #}
                        {% set proposal = proposal_loop_var %}
                        {% set accepted_count = accepted_counts.get(proposal_loop_var.id, 0) %}
                        
                        {# Call include in its simplest form #}
                        {% include 'partials/_tc_proposal_item.html' %}
                    {% endfor %}
                </div>
            {% else %}
                <div class="text-center text-muted p-5 content-placeholder">
                    <i class="bi bi-journal-richtext display-3 mb-3"></i>
                    <h4 class="font-heading">No Proposals Submitted Yet</h4>
                    <p>Ready to share your vision? <a href="{{ url_for('create_talent_club_proposal') }}">Propose a new Talent Club!</a></p>
                </div>
            {% endif %}
        </div>
        {# Optional: Pagination if proposal list can be very long #}
    </div>
</div>
{% endblock %}
{% extends "layout/base.html" %}

{% block title %}My Club Management{% endblock %}

{% block content_header %}
<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2 font-heading">
        <i class="bi bi-person-video3 me-2 text-primary"></i>My Club Involvement
    </h1>
    <a href="{{ url_for('talent_club_configuration') }}" class="btn btn-sm btn-outline-secondary">
        <i class="bi bi-arrow-left-circle me-1"></i>Back to TC Config
    </a>
</div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    {% include 'layout/_flash_messages.html' %}

    {# Section for Clubs the User Manages #}
    <div class="card shadow-sm mb-4">
        <div class="card-header bg-light-subtle">
            <h5 class="mb-0 font-heading"><i class="bi bi-person-gear me-2"></i>Clubs I Manage</h5>
        </div>
        <div class="card-body p-0">
            {% if my_manager_memberships %}
                <div class="list-group list-group-flush">
                    {% for membership in my_manager_memberships %}
                        {% set club = membership.club %}
                        <div class="list-group-item p-3">
                            <div class="d-flex w-100 justify-content-between align-items-center">
                                <div class="d-flex align-items-center">
                                    <img src="{{ url_for('static', filename=(club.profile_photo_url or 'img/placeholders/tc_club_default_avatar.png')) }}" alt="{{ club.name }}" class="rounded-circle me-3" width="40" height="40">
                                    <div>
                                        <h6 class="mb-0 font-heading">{{ club.name }}</h6>
                                        <small class="text-muted">Your Role: {{ membership.role | title }}</small>
                                    </div>
                                </div>
                                <div class="text-end">
                                    <a href="#" class="btn btn-sm btn-primary disabled" data-bs-toggle="tooltip" title="Manage members, settings, etc. (Coming Soon)">
                                        <i class="bi bi-gear-fill me-1"></i>Manage
                                    </a>
                                    <a href="{{ url_for('view_talent_club_feed', club_id=club.id) }}" class="btn btn-sm btn-outline-secondary">
                                        <i class="bi bi-layout-text-sidebar-reverse me-1"></i>View Feed
                                    </a>
                                </div>
                            </div>
                        </div>
                    {% endfor %}
                </div>
            {% else %}
                <p class="text-muted text-center p-3">You do not manage any clubs.</p>
            {% endif %}
        </div>
    </div>

    {# Section for Clubs the User is a Member Of #}
    <div class="card shadow-sm">
        <div class="card-header bg-light-subtle">
            <h5 class="mb-0 font-heading"><i class="bi bi-people-fill me-2"></i>Clubs I'm a Member Of</h5>
        </div>
        <div class="card-body p-0">
            {% if my_member_memberships %}
                <div class="list-group list-group-flush">
                    {% for membership in my_member_memberships %}
                        {% set club = membership.club %}
                        <div class="list-group-item p-3">
                             <div class="d-flex w-100 justify-content-between align-items-center">
                                <div class="d-flex align-items-center">
                                    <img src="{{ url_for('static', filename=(club.profile_photo_url or 'img/placeholders/tc_club_default_avatar.png')) }}" alt="{{ club.name }}" class="rounded-circle me-3" width="40" height="40">
                                    <div>
                                        <h6 class="mb-0 font-heading">{{ club.name }}</h6>
                                        <small class="text-muted">Level: {{ club.level }}</small>
                                    </div>
                                </div>
                                <div class="text-end">
                                    <a href="{{ url_for('view_talent_club_feed', club_id=club.id) }}" class="btn btn-sm btn-outline-secondary">
                                        <i class="bi bi-layout-text-sidebar-reverse me-1"></i>View Feed
                                    </a>
                                    {# The action for leaving a club is handled by the talent_club.js AJAX call #}
                                    <button class="btn btn-sm btn-outline-danger tc-action-btn" data-action="leave_club" data-club-id="{{ club.id }}">
                                        <i class="bi bi-door-open-fill me-1"></i>Leave
                                    </button>
                                </div>
                            </div>
                        </div>
                    {% endfor %}
                </div>
            {% else %}
                <div class="text-center p-3">
                    <p class="text-muted">You are not a member of any other clubs.</p>
                    <a href="{{ url_for('talent_club_discover') }}" class="btn btn-sm btn-primary">Discover Clubs</a>
                </div>
            {% endif %}
        </div>
    </div>
</div>
{% endblock %}{% extends "layout/base.html" %}

{% block page_title %}{{ club.name }} - Feed{% endblock %}

{% block content_header %}
    <div class="channel-header pt-3 pb-2 mb-3 border-bottom bg-light-subtle position-relative"> {# Reusing .channel-header styling for consistency #}
        <div class="container-fluid">
            <div class="d-flex flex-column flex-md-row align-items-md-center">
                <a href="{{ url_for('view_talent_club_profile', club_id=club.id) }}" class="me-md-3 mb-2 mb-md-0 text-center text-md-start">
                    {% set club_avatar_view = url_for('static', filename=(club.profile_photo_url if club.profile_photo_url else 'img/placeholders/tc_club_default_avatar.png')) %}
                    <img src="{{ club_avatar_view }}" alt="{{ club.name }} Profile Photo" class="rounded-circle shadow-sm" style="width: 60px; height: 60px; object-fit: cover; border: 2px solid var(--nexus-content-bg);">
                </a>
                <div class="flex-grow-1 text-center text-md-start">
                    <a href="{{ url_for('view_talent_club_profile', club_id=club.id) }}" class="text-decoration-none">
                        <h1 class="page-title font-heading mb-0 fs-4 text-dark">{{ club.name }} Feed</h1>
                    </a>
                    <p class="text-muted mb-1 small">
                        <i class="bi bi-award-fill me-1"></i>Level {{ club.level }}
                        <span class="mx-1 text-muted">|</span>
                        <i class="bi bi-tag-fill me-1"></i>{{ club.social_category.name if club.social_category else 'N/A' }}
                    </p>
                </div>
                <div class="mt-2 mt-md-0 ms-md-auto">
                     <a href="{{ url_for('view_talent_club_profile', club_id=club.id) }}" class="btn btn-sm btn-outline-secondary me-2">
                        <i class="bi bi-person-badge-fill me-1"></i> Club Profile
                    </a>
                    {% if is_club_manager %} {# is_club_manager: owner or club admin #}
                        <a href="{{ url_for('edit_talent_club_profile', club_id=club.id) }}" class="btn btn-sm btn-outline-primary">
                            <i class="bi bi-pencil-square me-1"></i> Edit Club
                        </a>
                    {% endif %}
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    <div class="row g-4 justify-content-center">
        <div class="col-lg-9 col-xl-8"> {# Main feed column #}
            {% include 'layout/_flash_messages.html' %}

            {% if can_post_in_feed %}
                <div class="mb-4">
                     {# Reusing _social_content_form.html for TC feed posts #}
                    {% include 'partials/_social_content_form.html' with {
                        'post_form': post_form,
                        'submit_url': url_for('create_talent_club_feed_post', club_id=club.id), {# Ensure this route exists #}
                        'submit_button_text': 'Post to Club Feed',
                        'parent_id': club.feed.id if club.feed else club.id
                    } %}
                </div>
            {% endif %}

            <h4 class="font-heading mb-3"><i class="bi bi-newspaper me-2"></i>Club Feed Posts</h4>
            <div class="social-feed-container tc-feed-container" id="tcFeedContainer-{{ club.id }}">
                {% if posts and posts | length > 0 %}
                    {% for post in posts %}
                        {% include 'partials/_tc_feed_post_item.html' with {'club': club} %} {# Pass club for context to partial #}
                    {% endfor %}
                    {# Placeholder for "Load More" button or infinite scroll trigger #}
                    {% if pagination and pagination.has_next %}
                    <div class="text-center my-4" id="loadMoreTcPostsTrigger-{{ club.id }}">
                        <button class="btn btn-outline-primary load-more-tc-posts-btn" data-club-id="{{ club.id }}" data-current-page="{{ pagination.page }}">
                            <span class="spinner-border spinner-border-sm d-none me-1" role="status" aria-hidden="true"></span>
                            Load More Posts
                        </button>
                    </div>
                    {% endif %}
                {% else %}
                    <div class="text-center text-muted p-5 content-placeholder">
                        <i class="bi bi-mic-mute-fill display-3 mb-3"></i>
                        <h4 class="font-heading">This Club Feed is Empty</h4>
                        {% if can_post_in_feed %}
                        <p>Be the first to share an update, achievement, or idea!</p>
                        {% else %}
                        <p>Check back later for new posts.</p>
                        {% endif %}
                    </div>
                {% endif %}
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block body_scripts %}
<script src="{{ url_for('static', filename='js/talent_club.js') }}?v={{ range(1, 100000) | random }}"></script>
{# Lightbox JS if used for image previews in _tc_feed_post_item.html #}
{# <script src="https://cdn.jsdelivr.net/npm/bs5-lightbox@1.8.3/dist/bs5-lightbox.bundle.min.js"></script> #}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const clubId = {{ club.id | tojson }};
        const currentUserId = {{ current_user.id | tojson }};

        // Initialize TC feed interactions (posts, comments, reactions)
        if (typeof initializeTCFeed === 'function') { // This function would be in talent_club.js
            initializeTCFeed(clubId, currentUserId);
        } else {
            console.error('initializeTCFeed function not found in talent_club.js');
            // Fallback: generic social.js handlers might work for some parts if class names are similar
            // and backend responses are consistent.
        }
         console.log('Talent Club Feed page JS loaded.');
    });
</script>
{% endblock %}{% extends "layout/base.html" %}

{% block page_title %}{{ community_group.name if community_group else "Talent Club Community" }}{% endblock %}

{% block head_css %}
<style>
    .tc-community-chat-window {
        height: calc(100vh - 56px - 56px - 70px - 3rem - 70px); /* Adjust for header and input */
        min-height: 400px;
        overflow-y: auto;
        display: flex;
        flex-direction: column-reverse; /* Newest messages at the bottom */
        padding: 1rem;
        background-color: var(--nexus-body-bg);
    }
    .tc-community-input-area {
        border-top: 1px solid var(--nexus-border-color);
        background-color: var(--nexus-content-bg);
    }
    .tc-community-header {
        background-color: var(--nexus-content-bg);
        border-bottom: 1px solid var(--nexus-border-color);
    }
</style>
{% endblock %}

{% block content_header %}
    <div class="tc-community-header pt-3 pb-2 mb-0 sticky-top shadow-sm" style="top: 56px; z-index: 1010;">
        <div class="container-fluid">
            <div class="d-flex flex-column flex-md-row align-items-md-center">
                <div class="me-md-3 mb-2 mb-md-0 text-center text-md-start">
                    {# Placeholder for a TC Community Group Icon/Logo #}
                    <span class="fa-stack fa-2x d-inline-block me-md-2" style="font-size: 2.5rem;">
                        <i class="bi bi-shield-fill fs-1 text-primary"></i>
                        <i class="bi bi-stars fs-4 text-warning position-absolute" style="top: 2px; left: 1px; opacity: 0.9;"></i>
                    </span>
                </div>
                <div class="flex-grow-1 text-center text-md-start">
                    <h1 class="page-title font-heading mb-0 fs-4">{{ community_group.name if community_group else "Talent Club Community" }}</h1>
                    <p class="text-muted mb-1 small">
                        <i class="bi bi-people-fill me-1"></i> <span id="tcCommunityMemberCount">{{ community_group.members.count() if community_group else 'N/A' }}</span> Active Member{{ 's' if (community_group and community_group.members.count() != 1) else '' }}
                    </p>
                </div>
                <div class="mt-2 mt-md-0 ms-md-auto">
                    <a href="{{ url_for('talent_club_configuration') }}" class="btn btn-sm btn-outline-secondary">
                        <i class="bi bi-gear-fill me-1"></i> TC Config
                    </a>
                    {# Optional: Link to view members if a dedicated page exists #}
                </div>
            </div>
             {% if community_group and community_group.description %}
                <p class="text-muted small mb-2 mt-2 text-center text-md-start">{{ community_group.description }}</p>
            {% endif %}
        </div>
    </div>
{% endblock %}

{% block content %}
{% set no_sidebar = True %} {# Full focus on community chat #}

<div class="container-fluid px-0 h-100 d-flex flex-column">
    <div class="tc-community-chat-window flex-grow-1" id="tcCommunityChatWindowMessages-{{ community_group.id if community_group else '0' }}">
        {% if messages and messages | length > 0 %}
            {% for message_loop_var in messages %} {# Changed loop variable name #}
                {# Set the context variables needed by the partial #}
                {% set message = message_loop_var %}
                {% set current_user_id = current_user.id %} {# Explicitly set for the partial #}
                
                {# Call include in its simplest form #}
                {% include 'partials/_chat_message_item.html' %}
            {% endfor %}
        {% else %}
            <div class="text-center text-muted p-5 flex-grow-1 d-flex align-items-center justify-content-center">
                <div>
                    <i class="bi bi- megaphone-fill display-3 mb-3"></i>
                    <h4 class="font-heading">Welcome to the {{ community_group.name if community_group else "Community" }}!</h4>
                    <p>Start a discussion, share an announcement, or ask a question.</p>
                </div>
            </div>
        {% endif %}
    </div>

    <div class="tc-community-input-area p-3">
        {% if can_post_in_community %} {# Backend variable: True if user not muted in TC #}
            {# Reusing _social_content_form.html for message input UI consistency #}
            {# Set variables with names expected by _social_content_form.html #}
            {% set post_form_for_partial = post_form %} {# Use a distinct name if 'post_form' is already used, or ensure it's correctly scoped #}
            {% set submit_url = url_for('create_tc_community_message') %}
            {% set submit_button_text = 'Send Message' %}
            {% set parent_id = community_group.id if community_group else '0' %}

            {# Call include in its simplest form #}
            {% include 'partials/_social_content_form.html' %}
        {% else %}
            <div class="alert alert-warning text-center" role="alert">
                <i class="bi bi-mic-mute-fill me-1"></i> You are currently muted and cannot send messages in the TC Community.
            </div>
        {% endif %}
    </div>
</div>
{% endblock %}

{% block body_scripts %}
<script src="{{ url_for('static', filename='js/talent_club.js') }}?v={{ range(1, 100000) | random }}"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const communityGroupId = {{ community_group.id | tojson if community_group else 'null' }};
        const currentUserId = {{ current_user.id | tojson }};

        if (communityGroupId && typeof initializeTCCommunityChat === 'function') {
            initializeTCCommunityChat(communityGroupId, currentUserId);
        } else if(communityGroupId) {
            console.warn('initializeTCCommunityChat function not found in talent_club.js. TC Community chat may not be fully dynamic.');
            // Basic form submission will still work if the form action in _social_content_form.html is correct.
            // The generic social.js post handler might pick it up if class names match and form action is correct.
        }
        console.log('TC Community Group page JS loaded.');
    });
</script>
{% endblock %}
{% extends "layout/base.html" %}

{% block page_title %}TC Leadership & Election{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-person-workspace me-2 text-primary"></i>Talent Club Leadership
        </h1>
        <a href="{{ url_for('talent_club_configuration') }}" class="btn btn-sm btn-outline-secondary">
            <i class="bi bi-arrow-left-circle me-1"></i> Back to TC Configuration
        </a>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    {% include 'layout/_flash_messages.html' %}

    <div class="row g-4 justify-content-center">
        {# Current Leader Information #}
        <div class="col-lg-6 col-md-8">
            <div class="card shadow-sm text-center">
                <div class="card-header">
                    <h5 class="mb-0 font-heading">Current System Talent Club Leader</h5>
                </div>
                <div class="card-body p-4">
                    {% if current_leader %}
                        {% set leader_avatar = url_for('static', filename=(current_leader.profile_photo_url if current_leader.profile_photo_url else 'img/placeholders/user_avatar_default.png')) %}
                        <img src="{{ leader_avatar }}" alt="{{ current_leader.username }}" class="rounded-circle mb-3 shadow-sm" style="width: 100px; height: 100px; object-fit: cover; border: 3px solid var(--nexus-primary);">
                        <h4 class="font-heading mb-1">{{ current_leader.full_name or current_leader.username }}</h4>
                        <p class="text-muted mb-0">{{ current_leader.username }}</p>
                        <p class="text-muted"><small>{{ current_leader.role.name | title if current_leader.role }} | TC Leader</small></p>
                    {% else %}
                        <i class="bi bi-person-fill-slash display-3 text-muted mb-3"></i>
                        <p class="text-muted lead">No system-wide Talent Club Leader is currently assigned.</p>
                    {% endif %}
                </div>
            </div>
        </div>

        {# Active Election Section #}
        {% if active_election %}
        <div class="col-lg-6 col-md-8">
            <div class="card shadow-sm">
                <div class="card-header bg-success-subtle text-success-emphasis">
                    <h5 class="mb-0 font-heading"><i class="bi bi-megaphone-fill me-2"></i>Active Election for TC Leader!</h5>
                </div>
                <div class="card-body p-4">
                    <p class="text-muted">An election is currently underway to select the next Talent Club Leader. Initiated on {{ active_election.initiated_at | dateformat }}.</p>
                    
                    {% if can_vote and vote_form %}
                        <h6 class="font-heading mt-3">Cast Your Vote:</h6>
                        <form method="POST" action="{{ url_for('cast_tc_leader_vote') }}" id="tcLeaderVoteForm" novalidate>
                            {{ vote_form.hidden_tag() if vote_form.hidden_tag }}
                            <div class="mb-3">
                                {{ vote_form.candidate_id.label(class="form-label fw-medium") }}
                                {{ vote_form.candidate_id(class="form-select tom-select" + (" is-invalid" if vote_form.candidate_id.errors else "")) }}
                                {% if vote_form.candidate_id.errors %}<div class="invalid-feedback">{% for e in vote_form.candidate_id.errors %}{{e}}{% endfor %}</div>{% endif %}
                            </div>
                            <div class="d-grid">
                                {{ vote_form.submit(class="btn btn-success w-100", value="Submit My Vote") }}
                            </div>
                        </form>
                    {% elif user_vote %}
                        <div class="alert alert-info mt-3" role="alert">
                            <i class="bi bi-check-circle-fill me-1"></i> You have already voted in this election for <strong>{{ user_vote.candidate.full_name or user_vote.candidate.username if user_vote.candidate else 'a candidate' }}</strong> on {{ user_vote.voted_at | dateformat }}.
                        </div>
                    {% elif not current_user.is_tc_member %}
                         <div class="alert alert-warning mt-3" role="alert">
                            <i class="bi bi-exclamation-circle-fill me-1"></i> Only Talent Club members can vote in this election.
                        </div>
                    {% else %}
                         <div class="alert alert-secondary mt-3" role="alert">
                            <i class="bi bi-info-circle-fill me-1"></i> Voting form is not available at this moment.
                        </div>
                    {% endif %}
                    <hr class="my-3">
                    <small class="text-muted d-block">The election will be concluded by HR/Administration.</small>
                </div>
            </div>
        </div>
        {% elif not current_leader %} {# No active election AND no current leader #}
         <div class="col-lg-6 col-md-8">
            <div class="card shadow-sm">
                <div class="card-header">
                    <h5 class="mb-0 font-heading">No Active Election</h5>
                </div>
                <div class="card-body text-center text-muted p-4">
                    <i class="bi bi-person-bounding-box display-4 mb-3"></i>
                    <p>There is no active election for a new Talent Club Leader at this time. HR/Administration may initiate one when required.</p>
                </div>
            </div>
        </div>
        {% endif %}
    </div>
</div>
{% endblock %}

{% block body_scripts %}
<script src="{{ url_for('static', filename='js/talent_club.js') }}?v={{ range(1, 100000) | random }}"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Initialize TomSelect for candidate selection if form is present
        {% if can_vote and vote_form and vote_form.candidate_id %}
        const candidateSelect = document.getElementById('{{ vote_form.candidate_id.id }}');
        if (candidateSelect) {
            new TomSelect(candidateSelect, {
                create: false,
                placeholder: 'Select your preferred candidate...'
            });
        }
        {% endif %}
        console.log('View Current TC Leader / Vote page JS loaded.');
    });
</script>
{% endblock %}{% extends "layout/base.html" %}

{% block title %}My Talent Clubs{% endblock %}

{% block content %}
<div class="container-fluid mt-4">
    <!-- Page Header -->
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">My Talent Clubs</h1>
        <!-- A button to discover new clubs could go here -->
    </div>
    
    <!-- Club Cards Grid -->
    <div class="row row-cols-1 row-cols-md-2 row-cols-xl-3 g-4">
        {# Here we reuse the _tc_club_card_item partial.
           Assume it's adapted from the group card as previously specified.
           The backend passes a list of clubs the user is a member of. #}
        {% for club in my_clubs %}
            {# Assuming _tc_club_card_item.html exists and is adapted from the group card #}
            {% include "talent_club/partials/_tc_club_card_item.html" %}
        {% else %}
        <div class="col-12">
            <div class="text-center p-5 bg-light rounded">
                <h4 class="text-muted">You haven't joined any clubs yet.</h4>
                <p>Go explore and find a club that interests you!</p>
                <a href="{{ url_for('discover_clubs') }}" class="btn btn-primary">Discover Clubs</a>
            </div>
        </div>
        {% endfor %}
    </div>
</div>
{% endblock %}{% extends "layout/base.html" %}

{# ====================================================================== #}
{# MACRO DEFINITIONS                                                    #}
{# ====================================================================== #}
{% macro render_stat_card(title, value, icon, color_class, url=None, url_text='View Details') %}
<div class="col">
    <div class="card dashboard-stat-card h-100 shadow-sm">
        <div class="card-body d-flex align-items-center">
            <div class="stat-icon display-4 me-3 {{ color_class or 'text-primary' }}">
                <i class="bi {{ icon or 'bi-bar-chart-line-fill' }}"></i>
            </div>
            <div>
                <h6 class="card-subtitle mb-1 text-body-secondary text-uppercase" style="font-size: 0.75rem;">{{ title }}</h6>
                <p class="card-text display-6 fw-bold mb-0 font-heading">{{ value }}</p>
            </div>
        </div>
        {% if url %}
        <a href="{{ url }}" class="card-footer text-decoration-none text-muted bg-light-subtle hover-bg-light small">
            {{ url_text }} <i class="bi bi-arrow-right-short ms-1"></i>
        </a>
        {% endif %}
    </div>
</div>
{% endmacro %}

{% macro render_quick_links(links, title="Quick Links") %}
    {% if links %}
    <div class="card shadow-sm dashboard-quick-links-card">
        <div class="card-header bg-light-subtle">
            <h5 class="mb-0 font-heading"><i class="bi bi-lightning-charge-fill me-2"></i>{{ title }}</h5>
        </div>
        <div class="list-group list-group-flush">
            {% for link in links %}
                <a href="{{ link.url | default('#') }}" class="list-group-item list-group-item-action d-flex align-items-center py-3">
                    <i class="bi {{ link.icon | default('bi-link-45deg') }} fs-5 me-3 {{ link.color_class | default('text-primary') }}" style="min-width: 24px;"></i>
                    <span class="fw-medium">{{ link.text or 'Link' }}</span>
                    <i class="bi bi-chevron-right ms-auto small"></i>
                </a>
            {% endfor %}
        </div>
    </div>
    {% endif %}
{% endmacro %}

{% macro render_recent_activity(activities, title="Recent Activity") %}
<div class="card shadow-sm recent-activity-card">
    <div class="card-header bg-light-subtle">
        <h5 class="mb-0 font-heading"><i class="bi bi-activity me-2"></i>{{ title }}</h5>
    </div>
    <div class="card-body" style="max-height: 400px; overflow-y: auto;">
        {% if activities %}
            <ul class="list-unstyled mb-0">
                {% for activity in activities %}
                    <li class="d-flex align-items-start pb-3 {% if not loop.last %}mb-3 border-bottom{% endif %}">
                        <div class="activity-icon me-3">
                            <span class="badge bg-{{ activity.badge_color or 'secondary' }} p-2 rounded-circle d-flex">
                                <i class="bi {{ activity.icon or 'bi-bell' }} fs-5 text-white"></i>
                            </span>
                        </div>
                        <div>
                            <p class="mb-1">{{ activity.text | safe }}</p>
                            <small class="text-muted"><i class="bi bi-calendar3 me-1"></i>{{ activity.timestamp | humanize_time_diff }}</small>
                            {% if activity.url %}<a href="{{ activity.url }}" class="ms-2 small">View</a>{% endif %}
                        </div>
                    </li>
                {% endfor %}
            </ul>
        {% else %}
            <div class="text-center text-muted p-4"><i class="bi bi-moon-stars fs-1 mb-2"></i><p>No recent activity to display.</p></div>
        {% endif %}
    </div>
</div>
{% endmacro %}
{# ====================================================================== #}
{# END OF MACRO DEFINITIONS                                             #}
{# ====================================================================== #}

{% block page_title %}My Talent Club Hub{% endblock %}

{% block content_header %}
<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2 font-heading"><i class="bi bi-trophy-fill me-2 text-warning"></i>My Talent Club Hub</h1>
    <div class="btn-toolbar mb-2 mb-md-0">
        <a href="{{ url_for('talent_club_configuration') }}" class="btn btn-sm btn-primary me-2 shadow-sm"><i class="bi bi-sliders me-1"></i>TC Configuration</a>
        <a href="{{ url_for('settings') }}" class="btn btn-sm btn-outline-secondary"><i class="bi bi-person-gear me-1"></i>My Settings</a>
    </div>
</div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    <div class="alert alert-warning-subtle border-warning-subtle mb-4">
        <h4 class="alert-heading font-heading">Welcome to the Club, {{ current_user.full_name or current_user.username }}!</h4>
        <p class="mb-0">Explore your clubs, discover new talents, and engage with the TC community.</p>
    </div>

    <div class="row row-cols-1 row-cols-sm-2 row-cols-lg-4 g-4 mb-4">
        {{ render_stat_card("My Memberships", my_club_memberships_count|default(0), "bi-person-check-fill", "text-primary", url_for('my_talent_clubs')) }}
        {{ render_stat_card("Clubs I Follow", my_followed_clubs_count|default(0), "bi-eye-fill", "text-info", url_for('my_talent_clubs')) }}
        {{ render_stat_card("My Pending Proposals", my_pending_proposals_count|default(0), "bi-lightbulb-fill", "text-success", url_for('my_talent_club_proposals')) }}
        {{ render_stat_card("Unread Notifications", unread_notifications_count|default(0), "bi-bell-fill", "text-danger", url_for('view_notifications')) }}
    </div>

    <div class="row g-4">
        <div class="col-lg-7">
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-light-subtle"><h5 class="mb-0 font-heading"><i class="bi bi-joystick me-2"></i>My Active Clubs</h5></div>
                <div class="card-body p-0">
                    {% if my_active_club_memberships %}
                        <div class="list-group list-group-flush">
                            {% for membership in my_active_club_memberships[:5] %}
                                {% set club = membership.club %}
                                <a href="{{ url_for('view_talent_club_feed', club_id=club.id) }}" class="list-group-item list-group-item-action d-flex align-items-center py-3">
                                    <img src="{{ url_for('static', filename=(club.profile_photo_url or 'img/placeholders/tc_club_default_avatar.png')) }}" alt="{{ club.name }}" class="rounded-circle me-3 shadow-sm" style="width: 45px; height: 45px; object-fit: cover;">
                                    <div class="flex-grow-1">
                                        <h6 class="mb-0 font-heading">{{ club.name }}</h6>
                                        <small class="text-muted">Role: {{ membership.role | title }} | Level: {{ club.level }}</small>
                                    </div>
                                    <i class="bi bi-arrow-right-circle-fill fs-4 text-primary opacity-75"></i>
                                </a>
                            {% endfor %}
                        </div>
                         {% if my_active_club_memberships|length > 5 %}
                            <a href="{{ url_for('my_talent_clubs') }}" class="card-footer text-center d-block text-decoration-none fw-medium hover-bg-light">View All My Clubs & Follows <i class="bi bi-chevron-right"></i></a>
                        {% endif %}
                    {% else %}
                        <div class="p-4 text-center text-muted">
                            <i class="bi bi-collection-play fs-2 mb-2 d-block"></i>
                            You aren't an active member of any clubs yet.
                            <a href="{{ url_for('talent_club_discover') }}" class="d-block mt-2">Discover and join one!</a>
                        </div>
                    {% endif %}
                </div>
            </div>
            
            {{ render_recent_activity(recent_my_clubs_activity, title="Recent Activity in My Clubs") }}
        </div>

        <div class="col-lg-5">
            {% set tc_member_quick_links = [
                {'url': url_for('talent_club_discover'), 'text': 'Discover New Clubs', 'icon': 'bi-search-heart-fill', 'color_class': 'text-primary'},
                {'url': url_for('create_talent_club_proposal'), 'text': 'Propose a Club Idea', 'icon': 'bi-lightbulb-fill', 'color_class': 'text-success'},
                {'url': url_for('talent_club_community_group'), 'text': 'Join TC Community Chat', 'icon': 'bi-people-fill', 'color_class': 'text-info'},
                {'url': url_for('talent_club_leaderboard'), 'text': 'View Club Leaderboard', 'icon': 'bi-bar-chart-steps', 'color_class': 'text-warning'},
                {'url': url_for('my_talent_club_proposals'), 'text': 'Track My Proposals', 'icon': 'bi-file-earmark-text-fill', 'color_class': 'text-secondary'}
            ] %}
            {{ render_quick_links(tc_member_quick_links, title="Explore & Engage") }}

            <div class="card shadow-sm mt-4">
                <div class="card-header bg-light-subtle"><h5 class="mb-0 font-heading"><i class="bi bi-person-workspace me-2"></i>System TC Leader</h5></div>
                <div class="card-body text-center">
                    {% if system_tc_leader %}
                        <img src="{{ url_for('static', filename=(system_tc_leader.profile_photo_url or 'img/placeholders/user_avatar_default.png')) }}" alt="{{ system_tc_leader.username }}" class="rounded-circle mb-2 shadow-sm" style="width: 70px; height: 70px; object-fit: cover;">
                        <h6 class="font-heading mb-1">{{ system_tc_leader.full_name or system_tc_leader.username }}</h6>
                        <a href="{{ url_for('view_current_tc_leader')}}" class="btn btn-sm btn-outline-primary mt-1">View Election Info</a>
                    {% else %}
                        <p class="text-muted mb-0">No system leader is currently assigned.</p>
                        <a href="{{ url_for('view_current_tc_leader')}}" class="btn btn-sm btn-outline-info mt-2">Check Election Status</a>
                    {% endif %}
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}{% extends "layout/base.html" %}

{% block page_title %}Talent Club Configuration{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-sliders me-2 text-primary"></i>Talent Club Configuration
        </h1>
        <a href="{{ url_for('talent_club_dashboard') }}" class="btn btn-sm btn-outline-secondary">
            <i class="bi bi-arrow-left-circle me-1"></i> Back to TC Dashboard
        </a>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    {% include 'layout/_flash_messages.html' %}

    <p class="lead text-muted mb-4">Manage your Talent Club involvement, propose new clubs, and view system-wide TC information.</p>

    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
        {# My Club Management #}
        <div class="col">
            <div class="card h-100 shadow-sm feature-card-hover">
                <div class="card-body text-center p-4">
                    <i class="bi bi-joystick display-3 text-primary mb-3"></i>
                    <h5 class="card-title font-heading">My Club Involvement</h5>
                    <p class="card-text text-muted small">View clubs you own or are a member of. Manage content and members for clubs you administer.</p>
                    <a href="{{ url_for('my_talent_club_management') }}" class="btn btn-primary stretched-link">Go to My Clubs</a>
                </div>
            </div>
        </div>

        {# Propose New Club #}
        <div class="col">
            <div class="card h-100 shadow-sm feature-card-hover">
                <div class="card-body text-center p-4">
                    <i class="bi bi-lightbulb-fill display-3 text-success mb-3"></i>
                    <h5 class="card-title font-heading">Propose a New Club</h5>
                    <p class="card-text text-muted small">Have a great idea for a new Talent Club? Submit your proposal for review.</p>
                    <a href="{{ url_for('create_talent_club_proposal') }}" class="btn btn-success stretched-link">Submit Proposal</a>
                </div>
            </div>
        </div>

        {# My Submitted Proposals #}
        <div class="col">
            <div class="card h-100 shadow-sm feature-card-hover">
                <div class="card-body text-center p-4">
                    <i class="bi bi-file-earmark-text-fill display-3 text-info mb-3"></i>
                    <h5 class="card-title font-heading">My Proposals</h5>
                    <p class="card-text text-muted small">Track the status of your submitted club proposals and responses from mentioned members.</p>
                    <a href="{{ url_for('my_talent_club_proposals') }}" class="btn btn-info text-white stretched-link">View My Proposals</a>
                </div>
            </div>
        </div>
        
        {# Current TC Leader & Elections #}
        <div class="col">
            <div class="card h-100 shadow-sm feature-card-hover">
                <div class="card-body text-center p-4">
                    <i class="bi bi-person-check-fill display-3 text-warning mb-3"></i>
                    <h5 class="card-title font-heading">TC Leadership</h5>
                    <p class="card-text text-muted small">View the current system-wide Talent Club Leader and participate in active elections.</p>
                    <a href="{{ url_for('view_current_tc_leader') }}" class="btn btn-warning stretched-link">View Leader Info</a>
                </div>
            </div>
        </div>

        {# Talent Club Leaderboard #}
         <div class="col">
            <div class="card h-100 shadow-sm feature-card-hover">
                <div class="card-body text-center p-4">
                    <i class="bi bi-bar-chart-line-fill display-3 text-danger mb-3"></i>
                    <h5 class="card-title font-heading">Club Leaderboard</h5>
                    <p class="card-text text-muted small">See how different Talent Clubs are performing based on level and engagement.</p>
                    <a href="{{ url_for('talent_club_leaderboard') }}" class="btn btn-danger stretched-link">View Leaderboard</a>
                </div>
            </div>
        </div>

        {# TC Community Group #}
        <div class="col">
            <div class="card h-100 shadow-sm feature-card-hover">
                <div class="card-body text-center p-4">
                    <i class="bi bi-people-fill display-3 text-secondary mb-3"></i>
                    <h5 class="card-title font-heading">TC Community</h5>
                    <p class="card-text text-muted small">Connect with all Talent Club members in the official community group.</p>
                    <a href="{{ url_for('talent_club_community_group') }}" class="btn btn-secondary stretched-link">Join Community Chat</a>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}{% extends "layout/base.html" %}

{% set action_title = "Ban/Mute: " + (user_to_manage.full_name or user_to_manage.username) %}
{% block page_title %}{{ action_title }}{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-person-fill-lock me-2 text-danger"></i>{{ action_title }}
        </h1>
        <a href="{{ url_for('manage_tc_members_leader') }}" class="btn btn-sm btn-outline-secondary">
            <i class="bi bi-arrow-left-circle me-1"></i> Back to Member Management
        </a>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    <div class="row justify-content-center">
        <div class="col-lg-7 col-md-9">
            {% include 'layout/_flash_messages.html' %}

            {% if active_ban %}
            <div class="alert alert-warning" role="alert">
                <h5 class="alert-heading font-heading"><i class="bi bi-exclamation-triangle-fill me-2"></i>Active Restriction</h5>
                <p class="mb-1">This user currently has an active <strong>{{ active_ban.type | title }}</strong> in place.</p>
                <p class="mb-1"><strong>Reason:</strong> {{ active_ban.reason }}</p>
                <p class="mb-0"><strong>Expires:</strong> {{ active_ban.expires_at | datetimeformat if active_ban.expires_at else "Permanent" }}</p>
                <hr>
                <p class="mb-0">Applying a new ban/mute will end the current one.</p>
            </div>
            {% endif %}

            <div class="card shadow-sm">
                <div class="card-header bg-danger-subtle text-danger-emphasis">
                    <h5 class="mb-0 font-heading">Apply Restriction to: {{ user_to_manage.full_name or user_to_manage.username }}</h5>
                </div>
                <div class="card-body p-4">
                    <form method="POST" action="{{ url_for('ban_mute_tc_member', user_id=user_to_manage.id) }}" novalidate>
                        {{ form.hidden_tag() if form.hidden_tag }} {# CSRF Token #}

                        <div class="mb-3">
                            {{ form.ban_type.label(class="form-label fw-medium") }}
                            {{ form.ban_type(class="form-select" + (" is-invalid" if form.ban_type.errors else "")) }}
                            <small class="form-text text-muted">
                                <strong>Ban:</strong> Removes user from TC system, memberships, and community. <br>
                                <strong>Mute:</strong> Prevents user from posting in TC feeds and community group.
                            </small>
                            {% if form.ban_type.errors %}<div class="invalid-feedback">{% for e in form.ban_type.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>

                        <div class="mb-3">
                            {{ form.reason.label(class="form-label fw-medium") }}
                            {{ form.reason(class="form-control" + (" is-invalid" if form.reason.errors else ""), rows="4", placeholder="Clearly state the reason for this action...") }}
                            {% if form.reason.errors %}<div class="invalid-feedback">{% for e in form.reason.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>

                        <div class="mb-3">
                            {{ form.duration_days.label(class="form-label fw-medium") }}
                            {{ form.duration_days(class="form-control" + (" is-invalid" if form.duration_days.errors else ""), type="number", min="1", placeholder="e.g., 7, 30. Leave empty for permanent.") }}
                            {% if form.duration_days.errors %}<div class="invalid-feedback">{% for e in form.duration_days.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>

                        <div class="alert alert-info small p-2">
                            <i class="bi bi-info-circle-fill me-1"></i>
                            Applying a 'Ban' will remove the user from all their Talent Clubs and the TC Community.
                            A 'Mute' will restrict their ability to post. Permanent actions require manual reversal.
                        </div>

                        <div class="d-flex justify-content-end mt-4">
                            <a href="{{ url_for('manage_tc_members_leader') }}" class="btn btn-outline-secondary me-2">Cancel</a>
                            {{ form.submit(class="btn btn-danger px-4", value="Apply Restriction") }}
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}{% extends "layout/base.html" %}

{% set page_title = "Review Proposal: " + (proposal.name if proposal else "N/A") %}
{% block page_title %}{{ page_title }}{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-clipboard2-data-fill me-2 text-primary"></i>{{ page_title }}
        </h1>
        <a href="{{ url_for('review_tc_proposals') }}" class="btn btn-sm btn-outline-secondary">
            <i class="bi bi-arrow-left-circle me-1"></i> Back to All Pending Proposals
        </a>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    {% include 'layout/_flash_messages.html' %}

    <form id="reviewProposalForm" method="POST" action="{{ url_for('review_tc_proposal', proposal_id=proposal.id) }}">
        {{ csrf_token() if csrf_token else '' }} {# For WTForms if form object is used, or manual CSRF #}
        <input type="hidden" name="action" id="proposalActionInput" value="save_notes"> {# Default action #}

        <div class="row g-4">
            {# Left Column: Proposal Details & Mentioned Members #}
            <div class="col-lg-7 col-xl-8">
                <div class="card shadow-sm mb-4">
                    <div class="card-header">
                        <h5 class="mb-0 font-heading">Proposal Information</h5>
                    </div>
                    <div class="card-body">
                        <dl class="row">
                            <dt class="col-sm-3">Proposed Name:</dt>
                            <dd class="col-sm-9">{{ proposal.name }}</dd>

                            <dt class="col-sm-3">Creator:</dt>
                            <dd class="col-sm-9">{{ proposal.creator.full_name or proposal.creator.username if proposal.creator else 'N/A' }}</dd>

                            <dt class="col-sm-3">Category:</dt>
                            <dd class="col-sm-9">{{ proposal.social_category.name if proposal.social_category else 'N/A' }}</dd>

                            <dt class="col-sm-3">Submitted On:</dt>
                            <dd class="col-sm-9">{{ proposal.created_at | datetimeformat }}</dd>

                            <dt class="col-sm-3">Description:</dt>
                            <dd class="col-sm-9"><p style="white-space: pre-wrap;">{{ proposal.description }}</p></dd>

                            {% if proposal.proposal_file %}
                            <dt class="col-sm-3">Attached Document:</dt>
                            <dd class="col-sm-9">
                                <a href="{{ url_for('download_social_file', file_id=proposal.proposal_file.id) }}" class="btn btn-sm btn-outline-info" download="{{ proposal.proposal_file.original_filename }}">
                                    <i class="bi bi-file-earmark-arrow-down-fill me-1"></i> {{ proposal.proposal_file.original_filename }}
                                </a>
                            </dd>
                            {% endif %}
                        </dl>
                    </div>
                </div>

                <div class="card shadow-sm">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0 font-heading"><i class="bi bi-people-fill me-2"></i>Mentioned Members ({{ mentions | length }})</h5>
                        <span class="badge {{ 'bg-success-subtle text-success-emphasis' if meets_min_members else 'bg-danger-subtle text-danger-emphasis' }} rounded-pill p-2">
                            {{ accepted_count }} / 5 Accepted Mentions
                        </span>
                    </div>
                    <div class="list-group list-group-flush" style="max-height: 300px; overflow-y: auto;">
                        {% if mentions %}
                            {% for mention in mentions %}
                            <div class="list-group-item d-flex justify-content-between align-items-center">
                                <div>
                                    {% set user_avatar = url_for('static', filename=(mention.user.profile_photo_url if mention.user.profile_photo_url else 'img/placeholders/user_avatar_default.png')) %}
                                    <img src="{{ user_avatar }}" alt="{{ mention.user.username }}" class="rounded-circle me-2" style="width:32px; height:32px; object-fit:cover;">
                                    <span class="fw-medium">{{ mention.user.full_name or mention.user.username }}</span>
                                    <small class="text-muted">({{ mention.user.role.name.replace('_',' ') | title if mention.user.role else 'N/A' }})</small>
                                </div>
                                {% if mention.status == 'pending' %}
                                    <span class="badge bg-secondary-subtle text-secondary-emphasis rounded-pill">Pending Response</span>
                                {% elif mention.status == 'accepted' %}
                                    <span class="badge bg-success-subtle text-success-emphasis rounded-pill"><i class="bi bi-check-circle-fill me-1"></i>Accepted</span>
                                {% elif mention.status == 'rejected' %}
                                    <span class="badge bg-danger-subtle text-danger-emphasis rounded-pill"><i class="bi bi-x-circle-fill me-1"></i>Declined</span>
                                {% endif %}
                            </div>
                            {% endfor %}
                        {% else %}
                            <div class="list-group-item text-muted text-center p-3">No members were mentioned in this proposal.</div>
                        {% endif %}
                    </div>
                </div>
            </div>

            {# Right Column: Review Actions & Notes #}
            <div class="col-lg-5 col-xl-4">
                <div class="card shadow-sm sticky-lg-top" style="top: 70px;"> {# Sticky top for review panel #}
                    <div class="card-header bg-primary-subtle text-primary-emphasis">
                        <h5 class="mb-0 font-heading"><i class="bi bi-ui-checks-grid me-2"></i>Review & Action</h5>
                    </div>
                    <div class="card-body">
                        <div class="mb-3">
                            <label for="reviewNotesTextarea" class="form-label fw-medium">Leader's Review Notes:</label>
                            <textarea class="form-control" id="reviewNotesTextarea" name="review_notes" rows="5" placeholder="Add your comments or reasons for decision here...">{{ proposal.leader_review_notes or '' }}</textarea>
                        </div>

                        <div class="d-grid gap-2">
                            <button type="submit" name="action" value="save_notes" class="btn btn-outline-secondary proposal-action-btn">
                                <i class="bi bi-save-fill me-1"></i> Save Notes Only
                            </button>
                            <button type="submit" name="action" value="accept" class="btn btn-success proposal-action-btn" {% if not meets_min_members %}disabled title="Requires 5 accepted mentions"{% endif %}>
                                <i class="bi bi-check-circle-fill me-1"></i> Accept Proposal & Create Club
                            </button>
                            <button type="submit" name="action" value="reject" class="btn btn-danger proposal-action-btn">
                                <i class="bi bi-x-octagon-fill me-1"></i> Reject Proposal
                            </button>
                        </div>
                        {% if not meets_min_members %}
                        <small class="text-danger d-block mt-2 text-center">
                            Acceptance is disabled until at least 5 members accept their mention.
                        </small>
                        {% endif %}
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>
{% endblock %}

{% block body_scripts %}
<script src="{{ url_for('static', filename='js/talent_club.js') }}?v={{ range(1, 100000) | random }}"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // JavaScript to set the hidden 'action' input based on which button is clicked.
        // Or, backend can check request.form for 'accept', 'reject', 'save_notes'.
        // The current HTML uses name="action" on buttons, so backend can check request.form.get('action').
        
        // Optional: AJAX submission for review actions (more complex)
        // const reviewForm = document.getElementById('reviewProposalForm');
        // if(reviewForm) {
        //     reviewForm.querySelectorAll('.proposal-action-btn').forEach(button => {
        //         button.addEventListener('click', function(e) {
        //             document.getElementById('proposalActionInput').value = this.value;
        //             // If not using AJAX, form will submit normally.
        //             // If using AJAX:
        //             // e.preventDefault();
        //             // handleTCProposalReviewAction(reviewForm, this.value); // Function in talent_club.js
        //         });
        //     });
        // }
        console.log('Review TC Proposal Detail JS loaded.');
    });
</script>
{% endblock %}{% extends "layout/base.html" %}

{% block page_title %}Review Club Proposals{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-journal-check me-2 text-primary"></i>Review Talent Club Proposals
        </h1>
        <a href="{{ url_for('talent_club_dashboard') }}" class="btn btn-sm btn-outline-secondary"> {# Or TC Leader specific dashboard #}
            <i class="bi bi-arrow-left-circle me-1"></i> Back to TC Dashboard
        </a>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    {% include 'layout/_flash_messages.html' %}

    <div class="card shadow-sm">
        <div class="card-header">
            <h5 class="mb-0 font-heading">Proposals Awaiting Your Review</h5>
        </div>
        <div class="card-body p-0">
            {% if pending_proposals and pending_proposals | length > 0 %}
                <div class="list-group list-group-flush">
                    {% for proposal in pending_proposals %}
                        {# Reusing _tc_proposal_item.html with context for TC Leader #}
                        {% include 'partials/_tc_proposal_item.html' with {'proposal': proposal, 'current_user': current_user, 'accepted_count': accepted_counts.get(proposal.id, 0) } %}
                    {% endfor %}
                </div>
            {% else %}
                <div class="text-center text-muted p-5 content-placeholder">
                    <i class="bi bi-clipboard-check-fill display-3 mb-3 text-success"></i>
                    <h4 class="font-heading">All Caught Up!</h4>
                    <p>There are no new club proposals currently awaiting your review.</p>
                </div>
            {% endif %}
        </div>
        {# Optional: Pagination if list is long #}
    </div>
</div>
{% endblock %}{% extends "layout/base.html" %}

{% block page_title %}Manage TC Members (Leader Admin){% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-person-fill-slash me-2 text-primary"></i>Manage Talent Club Members
        </h1>
        <a href="{{ url_for('talent_club_dashboard') }}" class="btn btn-sm btn-outline-secondary"> {# Or TC Leader specific dashboard #}
            <i class="bi bi-arrow-left-circle me-1"></i> Back to TC Dashboard
        </a>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    {% include 'layout/_flash_messages.html' %}

    <div class="card shadow-sm">
        <div class="card-header">
            <h5 class="mb-0 font-heading">All Active Talent Club Members</h5>
            {# Optional: Filters for grade, section, or specific clubs #}
        </div>
        <div class="card-body p-0">
            {% if tc_members and tc_members | length > 0 %}
                <div class="table-responsive">
                    <table class="table table-hover table-striped mb-0 align-middle tc-member-management-table">
                        <thead class="table-light">
                            <tr>
                                <th scope="col" style="width: 5%;">Avatar</th>
                                <th scope="col">Name</th>
                                <th scope="col">Username</th>
                                <th scope="col">Grade/Section</th>
                                <th scope="col">Clubs Joined</th>
                                <th scope="col" class="text-center">System Status</th>
                                <th scope="col" class="text-center" style="min-width: 150px;">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% for member in tc_members %}
                            <tr id="tc-member-row-{{ member.id }}">
                                <td>
                                    {% set member_avatar = url_for('static', filename=(member.profile_photo_url if member.profile_photo_url else 'img/placeholders/user_avatar_default.png')) %}
                                    <img src="{{ member_avatar }}" alt="{{ member.username }}" class="rounded-circle" style="width: 35px; height: 35px; object-fit: cover;">
                                </td>
                                <td class="fw-medium">{{ member.full_name or member.username }}</td>
                                <td><small class="text-muted">{{ member.username }}</small></td>
                                <td><small>{{ member.grade or 'N/A' }}-{{ member.section or 'N/A' }}</small></td>
                                <td>
                                    <small>{{ member.tc_memberships.count() }} Club{{ 's' if member.tc_memberships.count() != 1 else '' }}</small>
                                    {# Could list first few clubs or link to a detail view #}
                                </td>
                                <td class="text-center">
                                    {% set ban = member_ban_status.get(member.id) %}
                                    {% if ban %}
                                        <span class="badge bg-danger-subtle text-danger-emphasis p-2 fs-08rem">
                                            <i class="bi {{ 'bi-mic-mute-fill' if ban.type == 'mute' else 'bi-person-fill-x' }} me-1"></i>
                                            {{ ban.type | title }}ned
                                            {% if ban.expires_at %}
                                                (til {{ ban.expires_at | dateformat }})
                                            {% else %}
                                                (Permanent)
                                            {% endif %}
                                        </span>
                                    {% else %}
                                        <span class="badge bg-success-subtle text-success-emphasis p-2 fs-08rem">
                                            <i class="bi bi-check-circle-fill me-1"></i>Active
                                        </span>
                                    {% endif %}
                                </td>
                                <td class="text-center">
                                    {% if member.id != current_user.id %} {# TC Leader cannot ban/mute self #}
                                        {% if ban %}
                                            <form action="{{ url_for('unban_unmute_tc_member', user_id=member.id) }}" method="POST" class="d-inline">
                                                {{ csrf_token() if csrf_token else '' }}
                                                <button type="submit" class="btn btn-sm btn-outline-success p-1" title="Remove {{ ban.type | title }}">
                                                    <i class="bi {{ 'bi-mic-fill' if ban.type == 'mute' else 'bi-person-fill-check' }} fs-6"></i> Un-{{ ban.type }}
                                                </button>
                                            </form>
                                        {% else %}
                                            <a href="{{ url_for('ban_mute_tc_member', user_id=member.id) }}" class="btn btn-sm btn-outline-danger p-1" title="Ban or Mute Member">
                                                <i class="bi bi-slash-circle-fill fs-6"></i> Ban/Mute
                                            </a>
                                        {% endif %}
                                    {% else %}
                                         <small class="text-muted fst-italic">Your Account</small>
                                    {% endif %}
                                </td>
                            </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                </div>
            {% else %}
                <div class="text-center text-muted p-5 content-placeholder">
                    <i class="bi bi-person-video3 display-3 mb-3"></i>
                    <h4 class="font-heading">No Active Talent Club Members Found</h4>
                    <p>Students can opt-in to become Talent Club members from their dashboard.</p>
                </div>
            {% endif %}
        </div>
    </div>
</div>
{% endblock %}{% extends "layout/base.html" %}

{% block page_title %}Manage Talent Clubs (Leader Admin){% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-kanban-fill me-2 text-primary"></i>Manage All Talent Clubs
        </h1>
        <a href="{{ url_for('talent_club_dashboard') }}" class="btn btn-sm btn-outline-secondary"> {# Or TC Leader specific dashboard #}
            <i class="bi bi-arrow-left-circle me-1"></i> Back to TC Dashboard
        </a>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    {% include 'layout/_flash_messages.html' %}

    <div class="card shadow-sm">
        <div class="card-header">
            <h5 class="mb-0 font-heading">Talent Club Instances Overview</h5>
            {# Optional: Add filters for active/inactive, category, level #}
        </div>
        <div class="card-body p-0">
            {% if all_clubs and all_clubs | length > 0 %}
                <div class="table-responsive">
                    <table class="table table-hover table-striped mb-0 align-middle tc-club-management-table">
                        <thead class="table-light">
                            <tr>
                                <th scope="col" style="width: 5%;">ID</th>
                                <th scope="col">Club Name</th>
                                <th scope="col">Category</th>
                                <th scope="col">Owner</th>
                                <th scope="col" class="text-center">Level</th>
                                <th scope="col" class="text-center">Warnings</th>
                                <th scope="col" class="text-center">Members</th>
                                <th scope="col" class="text-center">Status</th>
                                <th scope="col" class="text-center" style="min-width: 200px;">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% for club in all_clubs %}
                            <tr id="club-row-{{ club.id }}" class="{{ 'table-secondary opacity-75' if not club.is_active }}">
                                <td>{{ club.id }}</td>
                                <td class="fw-medium">
                                    <a href="{{ url_for('view_talent_club_profile', club_id=club.id) }}" class="text-decoration-none">{{ club.name | truncate(30) }}</a>
                                    {% if not club.is_active %}<span class="badge bg-dark-subtle text-dark-emphasis ms-1 small">Inactive</span>{% endif %}
                                </td>
                                <td><small>{{ club.social_category.name if club.social_category else 'N/A' }}</small></td>
                                <td><small>{{ club.owner.full_name or club.owner.username if club.owner else 'N/A' }}</small></td>
                                <td class="text-center">
                                    <span class="badge bg-info-subtle text-info-emphasis p-2 fs-09rem">{{ club.level }}</span>
                                </td>
                                <td class="text-center">
                                    <span class="badge {{ 'bg-danger-subtle text-danger-emphasis' if club.warning_count >= 2 else ('bg-warning-subtle text-warning-emphasis' if club.warning_count > 0 else 'bg-success-subtle text-success-emphasis') }} p-2 fs-09rem">
                                        {{ club.warning_count }}
                                    </span>
                                </td>
                                <td class="text-center">{{ club_counts.get(club.id, {}).get('members', 0) }}</td>
                                <td class="text-center">
                                    {% if club.is_active %}
                                        <span class="badge bg-success-subtle text-success-emphasis p-2">Active</span>
                                    {% else %}
                                        <span class="badge bg-danger-subtle text-danger-emphasis p-2">Inactive</span>
                                    {% endif %}
                                </td>
                                <td class="text-center">
                                    <button class="btn btn-sm btn-outline-primary p-1 me-1 tc-set-level-btn" title="Set Level"
                                            data-bs-toggle="modal" data-bs-target="#setLevelModal"
                                            data-club-id="{{ club.id }}" data-club-name="{{ club.name }}" data-current-level="{{ club.level }}"
                                            {% if not club.is_active %}disabled{% endif %}>
                                        <i class="bi bi-award-fill fs-6"></i>
                                    </button>
                                    <button class="btn btn-sm btn-outline-warning p-1 me-1 tc-warn-club-btn" title="Issue Warning"
                                            data-bs-toggle="modal" data-bs-target="#warnClubModal"
                                            data-club-id="{{ club.id }}" data-club-name="{{ club.name }}"
                                            {% if not club.is_active %}disabled{% endif %}>
                                        <i class="bi bi-exclamation-triangle-fill fs-6"></i>
                                    </button>
                                    {# Deactivate/Reactivate button - a more complex action than simple delete #}
                                    {# <button class="btn btn-sm btn-outline-danger p-1 tc-toggle-active-btn" title="{{ 'Deactivate' if club.is_active else 'Activate' }} Club">
                                        <i class="bi {{ 'bi-toggle-off' if club.is_active else 'bi-toggle-on' }} fs-6"></i>
                                    </button> #}
                                </td>
                            </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                </div>
            {% else %}
                <div class="text-center text-muted p-5 content-placeholder">
                    <i class="bi bi-collection-play-fill display-3 mb-3"></i>
                    <h4 class="font-heading">No Talent Clubs Found</h4>
                    <p>There are no Talent Clubs currently in the system. Proposals might be pending your review.</p>
                    <a href="{{ url_for('review_tc_proposals') }}" class="btn btn-info text-white mt-2">Review Pending Proposals</a>
                </div>
            {% endif %}
        </div>
    </div>

    {# Modal for Setting Club Level #}
    <div class="modal fade" id="setLevelModal" tabindex="-1" aria-labelledby="setLevelModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <form id="setLevelForm" method="POST" action=""> {# Action set by JS #}
                    {{ csrf_token() if csrf_token else '' }}
                    <div class="modal-header bg-primary-subtle text-primary-emphasis">
                        <h5 class="modal-title font-heading" id="setLevelModalLabel"><i class="bi bi-award-fill me-2"></i>Set Level for <span id="setLevelClubName">Club</span></h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <input type="hidden" name="club_id" id="setLevelClubIdInput">
                        <div class="mb-3">
                            <label for="newClubLevelInput" class="form-label fw-medium">New Level (Current: <span id="currentClubLevelDisplay"></span>):</label>
                            {# Assuming TalentClubLevelForm has a 'level' field #}
                            {{ set_level_form.level(class="form-control" + (" is-invalid" if set_level_form.level.errors else ""), id="newClubLevelInput", type="number", min="1", step="1") }}
                            {% if set_level_form.level.errors %}<div class="invalid-feedback">{% for e in set_level_form.level.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                        {{ set_level_form.submit(class="btn btn-primary", value="Set Level") }}
                    </div>
                </form>
            </div>
        </div>
    </div>

    {# Modal for Issuing Warning #}
    <div class="modal fade" id="warnClubModal" tabindex="-1" aria-labelledby="warnClubModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                 <form id="warnClubForm" method="POST" action=""> {# Action set by JS #}
                    {{ csrf_token() if csrf_token else '' }}
                    <div class="modal-header bg-warning-subtle text-warning-emphasis">
                        <h5 class="modal-title font-heading" id="warnClubModalLabel"><i class="bi bi-exclamation-triangle-fill me-2"></i>Issue Warning to <span id="warnClubName">Club</span></h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <input type="hidden" name="club_id" id="warnClubIdInput">
                        <div class="mb-0">
                            <label for="warningReasonTextarea" class="form-label fw-medium">Reason for Warning:</label>
                            {# Assuming TalentClubWarningForm has a 'reason' field #}
                            {{ warning_form.reason(class="form-control" + (" is-invalid" if warning_form.reason.errors else ""), id="warningReasonTextarea", rows="4", placeholder="Clearly state the reason for this warning...") }}
                            {% if warning_form.reason.errors %}<div class="invalid-feedback">{% for e in warning_form.reason.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                        {{ warning_form.submit(class="btn btn-warning", value="Issue Warning") }}
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block body_scripts %}
<script src="{{ url_for('static', filename='js/talent_club.js') }}?v={{ range(1, 100000) | random }}"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Modal for Set Level
        const setLevelModal = document.getElementById('setLevelModal');
        if (setLevelModal) {
            setLevelModal.addEventListener('show.bs.modal', function (event) {
                const button = event.relatedTarget;
                const clubId = button.dataset.clubId;
                const clubName = button.dataset.clubName;
                const currentLevel = button.dataset.currentLevel;

                setLevelModal.querySelector('#setLevelClubName').textContent = clubName;
                setLevelModal.querySelector('#currentClubLevelDisplay').textContent = currentLevel;
                setLevelModal.querySelector('#setLevelClubIdInput').value = clubId;
                setLevelModal.querySelector('#newClubLevelInput').value = currentLevel; // Pre-fill with current
                setLevelModal.querySelector('#setLevelForm').action = `/talent_club/leader/club/${clubId}/set_level`;
            });
        }

        // Modal for Warn Club
        const warnClubModal = document.getElementById('warnClubModal');
        if (warnClubModal) {
            warnClubModal.addEventListener('show.bs.modal', function (event) {
                const button = event.relatedTarget;
                const clubId = button.dataset.clubId;
                const clubName = button.dataset.clubName;

                warnClubModal.querySelector('#warnClubName').textContent = clubName;
                warnClubModal.querySelector('#warnClubIdInput').value = clubId;
                warnClubModal.querySelector('#warnClubForm').action = `/talent_club/leader/club/${clubId}/warn`;
                warnClubModal.querySelector('#warningReasonTextarea').value = ''; // Clear previous reason
            });
        }
        console.log('TC Leader Club Management JS loaded.');
    });
</script>
{% endblock %}{% extends "layout/base.html" %}
{% block title %}Talent Club Leaderboard{% endblock %}
{% block content %}
<div class="container-fluid mt-4">
    <div class="text-center mb-5">
        <i class="bi bi-trophy-fill text-warning" style="font-size: 3.5rem;"></i>
        <h1 class="h2 mt-2">Talent Club Leaderboard</h1>
        <p class="lead text-muted">See which clubs are leading the way in points and achievements.</p>
    </div>
    <div class="card shadow">
        <div class="card-body">
            <table class="table table-hover table-borderless">
                <thead class="table-light">
                    <tr>
                        <th style="width: 10%;">Rank</th>
                        <th style="width: 60%;">Club Name</th>
                        <th style="width: 30%;" class="text-end">Points</th>
                    </tr>
                </thead>
                <tbody>
                {% for entry in leaderboard_data %}
                    <tr class="align-middle">
                        <td><span class="fs-4 fw-bold text-primary">#{{ loop.index }}</span></td>
                        <td>
                            <div class="d-flex align-items-center">
                                <img src="{{ entry.club.avatar_url or url_for('static', filename='img/placeholders/tc_club_default_avatar.png') }}" class="rounded-circle me-3" width="40" height="40">
                                <a href="{{ url_for('club_profile', club_id=entry.club.id) }}" class="fw-bold text-dark text-decoration-none">{{ entry.club.name }}</a>
                            </div>
                        </td>
                        <td class="text-end fs-5 fw-bold text-muted">{{ entry.points }}</td>
                    </tr>
                {% else %}
                    <tr><td colspan="3" class="text-center p-4">Leaderboard data is not yet available.</td></tr>
                {% endfor %}
                </tbody>
            </table>
        </div>
    </div>
</div>
{% endblock %}{% extends "layout/base.html" %}

{% block title %}{{ club.name }}{% endblock %}

{% block content %}
{# Initialize Alpine.js component and load the initial 'feed' tab content #}
<div class="container-fluid mt-4" 
     x-data="{ activeTab: 'feed' }"
     x-init="loadTabContent('{{ club.id }}', 'feed')">

    <!-- Club Header -->
    <div class="card shadow-sm mb-4">
        <div class="card-header p-0" style="height: 200px; background: url({{ url_for('static', filename=(club.profile_photo_url or 'img/placeholders/tc_club_banner.png')) }}) center center / cover; position: relative;">
            {# A subtle gradient overlay can make text on top more readable #}
            <div class="w-100 h-100" style="background: linear-gradient(to top, rgba(0,0,0,0.6), rgba(0,0,0,0));"></div>
        </div>
        <div class="card-body">
            <div class="d-flex flex-wrap align-items-end" style="margin-top: -60px;">
                <img src="{{ url_for('static', filename=(club.profile_photo_url or 'img/placeholders/tc_club_default_avatar.png')) }}" alt="{{ club.name }} avatar" class="rounded-circle border border-4 border-light me-3" width="120" height="120">
                <div class="flex-grow-1">
                    <h1 class="h3 mb-0 font-heading">{{ club.name }}</h1>
                    <p class="text-muted mb-0">{{ club.description | truncate(100) }}</p>
                </div>
                {# FIX: Dynamic action buttons based on user status #}
                <div class="ms-auto pt-3">
                    {% if is_manager %}
                        <a href="#" class="btn btn-outline-secondary btn-sm disabled" data-bs-toggle="tooltip" title="Club management page coming soon"><i class="bi bi-gear-fill"></i> Manage</a>
                    {% elif user_status == 'member' %}
                        <button class="btn btn-outline-danger btn-sm tc-action-btn" data-action="leave_club" data-club-id="{{ club.id }}"><i class="bi bi-door-open-fill"></i> Leave Club</button>
                    {% elif user_status == 'following' %}
                        <button class="btn btn-secondary btn-sm tc-action-btn" data-action="unfollow_club" data-club-id="{{ club.id }}"><i class="bi bi-person-dash-fill"></i> Unfollow</button>
                    {% else %}
                        <button class="btn btn-primary btn-sm tc-action-btn" data-action="follow_club" data-club-id="{{ club.id }}"><i class="bi bi-person-plus-fill"></i> Follow</button>
                    {% endif %}
                </div>
            </div>
        </div>

        <!-- Navigation Tabs -->
        <ul class="nav nav-tabs nav-tabs-bottom px-3">
            <li class="nav-item"><a class="nav-link cursor-pointer" :class="{ 'active': activeTab === 'feed' }" @click.prevent="activeTab = 'feed'; loadTabContent('{{ club.id }}', 'feed');">Feed</a></li>
            <li class="nav-item"><a class="nav-link cursor-pointer" :class="{ 'active': activeTab === 'media' }" @click.prevent="activeTab = 'media'; loadTabContent('{{ club.id }}', 'media');">Media</a></li>
            <li class="nav-item"><a class="nav-link cursor-pointer" :class="{ 'active': activeTab === 'files' }" @click.prevent="activeTab = 'files'; loadTabContent('{{ club.id }}', 'files');">Files</a></li>
            <li class="nav-item"><a class="nav-link cursor-pointer" :class="{ 'active': activeTab === 'members' }" @click.prevent="activeTab = 'members'; loadTabContent('{{ club.id }}', 'members');">Members</a></li>
            {# Add other tabs like 'proposals', 'tasks' here if they become dynamic #}
        </ul>
    </div>

    <!-- Tab Content Container -->
    <div id="tab-content-container">
        {# FIX: Content will be dynamically loaded here by talent_club.js #}
        <div class="text-center p-5">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <p class="mt-2 text-muted">Loading content...</p>
        </div>
    </div>
</div>
{% endblock %}

{% block body_scripts %}
{# This JS block is a reminder that talent_club.js needs the loadTabContent function #}
<script>
    // This function must be defined in talent_club.js
    function loadTabContent(clubId, tabName) {
        const container = document.getElementById('tab-content-container');
        container.innerHTML = `<div class="text-center p-5"><div class="spinner-border text-primary" role="status"><span class="visually-hidden">Loading...</span></div></div>`;

        // Assumes a utility function `fetchData` exists in utils.js
        // The backend endpoint `/talent_club/<club_id>/content/<type>` will be called
        // The JS will then take the returned HTML and inject it into the container.
        // This logic belongs in your main JS file (e.g., talent_club.js)
        console.log(`TODO: Implement AJAX call in talent_club.js to fetch /talent_club/${clubId}/content/${tabName} and place it in #tab-content-container`);
    }
</script>
{% endblock %}{#
    Renders a single member in a list view.
    Required context:
    - member: The club membership object, which links a user and their role.
#}
<div class="list-group-item d-flex justify-content-between align-items-center">
    <div class="d-flex align-items-center">
        <img src="{{ member.user.profile.avatar_url or url_for('static', filename='img/placeholders/avatar_default.svg') }}" 
             alt="{{ member.user.first_name }}'s avatar" class="rounded-circle me-3" width="40" height="40">
        <div>
            <a href="{{ url_for('user_profile', user_id=member.user.id) }}" class="fw-bold text-dark text-decoration-none">{{ member.user.first_name }} {{ member.user.last_name }}</a>
            <div class="small text-muted">Joined: {{ member.join_date.strftime('%b %Y') }}</div>
        </div>
    </div>
    <div>
        {% set role_colors = {'Leader': 'primary', 'Co-Leader': 'info', 'Member': 'secondary'} %}
        <span class="badge bg-{{ role_colors.get(member.role, 'secondary') }}">{{ member.role }}</span>
    </div>
</div>
    Renders a single member in a list view.
    Required context:
    - member: The club membership object, which links a user and their role.
#}
<div class="list-group-item d-flex justify-content-between align-items-center">
    <div class="d-flex align-items-center">
        <img src="{{ member.user.profile.avatar_url or url_for('static', filename='img/placeholders/avatar_default.svg') }}" 
             alt="{{ member.user.first_name }}'s avatar" class="rounded-circle me-3" width="40" height="40">
        <div>
            <a href="{{ url_for('user_profile', user_id=member.user.id) }}" class="fw-bold text-dark text-decoration-none">{{ member.user.first_name }} {{ member.user.last_name }}</a>
            <div class="small text-muted">Joined: {{ member.join_date.strftime('%b %Y') }}</div>
        </div>
    </div>
    <div>
        {% set role_colors = {'Leader': 'primary', 'Co-Leader': 'info', 'Member': 'secondary'} %}
        <span class="badge bg-{{ role_colors.get(member.role, 'secondary') }}">{{ member.role }}</span>
    </div>
</div>>{# 
    Renders a single proposal card.
    Required context:
    - proposal: The proposal object.
#}
<div class="card tc-proposal-item mb-3" id="proposal-{{ proposal.id }}">
    <div class="card-body">
        <div class="d-flex justify-content-between">
            <h5 class="card-title">{{ proposal.title }}</h5>
            {% set status_meta = {
                'Pending': {'color': 'warning', 'icon': 'hourglass-split'},
                'Approved': {'color': 'success', 'icon': 'check-circle-fill'},
                'Rejected': {'color': 'danger', 'icon': 'x-circle-fill'}
            } %}
            <span class="badge fs-6 bg-{{ status_meta[proposal.status].color }}-subtle text-{{ status_meta[proposal.status].color }}-emphasis">
                <i class="bi bi-{{ status_meta[proposal.status].icon }} me-1"></i>
                {{ proposal.status }}
            </span>
        </div>
        <h6 class="card-subtitle mb-2 text-muted small">
            Proposed by {{ proposal.proposer.first_name }} on {{ proposal.timestamp.strftime('%Y-%m-%d') }}
        </h6>
        <p class="card-text">{{ proposal.description | truncate(200) }}</p>
        
        <!-- Voting/Actions Area -->
        <div class="d-flex justify-content-between align-items-center mt-3 pt-3 border-top">
            <div>
                <span class="text-success me-3"><i class="bi bi-hand-thumbs-up-fill"></i> {{ proposal.votes_for }}</span>
                <span class="text-danger"><i class="bi bi-hand-thumbs-down-fill"></i> {{ proposal.votes_against }}</span>
            </div>
            <div>
                {% if proposal.status == 'Pending' %}
                <a href="#" class="btn btn-sm btn-outline-success">Vote For</a>
                <a href="#" class="btn btn-sm btn-outline-danger">Vote Against</a>
                {% endif %}
                <a href="#" class="btn btn-sm btn-outline-secondary">Details</a>
            </div>
        </div>
    </div>
</div>{# 
    Renders a specialized post for a Talent Club feed.
    Extends the concept of a social post with club-specific context.
    Required context:
    - post: The post object, which may have a linked_proposal or linked_event.
#}
<div class="card tc-post-item mb-3 shadow-sm">
    <div class="card-body">
        <!-- Post Header -->
        <div class="d-flex align-items-center mb-3">
            <img src="{{ post.author.profile.avatar_url or url_for('static', filename='img/placeholders/avatar_default.svg') }}" 
                 alt="{{ post.author.first_name }}'s avatar" class="rounded-circle me-3" width="48" height="48">
            <div class="flex-grow-1">
                <a href="{{ url_for('user_profile', user_id=post.author.id) }}" class="fw-bold text-dark text-decoration-none">{{ post.author.first_name }} {{ post.author.last_name }}</a>
                <div class="text-muted small">{{ post.timestamp | humanize_time }}</div>
            </div>
            {% if post.author == current_user %}
            <div class="dropdown">
                <button class="btn btn-sm btn-light" type="button" data-bs-toggle="dropdown"><i class="bi bi-three-dots"></i></button>
                <ul class="dropdown-menu dropdown-menu-end">
                    <li><a class="dropdown-item" href="#">Delete Post</a></li>
                </ul>
            </div>
            {% endif %}
        </div>
        <!-- Post Content -->
        <div class="post-content mb-3">
            {{ post.content | nl2br | safe }}
        </div>
        <!-- Contextual Link (e.g., to a proposal) -->
        {% if post.linked_proposal %}
        <div class="alert alert-light border p-2">
            <i class="bi bi-lightbulb-fill me-2 text-primary"></i>
            This post is related to the proposal: 
            <a href="#proposal-{{ post.linked_proposal.id }}" class="fw-bold">{{ post.linked_proposal.title }}</a>
        </div>
        {% endif %}
        <!-- Post Actions -->
        <div class="post-actions d-flex justify-content-start align-items-center gap-3 border-top pt-2">
            <a href="#" class="btn btn-light btn-sm"><i class="bi bi-hand-thumbs-up"></i> Like</a>
            <a href="#" class="btn btn-light btn-sm"><i class="bi bi-chat-dots"></i> Comment</a>
        </div>
    </div>
    <!-- Comments are loaded dynamically or included as in the social post item -->
</div>{% extends "layout/base.html" %}

{% block page_title %}Club Proposal Invitation{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-envelope-paper-heart-fill me-2 text-primary"></i>Club Proposal Invitation
        </h1>
        <a href="{{ url_for('view_notifications') }}" class="btn btn-sm btn-outline-secondary">
            <i class="bi bi-arrow-left-circle me-1"></i> Back to Notifications
        </a>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    <div class="row justify-content-center">
        <div class="col-lg-8 col-md-10">
            {% include 'layout/_flash_messages.html' %}

            <div class="card shadow-sm">
                <div class="card-header bg-primary-subtle text-primary-emphasis">
                    <h5 class="mb-0 font-heading">Invitation to Join: {{ proposal.name }}</h5>
                </div>
                <div class="card-body p-4">
                    <p class="lead">
                        You have been mentioned by <strong>{{ proposal.creator.full_name or proposal.creator.username }}</strong>
                        in a proposal for a new Talent Club: <strong>"{{ proposal.name }}"</strong>.
                    </p>
                    <hr>
                    <h6 class="font-heading">Proposal Details:</h6>
                    <p><strong>Category:</strong> {{ proposal.social_category.name if proposal.social_category else 'N/A' }}</p>
                    <p><strong>Description:</strong></p>
                    <blockquote class="blockquote bg-light-subtle p-3 rounded">
                        <p class="mb-0 small">{{ proposal.description | nl2br | safe }}</p>
                    </blockquote>

                    {% if proposal.proposal_file %}
                        <p class="mt-3">
                            <a href="{{ url_for('download_social_file', file_id=proposal.proposal_file.id) }}" class="btn btn-outline-info btn-sm" download="{{ proposal.proposal_file.original_filename }}">
                                <i class="bi bi-file-earmark-arrow-down-fill me-1"></i> Download Proposal Document
                            </a>
                            <small class="text-muted ms-2">({{ (proposal.proposal_file.size / 1024) | round(1) }} KB)</small>
                        </p>
                    {% endif %}

                    <hr class="my-4">

                    {% if mention.status == 'pending' and proposal.status == 'pending_leader_review' %}
                        <h5 class="font-heading text-center">Do you want to be part of this proposed club?</h5>
                        <p class="text-muted text-center small">Your response is needed for the proposal to proceed.</p>
                        <div class="d-grid gap-2 d-sm-flex justify-content-sm-center mt-3">
                            <form method="POST" action="{{ url_for('respond_tc_proposal_mention', mention_id=mention.id, response='accept') }}" class="d-inline">
                                {{ csrf_token() if csrf_token else '' }}
                                <button type="submit" class="btn btn-success btn-lg px-4">
                                    <i class="bi bi-check-circle-fill me-2"></i>Yes, I'm In!
                                </button>
                            </form>
                            <form method="POST" action="{{ url_for('respond_tc_proposal_mention', mention_id=mention.id, response='decline') }}" class="d-inline">
                                 {{ csrf_token() if csrf_token else '' }}
                                <button type="submit" class="btn btn-outline-danger btn-lg px-4">
                                    <i class="bi bi-x-circle-fill me-2"></i>No, Decline
                                </button>
                            </form>
                        </div>
                    {% elif mention.status != 'pending' %}
                        <div class="alert alert-{{ 'success' if mention.status == 'accepted' else ('danger' if mention.status == 'rejected' else 'info') }} text-center" role="alert">
                            <h5 class="alert-heading font-heading">You have already responded!</h5>
                            <p>You <strong>{{ mention.status | title }}</strong> this invitation on {{ mention.responded_at | dateformat }}.</p>
                             {% if proposal.status != 'pending_leader_review' %}
                                <hr>
                                <p class="mb-0 small">The overall proposal status is: <strong>{{ proposal.status.replace('_', ' ') | title }}</strong>. No further action is needed from you on this invite.</p>
                            {% endif %}
                        </div>
                    {% elif proposal.status != 'pending_leader_review' %}
                         <div class="alert alert-warning text-center" role="alert">
                            <h5 class="alert-heading font-heading">Proposal Review Status Changed</h5>
                            <p>This proposal is no longer in the 'Pending Leader Review' stage (Current status: <strong>{{ proposal.status.replace('_', ' ') | title }}</strong>).</p>
                            <p class="mb-0 small">You can no longer respond to this specific invitation.</p>
                        </div>
                    {% endif %}
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}{% extends "layout/base.html" %}

{% block page_title %}Discover Talent Clubs{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-compass-fill me-2 text-primary"></i>Discover Talent Clubs
        </h1>
        <div class="btn-toolbar mb-2 mb-md-0">
            <a href="{{ url_for('my_talent_clubs') }}" class="btn btn-sm btn-outline-secondary me-2">
                <i class="bi bi-view-list me-1"></i> My Clubs & Follows
            </a>
            <a href="{{ url_for('create_talent_club_proposal') }}" class="btn btn-sm btn-success">
                <i class="bi bi-lightbulb-fill me-1"></i> Propose New Club
            </a>
        </div>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    {% include 'layout/_flash_messages.html' %}

    <div class="card shadow-sm mb-4">
        <div class="card-body bg-light-subtle p-3">
            <form method="GET" action="{{ url_for('talent_club_discover') }}" class="row g-3 align-items-end">
                <div class="col-md-5">
                    <label for="tcSearchInput" class="form-label fw-medium text-muted small">Search Clubs:</label>
                    <input type="text" name="search_query" id="tcSearchInput" class="form-control form-control-sm" value="{{ search_query or '' }}" placeholder="Search by name or description...">
                </div>
                <div class="col-md-5">
                    <label for="tcCategoryFilter" class="form-label fw-medium text-muted small">Filter by Category:</label>
                    <select name="category_id" id="tcCategoryFilter" class="form-select form-select-sm tom-select-filter">
                        <option value="" {% if not selected_category_id %}selected{% endif %}>All Categories</option>
                        {% for category in categories %}
                            <option value="{{ category.id }}" {% if selected_category_id == category.id %}selected{% endif %}>{{ category.name }}</option>
                        {% endfor %}
                    </select>
                </div>
                <div class="col-md-2 d-flex align-items-end">
                    <button type="submit" class="btn btn-primary btn-sm w-100"><i class="bi bi-search me-1"></i>Filter</button>
                </div>
            </form>
        </div>
    </div>

    {% if all_clubs and all_clubs | length > 0 %}
        <div class="row row-cols-1 row-cols-sm-2 row-cols-lg-3 row-cols-xl-4 g-4" id="discoverTcClubsContainer">
            {% for club_loop_var in all_clubs %} 
                 {% set is_member = club_statuses.get(club_loop_var.id, {}).get('is_member', False) %}
                 {% set is_following = club_statuses.get(club_loop_var.id, {}).get('is_following', False) %}
                 {% with
                    club=club_loop_var, 
                    current_user=current_user,
                    is_member_of_club=is_member,
                    is_following_club=is_following
                 %}
                    {% include 'partials/_tc_club_card_item.html' %}
                 {% endwith %}
            {% endfor %}
        </div>
        
        {% if pagination %}
            <nav aria-label="Talent Club discovery pagination" class="mt-5 d-flex justify-content-center">
                <ul class="pagination shadow-sm">
                    <li class="page-item {{ 'disabled' if not pagination.has_prev else '' }}">
                        <a class="page-link" href="{{ url_for('talent_club_discover', page=pagination.prev_num, search_query=search_query, category_id=selected_category_id) if pagination.has_prev else '#' }}" aria-label="Previous">
                            <span aria-hidden="true">«</span>
                        </a>
                    </li>
                    {% for page_num in pagination.iter_pages(left_edge=1, right_edge=1, left_current=2, right_current=2) %}
                        {% if page_num %}
                            <li class="page-item {{ 'active' if page_num == pagination.page else '' }}" {% if page_num == pagination.page %}aria-current="page"{% endif %}>
                                <a class="page-link" href="{{ url_for('talent_club_discover', page=page_num, search_query=search_query, category_id=selected_category_id) }}">{{ page_num }}</a>
                            </li>
                        {% else %}
                            <li class="page-item disabled"><span class="page-link">…</span></li>
                        {% endif %}
                    {% endfor %}
                    <li class="page-item {{ 'disabled' if not pagination.has_next else '' }}">
                        <a class="page-link" href="{{ url_for('talent_club_discover', page=pagination.next_num, search_query=search_query, category_id=selected_category_id) if pagination.has_next else '#' }}" aria-label="Next">
                            <span aria-hidden="true">»</span>
                        </a>
                    </li>
                </ul>
            </nav>
        {% endif %}
    {% else %}
        <div class="text-center text-muted p-5 content-placeholder">
            <i class="bi bi-binoculars display-3 mb-3" aria-hidden="true"></i>
            <h4 class="font-heading">No Talent Clubs Found</h4>
            <p>No active Talent Clubs match your current search or filter criteria. <a href="{{ url_for('talent_club_discover', search_query='', category_id='') }}">Clear filters</a> or perhaps <a href="{{ url_for('create_talent_club_proposal') }}">propose a new one</a>?</p>
        </div>
    {% endif %}
</div>
{% endblock %}

{% block body_scripts %}
<script src="{{ url_for('static', filename='js/talent_club.js') }}?v={{ range(1, 100000) | random }}"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const categoryFilterSelect = document.getElementById('tcCategoryFilter');
        if (categoryFilterSelect) {
            new TomSelect(categoryFilterSelect, {
                create: false,
                placeholder: 'Select a category...'
            });
        }
        console.log('Discover Talent Clubs page JS initialized with TomSelect.');
    });
</script>
{% endblock %}{% extends "layout/base.html" %}

{% block page_title %}Propose New Talent Club{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-lightbulb-fill me-2 text-primary"></i>Propose a New Talent Club
        </h1>
        <a href="{{ url_for('talent_club_configuration') }}" class="btn btn-sm btn-outline-secondary">
            <i class="bi bi-arrow-left-circle me-1"></i> Back to TC Configuration
        </a>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    <div class="row justify-content-center">
        <div class="col-lg-9 col-md-11">
            <div class="card shadow-sm">
                <div class="card-header bg-primary-subtle text-primary-emphasis">
                    <h5 class="mb-0 font-heading">New Club Proposal Form</h5>
                </div>
                <div class="card-body p-4">
                    {% include 'layout/_flash_messages.html' %}

                    <p class="text-muted mb-4">
                        Excited about a new club idea? Fill out the details below. Your proposal will be reviewed by the Talent Club Leader.
                        You need at least <strong>5 other active TC members</strong> to accept their mention in your proposal before the TC Leader can approve it.
                    </p>

                    <form method="POST" action="{{ url_for('create_talent_club_proposal') }}" enctype="multipart/form-data" novalidate>
                        {{ form.hidden_tag() if form.hidden_tag }} {# CSRF Token #}

                        <div class="mb-3">
                            {{ form.name.label(class="form-label fw-medium") }}
                            {{ form.name(class="form-control form-control-lg" + (" is-invalid" if form.name.errors else ""), placeholder="E.g., Robotics Club, Debate Society") }}
                            {% if form.name.errors %}<div class="invalid-feedback">{% for e in form.name.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>

                        <div class="mb-3">
                            {{ form.social_category_id.label(text="Club Category", class="form-label fw-medium") }}
                            {{ form.social_category_id(class="form-select tom-select" + (" is-invalid" if form.social_category_id.errors else ""), placeholder="Select a primary category...") }}
                            {% if form.social_category_id.errors %}<div class="invalid-feedback">{% for e in form.social_category_id.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>

                        <div class="mb-3">
                            {{ form.description.label(class="form-label fw-medium") }}
                            {{ form.description(class="form-control" + (" is-invalid" if form.description.errors else ""), rows="5", placeholder="Describe the club's mission, activities, and goals...") }}
                            {% if form.description.errors %}<div class="invalid-feedback">{% for e in form.description.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>

                        <div class="mb-3">
                            <label for="mentioned_member_ids_picker" class="form-label fw-medium">Mention Initial Members (Min. 5, excluding yourself)</label>
                            <select id="mentioned_member_ids_picker" class="form-control tom-select-members" multiple placeholder="Search and select TC members...">
                                {# Options will be populated by JS via AJAX for TomSelect #}
                            </select>
                            {# Hidden input to store the comma-separated list of selected member IDs for form submission #}
                            <input type="hidden" name="mentioned_member_ids" id="mentioned_member_ids_hidden">
                            <small class="form-text text-muted">These members will be notified to accept or decline being part of your initial group.</small>
                            {# Placeholder for JS validation errors related to member selection #}
                            <div class="invalid-feedback d-none" id="mentionedMembersError"></div>
                        </div>

                        <div class="mb-3">
                            {{ form.proposal_file.label(text="Proposal Document (Optional PDF, DOC, TXT)",class="form-label fw-medium") }}
                            {{ form.proposal_file(class="form-control filepond-input" + (" is-invalid" if form.proposal_file.errors else "")) }} {# Use filepond-input class #}
                             <small class="form-text text-muted">Attach a detailed proposal document if you have one.</small>
                            {% if form.proposal_file.errors %}<div class="invalid-feedback">{% for e in form.proposal_file.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>

                        <div class="d-flex justify-content-end mt-4">
                            <a href="{{ url_for('talent_club_configuration') }}" class="btn btn-outline-secondary me-2">Cancel</a>
                            {{ form.submit(class="btn btn-primary px-4", value="Submit Proposal for Review") }}
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block body_scripts %}
<script src="{{ url_for('static', filename='js/utils.js') }}?v={{ range(1, 100000) | random }}"></script> {# Ensure utils.js (with getData) is loaded BEFORE this script #}
<script src="{{ url_for('static', filename='js/talent_club.js') }}?v={{ range(1, 100000) | random }}"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Initialize TomSelect for category
        const categorySelect = document.getElementById('{{ form.social_category_id.id }}');
        if (categorySelect) {
            try { // Add try-catch for robustness
                new TomSelect(categorySelect, { create: false, placeholder: 'Select a category...' });
                console.log('TomSelect for CATEGORY initialized successfully.');
            } catch (e) {
                console.error('Error initializing TomSelect for category:', e);
            }
        } else {
            console.warn('Category select element not found for TomSelect init.');
        }

        // Initialize TomSelect for mentioning members
        const memberPicker = document.getElementById('mentioned_member_ids_picker');
        const hiddenMemberInput = document.getElementById('mentioned_member_ids_hidden');

        if (memberPicker && hiddenMemberInput) {
            try { // Add try-catch for robustness
                const memberTomSelect = new TomSelect(memberPicker, { // Store instance in a variable
                    valueField: 'id',
                    labelField: 'text',
                    searchField: ['text'],
                    plugins: ['remove_button'],
                    maxItems: 10,
                    placeholder: 'Search and select TC members...',
                    create: false,
                    load: function(query, callback) {
                        console.log('[MEMBER PICKER] TomSelect load triggered. Query:', query); // LOG 1
                        if (!query || query.length < 2) {
                            console.log('[MEMBER PICKER] Query too short, returning.'); // LOG 2
                            return callback(); // Important to call callback even if no search
                        }
                        console.log('[MEMBER PICKER] Query is sufficient, attempting getData for:', query); // LOG 3
                        getData(`/talent_club/api/members/search?q=${encodeURIComponent(query)}`)
                            .then(response => {
                                console.log('[MEMBER PICKER] Received from API:', response); // LOG 4
                                callback(response);
                            })
                            .catch((error) => {
                                console.error('[MEMBER PICKER] TomSelect load error during getData:', error); // LOG 5
                                callback(); // Call callback even on error
                            });
                    },
                    onChange: function(value) {
                        console.log('[MEMBER PICKER] onChange triggered. Value:', value); // LOG 6
                        hiddenMemberInput.value = value.join(',');
                        // ... (your existing errorDiv logic for min members if needed) ...
                    },
                    onLoad: function() {
                        console.log('[MEMBER PICKER] TomSelect options loaded (onLoad event).'); // LOG 7 (if options were pre-loaded, not via AJAX load)
                    },
                    onFocus: function() {
                        console.log('[MEMBER PICKER] TomSelect focused.'); // LOG 8
                    },
                    onType: function(str) {
                        console.log('[MEMBER PICKER] TomSelect typed:', str); // LOG 9
                    },
                    render: {
                        option: function(data, escape) {
                            return `<div class="d-flex align-items-center">
                                        <div>
                                            <div class="text-dark">${escape(data.text)}</div>
                                            ${data.role ? `<small class="text-muted">${escape(data.role.replace('_',' ').title())}</small>` : ''}
                                        </div>
                                    </div>`;
                        },
                        item: function(data, escape) {
                            return `<div class="text-dark">${escape(data.text)}</div>`;
                        }
                    }
                });
                console.log('TomSelect for MEMBER PICKER initialized successfully. Instance:', memberTomSelect); // LOG 10
            } catch (e) {
                console.error('Error initializing TomSelect for MEMBER PICKER:', e); // LOG 11
            }
        } else {
            console.warn('Member picker or hidden input element not found for TomSelect init.'); // LOG 12
        }
        
        console.log('Propose New Club page JS loaded.');
    });
</script>
{% endblock %}{% extends "layout/base.html" %}

{% block page_title %}Welcome to Nexus - Kechene Debre Selam G.S.S.{% endblock %}

{% block content %}
{% set no_sidebar = True %} {# No sidebar for the public landing page #}

<style>
    .hero-section {
        background: linear-gradient(135deg, var(--nexus-primary) 0%, var(--nexus-secondary) 100%);
        color: var(--nexus-light);
        padding: 6rem 1.5rem;
        text-align: center;
        border-bottom-left-radius: 50% 20%;
        border-bottom-right-radius: 50% 20%;
        margin-bottom: -1px; /* To overlap slight rendering gaps with cards */
    }
    .hero-section h1 {
        font-size: 2.8rem;
        font-weight: 700; /* Poppins Bold */
        color: #fff; /* Ensure high contrast on gradient */
        margin-bottom: 0.5rem;
    }
    .hero-section .lead {
        font-size: 1.3rem;
        font-weight: 300; /* Poppins Light */
        color: rgba(255, 255, 255, 0.85);
        margin-bottom: 2rem;
        max-width: 700px;
        margin-left: auto;
        margin-right: auto;
    }
    .hero-section .btn-lg {
        padding: 0.8rem 2rem;
        font-size: 1.1rem;
    }
    .features-section {
        padding: 4rem 1.5rem;
    }
    .feature-icon {
        font-size: 3rem;
        color: var(--nexus-primary);
        margin-bottom: 1rem;
        display: inline-block;
        padding: 1rem;
        background-color: rgba(var(--nexus-primary-rgb), 0.1); /* Assuming --nexus-primary-rgb is defined or use lighten */
        border-radius: 50%;
    }
     .login-form-section {
        padding: 3rem 1.5rem;
        background-color: var(--nexus-body-bg); /* Match body background */
    }
    .login-form-section .card {
        border: none; /* Remove card border for seamless look */
    }
</style>

{# Hero Section #}
<div class="hero-section">
    <div class="container">
        <img src="{{ url_for('static', filename='img/logo_light.png') }}" alt="Kechene Debre Selam G.S.S. Logo" class="mb-4" style="max-height: 80px;">
        <h1 class="display-4 font-heading">Welcome to Kechene Debre Selam G.S.S.</h1>
        <p class="lead">Powered by <strong>Nexus School Management</strong> - Your integrated platform for seamless school operations and enhanced learning experiences.</p>
        <div class="d-grid gap-2 d-sm-flex justify-content-sm-center">
            <a href="{{ url_for('login') }}" class="btn btn-light btn-lg px-4 gap-3"><i class="bi bi-box-arrow-in-right me-2"></i>Login</a>
            <a href="{{ url_for('pre_register') }}" class="btn btn-outline-light btn-lg px-4"><i class="bi bi-person-plus-fill me-2"></i>Register</a>
        </div>
    </div>
</div>

{# Login Form Section - Placed prominently after hero for easy access #}
<section class="login-form-section">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-5 col-md-7">
                 <div class="card shadow-lg">
                    <div class="card-body p-4 p-md-5">
                        <h3 class="card-title text-center font-heading mb-4">Secure Login</h3>
                        {% include 'layout/_flash_messages.html' %} {# Include flash messages here too #}
                        <form method="POST" action="{{ url_for('login', next=request.args.get('next')) }}" novalidate>
                            {{ form.hidden_tag() if form.hidden_tag }}
                            <div class="mb-3">
                                {{ form.username.label(class="form-label") }}
                                {{ form.username(class="form-control form-control-lg" + (" is-invalid" if form.username.errors else ""), placeholder="Username") }}
                                {% if form.username.errors %}
                                    <div class="invalid-feedback">
                                        {% for error in form.username.errors %}<span>{{ error }}</span>{% endfor %}
                                    </div>
                                {% endif %}
                            </div>
                            <div class="mb-3">
                                {{ form.password.label(class="form-label") }}
                                {{ form.password(class="form-control form-control-lg" + (" is-invalid" if form.password.errors else ""), placeholder="Password") }}
                                {% if form.password.errors %}
                                    <div class="invalid-feedback">
                                        {% for error in form.password.errors %}<span>{{ error }}</span>{% endfor %}
                                    </div>
                                {% endif %}
                            </div>
                            <div class="d-grid">
                                {{ form.submit(class="btn btn-primary btn-lg w-100") }}
                            </div>
                            <div class="text-center mt-3">
                                <small><a href="{{ url_for('pre_register') }}" class="text-muted">Need an account? Register</a></small>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>


{# Features Section - Optional, can be expanded or removed #}
<section class="features-section text-center">
    <div class="container">
        <h2 class="mb-5 font-heading">Why Choose Nexus?</h2>
        <div class="row">
            <div class="col-md-4 mb-4">
                <div class="p-3">
                    <span class="feature-icon"><i class="bi bi-people-fill"></i></span>
                    <h4 class="font-heading mt-3">Centralized Management</h4>
                    <p class="text-muted">Streamline all administrative, academic, and communication tasks in one powerful platform.</p>
                </div>
            </div>
            <div class="col-md-4 mb-4">
                 <div class="p-3">
                    <span class="feature-icon"><i class="bi bi-bar-chart-line-fill"></i></span>
                    <h4 class="font-heading mt-3">Data-Driven Insights</h4>
                    <p class="text-muted">Access real-time analytics to monitor progress, identify trends, and make informed decisions.</p>
                </div>
            </div>
            <div class="col-md-4 mb-4">
                 <div class="p-3">
                    <span class="feature-icon"><i class="bi bi-shield-check"></i></span>
                    <h4 class="font-heading mt-3">Secure & Reliable</h4>
                    <p class="text-muted">Built with security at its core to protect your data and ensure dependable performance.</p>
                </div>
            </div>
        </div>
    </div>
</section>

{# Call to Action / Contact Section - Optional #}
{# <section class="py-5 bg-light">
    <div class="container text-center">
        <h3 class="font-heading">Ready to Transform Your School?</h3>
        <p class="lead text-muted">Contact us today to learn more about Nexus for Kechene Debre Selam G.S.S.</p>
        <a href="#" class="btn btn-info btn-lg mt-3">Get in Touch</a> {# Placeholder link #}
    {# </div>
</section> #}

{% endblock %}

{% block body_scripts %}
<script>
    // Any page-specific JavaScript for index.html can go here.
    // For instance, animations or interactive elements for the hero/features.
</script>
{% endblock %}{% extends "layout/base.html" %}

{% block page_title %}All Book Checkouts{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-journals me-2 text-primary"></i>Manage Book Checkouts
        </h1>
        <div class="btn-toolbar mb-2 mb-md-0">
            <a href="{{ url_for('checkout_book') }}" class="btn btn-sm btn-success me-2">
                <i class="bi bi-journal-plus me-1"></i> New Checkout
            </a>
            <a href="{{ url_for('librarian_dashboard') }}" class="btn btn-sm btn-outline-secondary">
                 <i class="bi bi-arrow-left-circle me-1"></i> Back to Dashboard
            </a>
        </div>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    {% include 'layout/_flash_messages.html' %}

    {# Filters and Search Section #}
    <div class="card shadow-sm mb-4">
        <div class="card-body bg-light-subtle">
            <form method="GET" action="{{ url_for('list_checkouts') }}" class="row g-3 align-items-end">
                <div class="col-md-4">
                    <label for="statusFilter" class="form-label fw-medium text-muted small">Status:</label>
                    <select name="status" id="statusFilter" class="form-select form-select-sm tom-select-filter">
                        <option value="all" {% if status_filter == 'all' %}selected{% endif %}>All Checkouts</option>
                        <option value="active" {% if status_filter == 'active' %}selected{% endif %}>Active (Not Returned)</option>
                        <option value="overdue" {% if status_filter == 'overdue' %}selected{% endif %}>Active & Overdue</option>
                        <option value="returned" {% if status_filter == 'returned' %}selected{% endif %}>Returned</option>
                    </select>
                </div>
                <div class="col-md-6">
                    <label for="searchFilter" class="form-label fw-medium text-muted small">Search (Book/User):</label>
                    <input type="text" name="search" id="searchFilter" class="form-control form-control-sm" value="{{ search_query or '' }}" placeholder="Book title, borrower name/username...">
                </div>
                <div class="col-md-2 d-flex align-items-end">
                    <button type="submit" class="btn btn-primary btn-sm w-100"><i class="bi bi-search me-1"></i>Filter</button>
                </div>
            </form>
        </div>
    </div>

    {# Checkout Listing #}
    <div class="card shadow-sm">
        <div class="card-header">
            <h5 class="mb-0 font-heading">
                {% if status_filter == 'active' %}Active Checkouts
                {% elif status_filter == 'overdue' %}Overdue Checkouts
                {% elif status_filter == 'returned' %}Returned Books
                {% else %}All Checkouts{% endif %}
            </h5>
        </div>
        <div class="card-body p-0"> {# No padding for full-width list group #}
            {% if checkouts_paginated and checkouts_paginated.items %}
                <div class="list-group list-group-flush">
                    {% for checkout in checkouts_paginated.items %}
                        {# Use the _book_checkout_item.html partial #}
                        {% include 'partials/_book_checkout_item.html' %}
                    {% endfor %}
                </div>
            {% else %}
                <div class="text-center text-muted p-5 content-placeholder">
                    <i class="bi bi-journal-richtext display-3 mb-3"></i>
                    <h4 class="font-heading">No Checkouts Found</h4>
                    <p>There are no book checkouts matching your current filter criteria.</p>
                     <a href="{{ url_for('list_checkouts') }}" class="btn btn-outline-primary mt-2"><i class="bi bi-arrow-counterclockwise me-1"></i>Clear Filters</a>
                </div>
            {% endif %}
        </div>

        {# Pagination #}
        {% if checkouts_paginated and (checkouts_paginated.has_prev or checkouts_paginated.has_next) %}
            <div class="card-footer bg-light-subtle">
                <nav aria-label="Checkout pagination" class="d-flex justify-content-center">
                    <ul class="pagination shadow-sm mb-0">
                        <li class="page-item {{ 'disabled' if not checkouts_paginated.has_prev else '' }}">
                            <a class="page-link" href="{{ url_for('list_checkouts', page=checkouts_paginated.prev_num, status=status_filter, search=search_query) if checkouts_paginated.has_prev else '#' }}" aria-label="Previous">
                                <span aria-hidden="true">«</span>
                            </a>
                        </li>
                        {% for page_num in checkouts_paginated.iter_pages(left_edge=1, right_edge=1, left_current=2, right_current=2) %}
                            {% if page_num %}
                                <li class="page-item {{ 'active' if page_num == checkouts_paginated.page else '' }}">
                                    <a class="page-link" href="{{ url_for('list_checkouts', page=page_num, status=status_filter, search=search_query) }}">{{ page_num }}</a>
                                </li>
                            {% else %}
                                <li class="page-item disabled"><span class="page-link">...</span></li>
                            {% endif %}
                        {% endfor %}
                        <li class="page-item {{ 'disabled' if not checkouts_paginated.has_next else '' }}">
                            <a class="page-link" href="{{ url_for('list_checkouts', page=checkouts_paginated.next_num, status=status_filter, search=search_query) if checkouts_paginated.has_next else '#' }}" aria-label="Next">
                                <span aria-hidden="true">»</span>
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>
        {% endif %}
    </div>
</div>
{% endblock %}

{% block body_scripts %}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Initialize TomSelect for the status filter dropdown
        const statusFilterSelect = document.getElementById('statusFilter');
        if (statusFilterSelect) {
            new TomSelect(statusFilterSelect, {
                create: false,
                allowEmptyOption: false // "All Checkouts" is a valid selection
            });
        }
        console.log('List Checkouts page JS loaded.');
    });
</script>
{% endblock %}{% extends "layout/base.html" %}

{% block title %}Library Attendance Kiosk{% endblock %}

{% block content %}
<div class="container-fluid mt-4">
    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="h3 mb-0 text-gray-800">Library Attendance Kiosk</h1>
            <p class="mb-0 text-muted">Quickly log student entry and exit.</p>
        </div>
        <div class="text-end">
            <span id="live-clock" class="h5 font-weight-bold"></span>
        </div>
    </div>

    <div class="row">
        <!-- Main Interaction Panel -->
        <div class="col-lg-6">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Find Student</h6>
                </div>
                <div class="card-body">
                    <form id="studentSearchForm" onsubmit="return false;">
                        <div class="input-group mb-3">
                            <input type="text" id="studentSearchInput" class="form-control form-control-lg" placeholder="Enter Student ID or Name..." autocomplete="off" autofocus>
                            <button class="btn btn-primary" type="submit"><i class="bi bi-search"></i></button>
                        </div>
                    </form>
                    <div id="searchResults" class="list-group">
                        <!-- AJAX search results will be injected here -->
                        <div class="text-center p-3 text-muted" id="searchPlaceholder">
                            <i class="bi bi-person-bounding-box" style="font-size: 2rem;"></i>
                            <p class="mt-2 mb-0">Student details will appear here.</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Live Activity Log -->
        <div class="col-lg-6">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Recent Activity</h6>
                </div>
                <div class="card-body" style="max-height: 500px; overflow-y: auto;">
                    <ul class="list-group list-group-flush" id="activityLog">
                        <!-- Live log entries will be prepended here -->
                        <li class="list-group-item text-center text-muted" id="logPlaceholder">No activity yet.</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block scripts %}
{{ super() }}
<script>
document.addEventListener('DOMContentLoaded', function() {
    // --- Element References ---
    const searchInput = document.getElementById('studentSearchInput');
    const searchResults = document.getElementById('searchResults');
    const searchPlaceholder = document.getElementById('searchPlaceholder');
    const activityLog = document.getElementById('activityLog');
    const logPlaceholder = document.getElementById('logPlaceholder');
    const clockElement = document.getElementById('live-clock');

    // --- CSRF Token for Secure POST Requests ---
    // The backend must provide a way to get the CSRF token.
    // Here we assume it's in a meta tag in the base layout.
    // e.g., <meta name="csrf-token" content="{{ csrf_token() }}">
    const csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');

    // --- Live Clock ---
    function updateClock() {
        if (!clockElement) return;
        clockElement.textContent = new Date().toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit', second: '2-digit' });
    }
    updateClock();
    setInterval(updateClock, 1000);

    // --- Search Functionality ---
    let searchTimeout;
    searchInput.addEventListener('input', () => {
        clearTimeout(searchTimeout);
        const query = searchInput.value.trim();
        if (query.length < 2) {
            searchResults.innerHTML = ''; // Clear results if query is too short
            searchResults.appendChild(searchPlaceholder);
            return;
        }
        searchTimeout = setTimeout(() => {
            performSearch(query);
        }, 300); // Debounce requests by 300ms
    });

    async function performSearch(query) {
        searchResults.innerHTML = '<div class="text-center p-3"><div class="spinner-border text-primary" role="status"><span class="visually-hidden">Loading...</span></div></div>';
        try {
            const response = await fetch(`/api/student-search?q=${encodeURIComponent(query)}`);
            if (!response.ok) throw new Error(`Server error: ${response.statusText}`);
            const students = await response.json();
            displayResults(students);
        } catch (error) {
            console.error('Search failed:', error);
            searchResults.innerHTML = `<div class="alert alert-danger">Search failed. Please check the connection and try again.</div>`;
        }
    }

    function displayResults(students) {
        searchResults.innerHTML = '';
        if (students.length === 0) {
            searchResults.innerHTML = '<div class="list-group-item text-center text-muted">No students found.</div>';
            return;
        }
        students.forEach(student => {
            const resultItem = document.createElement('div');
            resultItem.className = 'list-group-item list-group-item-action d-flex justify-content-between align-items-center';
            resultItem.innerHTML = `
                <div>
                    <h6 class="mb-0">${student.first_name} ${student.last_name}</h6>
                    <small class="text-muted">ID: ${student.student_id}</small>
                </div>
                <div>
                    <button class="btn btn-sm btn-success check-in" data-id="${student.id}" data-name="${student.first_name} ${student.last_name}">
                        <i class="bi bi-box-arrow-in-right"></i> Check In
                    </button>
                    <button class="btn btn-sm btn-warning check-out" data-id="${student.id}" data-name="${student.first_name} ${student.last_name}">
                        <i class="bi bi-box-arrow-right"></i> Check Out
                    </button>
                </div>
            `;
            searchResults.appendChild(resultItem);
        });
    }

    // --- Check-in/Check-out Functionality ---
    searchResults.addEventListener('click', function(e) {
        const target = e.target.closest('button');
        if (!target) return;

        const studentId = target.dataset.id;
        const studentName = target.dataset.name;
        const action = target.classList.contains('check-in') ? 'in' : 'out';
        
        logAttendance(studentId, studentName, action, target);
    });

    async function logAttendance(studentId, studentName, action, button) {
        button.disabled = true;
        button.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>';

        try {
            const response = await fetch('/api/library-attendance', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRFToken': csrfToken
                },
                body: JSON.stringify({ student_id: studentId, action: action })
            });
            const result = await response.json();

            if (!response.ok) throw new Error(result.error || 'Failed to log attendance.');
            
            addLogEntry(studentName, action, new Date(result.timestamp));
            searchInput.value = '';
            searchResults.innerHTML = '';
            searchResults.appendChild(searchPlaceholder);
            searchInput.focus();

        } catch (error) {
            console.error('Log failed:', error);
            alert(`Error: ${error.message}`); // Simple error feedback
            button.disabled = false;
            button.innerHTML = action === 'in' ? '<i class="bi bi-box-arrow-in-right"></i> Check In' : '<i class="bi bi-box-arrow-right"></i> Check Out';
        }
    }
    
    function addLogEntry(studentName, action, timestamp) {
        if(logPlaceholder) {
            logPlaceholder.remove();
        }

        const logItem = document.createElement('li');
        const isCheckIn = action === 'in';
        logItem.className = `list-group-item d-flex justify-content-between align-items-center animate-fade-in`;
        
        logItem.innerHTML = `
            <div>
                <span class="fw-bold">${studentName}</span>
                <span class="badge ${isCheckIn ? 'bg-success-subtle text-success-emphasis' : 'bg-warning-subtle text-warning-emphasis'} ms-2">
                    Checked ${isCheckIn ? 'In' : 'Out'}
                </span>
            </div>
            <small class="text-muted">${timestamp.toLocaleTimeString()}</small>
        `;
        activityLog.prepend(logItem);

        // Keep the log from growing indefinitely
        while (activityLog.children.length > 50) {
            activityLog.lastElementChild.remove();
        }
    }
});
</script>

<style>
    .animate-fade-in {
        animation: fadeIn 0.5s ease-in-out;
    }
    @keyframes fadeIn {
        from { opacity: 0; transform: translateY(-10px); }
        to { opacity: 1; transform: translateY(0); }
    }
</style>
{% endblock %}{% extends "layout/base.html" %}

{# Macro is defined at the top of the template, after 'extends', to be available globally within this file. #}
{% macro render_quick_links(links, title="Quick Actions") %}
    {% if links and links | length > 0 %}
    <div class="card shadow-sm dashboard-quick-links-card">
        <div class="card-header">
            <h5 class="mb-0 font-heading"><i class="bi bi-lightning-charge-fill me-2"></i>{{ title }}</h5>
        </div>
        <div class="list-group list-group-flush">
            {% for link in links %}
                <a href="{{ link.url | default('#') if not link.disabled else 'javascript:void(0);' }}" 
                   class="list-group-item list-group-item-action d-flex align-items-center py-3 {% if link.disabled %} disabled-link {% endif %}"
                   {% if link.tooltip %} data-bs-toggle="tooltip" data-bs-title="{{ link.tooltip }}" {% endif %}>
                    <i class="bi {{ link.icon | default('bi-link-45deg') }} fs-5 me-3 {{ link.color_class | default('text-primary') }}" style="min-width: 24px;"></i>
                    <span class="fw-medium">{{ link.text | default('Link') }}</span>
                    <i class="bi bi-chevron-right ms-auto text-muted small"></i>
                </a>
            {% endfor %}
        </div>
    </div>
    {% endif %}
{% endmacro %}


{% set student_page_title = "Student Profile: " + (student.full_name or student.username) %}
{% block page_title %}{{ student_page_title }}{% endblock %}

{% set checkout_count = current_checkouts|length if current_checkouts else 0 %}

{% block content_header %}
<div class="d-flex justify-content-between align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2 font-heading text-truncate">
        <i class="bi bi-person-badge-fill text-primary me-2"></i>{{ student_page_title }}
    </h1>
    {# A simple back button that uses the browser's history or a sensible default #}
    <a href="{{ request.referrer or url_for('librarian_dashboard') }}" class="btn btn-sm btn-outline-secondary">
        <i class="bi bi-arrow-left me-1"></i>Back
    </a>
</div>
{% endblock %}

{% block content %}
<div class="container-fluid px-md-4 px-0">
    {% include 'layout/_flash_messages.html' %}

    {% if student %}
    <div class="row g-4">
        {# Left Column: Student Info & Actions #}
        <div class="col-lg-4">
            <div class="card shadow-sm text-center mb-4">
                <div class="card-body">
                    <img src="{{ url_for('static', filename=(student.profile_photo_url or 'img/placeholders/user_avatar_default.png')) }}" alt="{{ student.username }}" class="rounded-circle mb-3 shadow-sm" style="width: 120px; height: 120px; object-fit: cover; border: 3px solid var(--bs-card-border-color);">
                    <h4 class="font-heading mb-1">{{ student.full_name or student.username }}</h4>
                    <p class="text-muted mb-0">{{ student.username }}</p>
                    <p class="text-muted"><small>Grade: {{ student.grade or 'N/A' }} | Section: {{ student.section or 'N/A' }}</small></p>
                </div>
            </div>

            {# Define actions for the quick links macro. Disabled items clearly indicate future features. #}
            {% set librarian_student_actions = [
                {'url': url_for('checkout_book', user_id_prefill=student.id), 'text': 'Checkout a Book', 'icon': 'bi-journal-plus', 'color_class': 'text-success'},
                {'url': url_for('universal_chat', target_user_id=student.id), 'text': 'Send Message', 'icon': 'bi-chat-dots-fill', 'color_class': 'text-primary'},
                {'url': '#', 'text': 'View Reading History', 'icon': 'bi-clock-history', 'color_class': 'text-info', 'disabled': True, 'tooltip': 'Feature coming soon'}
            ] %}
            {{ render_quick_links(librarian_student_actions, title="Actions") }}
        </div>

        {# Right Column: Library Details #}
        <div class="col-lg-8">
            <div class="card shadow-sm mb-4">
                <div class="card-header d-flex justify-content-between align-items-center bg-light-subtle">
                    <h5 class="mb-0 font-heading"><i class="bi bi-journal-arrow-up me-2"></i>Current Checkouts ({{ checkout_count }})</h5>
                    <a href="{{ url_for('checkout_book', user_id_prefill=student.id) }}" class="btn btn-sm btn-success"><i class="bi bi-plus-lg me-1"></i>New Checkout</a>
                </div>
                <div class="card-body p-0">
                    {% if checkout_count > 0 %}
                        <div class="list-group list-group-flush">
                            {% for checkout in current_checkouts %}
                                {# The partial handles the display of each checkout item, including return forms #}
                                {% include 'partials/_book_checkout_item.html' %}
                            {% endfor %}
                        </div>
                    {% else %}
                        <div class="text-center p-4">
                            <i class="bi bi-journal-x fs-1 text-muted"></i>
                            <p class="mt-2 text-muted">This student has no books currently checked out.</p>
                        </div>
                    {% endif %}
                </div>
            </div>

            {# Placeholder for Fines feature with a modern look #}
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-light-subtle">
                    <h5 class="mb-0 font-heading"><i class="bi bi-cash-coin me-2 text-danger"></i>Outstanding Fines</h5>
                </div>
                <div class="card-body text-center text-muted placeholder-glow py-4">
                    <i class="bi bi-receipt-cutoff fs-1 mb-2"></i>
                    <p>Outstanding fines information will be displayed here.</p>
                    <span class="placeholder col-4 rounded-pill"></span>
                </div>
            </div>

            {# Placeholder for Recent Activity feature with a modern look #}
            <div class="card shadow-sm">
                <div class="card-header bg-light-subtle">
                    <h5 class="mb-0 font-heading"><i class="bi bi-activity me-2"></i>Recent Library Activity</h5>
                </div>
                <div class="card-body text-center text-muted placeholder-glow py-4">
                    <i class="bi bi-hourglass-split fs-1 mb-2"></i>
                    <p>A log of past returns and other interactions will appear here.</p>
                    <span class="placeholder col-6 rounded-pill"></span>
                </div>
            </div>
        </div>
    </div>
    {% else %}
        <div class="alert alert-danger text-center" role="alert">
            <h4 class="alert-heading">Student Not Found</h4>
            <p>The requested student profile could not be loaded. Please go back and select another student.</p>
        </div>
    {% endif %}
</div>
{% endblock %}{% extends "layout/base.html" %}

{# Define Macros at the top so they are available to all blocks in this template #}
{% macro render_stat_card(card_title, card_value, card_icon, card_color_class, card_url=None, card_url_text='View Details', card_id=None) %}
<div class="col">
    <div class="card dashboard-stat-card h-100 shadow-sm" {% if card_id %}id="{{ card_id }}"{% endif %}>
        <div class="card-body d-flex align-items-center">
            <div class="stat-icon display-4 me-3 {{ card_color_class | default('text-primary') }}">
                <i class="bi {{ card_icon | default('bi-bar-chart-line-fill') }}"></i>
            </div>
            <div class="stat-content">
                <h6 class="card-subtitle mb-1 text-muted text-uppercase font-body" style="font-size: 0.8rem;">{{ card_title }}</h6>
                <p class="card-text display-6 fw-bold mb-0 font-heading">{{ card_value }}</p>
            </div>
        </div>
        {% if card_url %}
        <a href="{{ card_url }}" class="card-footer text-decoration-none text-muted bg-light-subtle hover-bg-light">
            <small>{{ card_url_text }} <i class="bi bi-arrow-right-short ms-1"></i></small>
        </a>
        {% endif %}
    </div>
</div>
{% endmacro %}

{% macro render_quick_links(links) %}
    {% if links and links | length > 0 %}
    <div class="card shadow-sm dashboard-quick-links-card">
        <div class="card-header">
            <h5 class="mb-0 font-heading"><i class="bi bi-lightning-charge-fill me-2"></i>Quick Actions</h5>
        </div>
        <div class="list-group list-group-flush">
            {% for link in links %}
                {# MODIFIED: Check if the link should be displayed based on its 'condition' attribute #}
                {% if link.condition is not defined or link.condition %}
                    <a href="{{ link.url | default('#') }}" class="list-group-item list-group-item-action d-flex align-items-center py-3">
                        <i class="bi {{ link.icon | default('bi-link-45deg') }} fs-5 me-3 {{ link.color_class | default('text-primary') }}" style="min-width: 24px;"></i>
                        <span class="fw-medium">{{ link.text | default('Link') }}</span>
                        <i class="bi bi-chevron-right ms-auto text-muted small"></i>
                    </a>
                {% endif %}
            {% endfor %}
        </div>
    </div>
    {% endif %}
{% endmacro %}

{% macro render_recent_activity(activities) %}
<div class="card shadow-sm recent-activity-card">
    <div class="card-header">
        <h5 class="mb-0 font-heading"><i class="bi bi-clock-history me-2"></i>Recent Activity</h5>
    </div>
    <div class="card-body" style="max-height: 400px; overflow-y: auto;">
        {% if activities and activities | length > 0 %}
            <ul class="list-unstyled">
                {% for activity in activities %}
                    <li class="d-flex align-items-start mb-3 pb-3 border-bottom">
                        <div class="activity-icon me-3">
                            <span class="badge bg-{{ activity.badge_color | default('secondary') }} p-2 rounded-circle">
                                <i class="bi {{ activity.icon | default('bi-bell') }} fs-5 text-white"></i>
                            </span>
                        </div>
                        <div class="activity-content">
                            <p class="mb-1 text-dark">{{ activity.text | safe }}</p>
                            <small class="text-muted">
                                <i class="bi bi-calendar3 me-1"></i>
                                {{ activity.timestamp | datetimeformat('%b %d, %Y %I:%M %p') if activity.timestamp else 'Just now' }}
                            </small>
                            {% if activity.url %}
                                <a href="{{ activity.url }}" class="ms-2 small text-decoration-none">View <i class="bi bi-arrow-up-right-square"></i></a>
                            {% endif %}
                        </div>
                    </li>
                {% endfor %}
            </ul>
        {% else %}
            <div class="text-center text-muted p-3">
                <i class="bi bi-moon-stars fs-1 mb-2"></i>
                <p>No recent activity to display.</p>
            </div>
        {% endif %}
    </div>
    {% if activities and activities | length > 5 %}
    <a href="{{ url_for('view_notifications') }}" class="card-footer text-center text-decoration-none text-muted bg-light-subtle hover-bg-light">
        <small>View All Activity <i class="bi bi-arrow-right-short ms-1"></i></small>
    </a>
    {% endif %}
</div>
{% endmacro %}


{% block page_title %}Librarian Dashboard{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-bookshelf me-2 text-primary"></i>Librarian Dashboard
        </h1>
        <div class="btn-toolbar mb-2 mb-md-0">
             <a href="{{ url_for('add_asset') }}" class="btn btn-sm btn-success me-2">
                <i class="bi bi-plus-circle-fill me-1"></i> Add New Book/Asset
            </a>
            <a href="{{ url_for('settings') }}" class="btn btn-sm btn-outline-secondary">
                <i class="bi bi-gear-fill me-1"></i> Settings
            </a>
        </div>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">

    {# Welcome Message #}
    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow-sm welcome-card bg-info text-white"> {# Changed color for variety #}
                <div class="card-body">
                    <h4 class="card-title font-heading">Library Overview, {{ current_user.full_name or current_user.username }}!</h4>
                    <p class="mb-0">Manage book checkouts, track inventory, and oversee student attendance.</p>
                </div>
            </div>
        </div>
    </div>

    {# Main Stats Cards Row #}
    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 row-cols-xl-4 g-4 mb-4">
        {# MODIFIED: render_stat_card calls to be single line #}
        {{ render_stat_card(card_title="Total Books", card_value=total_books | default(0), card_icon="bi bi-journal-bookmark-fill", card_color_class="text-primary", card_url=url_for('list_all_assets', category='Books')) }}

        {{ render_stat_card(card_title="Available Books", card_value=available_books | default(0), card_icon="bi bi-journal-check", card_color_class="text-success", card_url=url_for('list_all_assets', category='Books', status='Available')) }}

        {{ render_stat_card(card_title="Books Checked Out", card_value=checked_out_books | default(0), card_icon="bi bi-journal-arrow-up", card_color_class="text-warning", card_url=url_for('list_checkouts', status='active')) }}

        {{ render_stat_card(card_title="Open Library Reports", card_value=open_library_reports | default(0), card_icon="bi bi-tools", card_color_class="text-danger", card_url=url_for('list_asset_reports')) }}
    </div>

    <div class="row g-4">
        {# Left Column: Quick Links & Overdue Books #}
        <div class="col-lg-4 col-xl-3">
            {% set librarian_quick_links = [
                {'url': url_for('checkout_book'), 'text': 'Checkout a Book', 'icon': 'bi-cart-plus-fill', 'color_class': 'text-primary'},
                {'url': url_for('list_checkouts'), 'text': 'Manage All Checkouts', 'icon': 'bi-journals', 'color_class': 'text-success'},
                {'url': url_for('librarian_attendance_dashboard'), 'text': 'View Student Attendance', 'icon': 'bi-calendar3-week-fill', 'color_class': 'text-info'},
                {'url': url_for('my_tasks'), 'text': 'My Tasks', 'icon': 'bi-list-task', 'color_class': 'text-secondary'},
                {'url': url_for('submit_request'), 'text': 'Submit a Request', 'icon': 'bi-file-earmark-plus-fill', 'color_class': 'text-warning', 'condition': permissions and permissions.can_create_request }
            ] %}
            {# MODIFIED: Call render_quick_links without the selectattr filter now #}
            {{ render_quick_links(librarian_quick_links) }}

            {# Overdue Books Placeholder #}
            <div class="card shadow-sm mt-4">
                <div class="card-header">
                    <h5 class="mb-0 font-heading"><i class="bi bi-hourglass-bottom me-2 text-danger"></i>Overdue Books</h5>
                </div>
                <div class="card-body text-center text-muted content-placeholder" id="overdueBooksContainer">
                     <i class="bi bi-search fs-1 mb-2"></i>
                    <p>Loading overdue books summary...</p>
                    {# This section could be populated by AJAX #}
                </div>
                 <a href="{{ url_for('list_checkouts', status='overdue') }}" class="card-footer text-center text-decoration-none text-muted bg-light-subtle hover-bg-light">
                    <small>View All Overdue <i class="bi bi-arrow-right-short ms-1"></i></small>
                </a>
            </div>
        </div>

        {# Right Column: Recent Activity & Library Usage Stats (Placeholder) #}
        <div class="col-lg-8 col-xl-9">
            {{ render_recent_activity(recent_activities) }} {# Assuming recent_activities is passed #}

            <div class="card shadow-sm mt-4">
                <div class="card-header">
                    <h5 class="mb-0 font-heading"><i class="bi bi-graph-up me-2"></i>Library Usage Statistics</h5>
                </div>
                <div class="card-body text-center text-muted content-placeholder">
                     <i class="bi bi-pie-chart-fill fs-1 mb-2"></i>
                    <p>Charts on book popularity, checkout trends, etc., will appear here.</p>
                     <small>(Feature coming soon)</small>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block body_scripts %}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Placeholder for any librarian dashboard specific JS
        // e.g., AJAX call to populate #overdueBooksContainer
        console.log('Librarian Dashboard JS loaded.');
    });
</script>
{% endblock %}
{% extends "layout/base.html" %}

{# Define a reusable stat card macro for this page #}
{% macro render_stat_card(title, value, icon, border_color='primary') %}
<div class="col-xl-3 col-md-6 mb-4">
    <div class="card border-start border-4 border-{{ border_color }} shadow-sm h-100">
        <div class="card-body">
            <div class="row align-items-center">
                <div class="col">
                    <div class="text-xs fw-bold text-{{ border_color }} text-uppercase mb-1">{{ title }}</div>
                    <div class="h5 mb-0 fw-bold text-gray-800">{{ value }}</div>
                </div>
                <div class="col-auto">
                    <i class="bi {{ icon }} fs-2 text-gray-300"></i>
                </div>
            </div>
        </div>
    </div>
</div>
{% endmacro %}

{% block title %}Library Attendance Dashboard{% endblock %}

{% block content_header %}
<div class="d-flex justify-content-between align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2 font-heading"><i class="bi bi-graph-up me-2 text-primary"></i>Library Attendance Dashboard</h1>
</div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    <div class="row">
        {{ render_stat_card('Students in Library', stats.current_occupancy, 'bi-people-fill', 'primary') }}
        {{ render_stat_card('Total Visits Today', stats.total_visits_today, 'bi-door-open-fill', 'success') }}
        {{ render_stat_card('Peak Hour Today', stats.peak_hour, 'bi-clock-history', 'info') }}
        {{ render_stat_card('Avg. Visit Duration', stats.avg_duration_str, 'bi-hourglass-split', 'warning') }}
    </div>

    <div class="row g-4">
        <div class="col-xl-8">
            <div class="card shadow-sm h-100">
                <div class="card-header bg-light-subtle"><h5 class="mb-0 font-heading">Hourly Library Traffic (Today)</h5></div>
                <div class="card-body">
                    <div style="position: relative; height:300px;">
                        <canvas id="hourlyTrafficChart"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-4">
            <div class="card shadow-sm h-100">
                <div class="card-header bg-light-subtle"><h5 class="mb-0 font-heading">Students Currently Present</h5></div>
                <div class="card-body p-0" style="max-height: 350px; overflow-y: auto;">
                    <ul class="list-group list-group-flush">
                        {% for log_entry in present_students %}
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <div>
                                <i class="bi bi-person-circle me-2 text-muted"></i>
                                <strong>{{ log_entry.user.full_name or log_entry.user.username }}</strong>
                            </div>
                            <small class="text-muted">Since: {{ log_entry.check_in_time | humanize_time_diff }}</small>
                        </li>
                        {% else %}
                        <li class="list-group-item text-center text-muted p-4">
                            <i class="bi bi-moon-stars fs-1"></i>
                            <p class="mt-2 mb-0">The library is currently empty.</p>
                        </li>
                        {% endfor %}
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block body_scripts %}
<!-- Ensure Chart.js is loaded from base.html or here -->
<script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.min.js"></script>
<script>
document.addEventListener('DOMContentLoaded', function() {
    const ctx = document.getElementById('hourlyTrafficChart');
    if (ctx) {
        // Safely parse the chart data passed from the backend
        const chartData = JSON.parse('{{ chart_data | tojson | safe }}');
        
        new Chart(ctx, {
            type: 'bar',
            data: {
                labels: chartData.labels, // e.g., ["08:00", "09:00", ...]
                datasets: [{
                    label: "Students Checked In",
                    data: chartData.data, // e.g., [5, 12, ...]
                    backgroundColor: 'rgba(78, 115, 223, 0.2)',
                    borderColor: 'rgba(78, 115, 223, 1)',
                    borderWidth: 1,
                    borderRadius: 4
                }]
            },
            options: {
                maintainAspectRatio: false,
                scales: { y: { beginAtZero: true, ticks: { stepSize: 1 } } },
                plugins: { legend: { display: false } }
            }
        });
    }
});
</script>
{% endblock %}{% extends "layout/base.html" %}

{% set page_title = "Edit Asset: " + (asset.name if asset else "New Asset") %}
{% block page_title %}{{ page_title }}{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-pencil-square me-2 text-primary"></i>{{ page_title }}
        </h1>
        <a href="{{ request.referrer or url_for('list_pending_assets') if asset and asset.status == 'Pending Review' else url_for('list_all_assets') }}" class="btn btn-sm btn-outline-secondary">
            <i class="bi bi-arrow-left-circle me-1"></i> Cancel & Go Back
        </a>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    <form method="POST" action="{{ url_for('edit_asset', asset_id=asset.id if asset else 0) }}" novalidate> {# Action URL needs asset.id if editing #}
        {{ form.hidden_tag() if form.hidden_tag }} {# CSRF Token #}

        <div class="row g-4">
            {# Left Column: Core Details & Status #}
            <div class="col-lg-8">
                <div class="card shadow-sm mb-4">
                    <div class="card-header">
                        <h5 class="mb-0 font-heading"><i class="bi bi-info-circle-fill me-2"></i>Asset Details</h5>
                    </div>
                    <div class="card-body">
                        <div class="mb-3">
                            {{ form.name.label(class="form-label fw-medium") }}
                            {{ form.name(class="form-control" + (" is-invalid" if form.name.errors else ""), placeholder="e.g., Laptop XYZ, Projector Model A") }}
                            {% if form.name.errors %}<div class="invalid-feedback">{% for e in form.name.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>
                        <div class="mb-3">
                            {{ form.description.label(class="form-label fw-medium") }}
                            {{ form.description(class="form-control" + (" is-invalid" if form.description.errors else ""), rows="4", placeholder="Detailed description, specifications, purpose...") }}
                            {% if form.description.errors %}<div class="invalid-feedback">{% for e in form.description.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>

                        <div class="row">
                            <div class="col-md-4 mb-3">
                                {{ form.quantity.label(class="form-label fw-medium") }}
                                {{ form.quantity(class="form-control" + (" is-invalid" if form.quantity.errors else ""), type="number", min="0") }}
                                {% if form.quantity.errors %}<div class="invalid-feedback">{% for e in form.quantity.errors %}{{e}}{% endfor %}</div>{% endif %}
                            </div>
                            <div class="col-md-4 mb-3">
                                {{ form.purchase_cost.label(class="form-label fw-medium") }}
                                <div class="input-group">
                                    <span class="input-group-text">$</span>
                                    {{ form.purchase_cost(class="form-control" + (" is-invalid" if form.purchase_cost.errors else ""), type="number", step="0.01", min="0", placeholder="0.00") }}
                                    {% if form.purchase_cost.errors %}<div class="invalid-feedback d-block">{% for e in form.purchase_cost.errors %}{{e}}{% endfor %}</div>{% endif %}
                                </div>
                            </div>
                            <div class="col-md-4 mb-3">
                                {{ form.condition.label(class="form-label fw-medium") }}
                                {{ form.condition(class="form-select" + (" is-invalid" if form.condition.errors else "")) }}
                                {% if form.condition.errors %}<div class="invalid-feedback">{% for e in form.condition.errors %}{{e}}{% endfor %}</div>{% endif %}
                            </div>
                        </div>
                         <div class="form-check form-switch mb-3">
                            {{ form.is_consumable(class="form-check-input" + (" is-invalid" if form.is_consumable.errors else ""), role="switch", id="isConsumableSwitch") }}
                            {{ form.is_consumable.label(class="form-check-label fw-medium", for="isConsumableSwitch") }}
                            {% if form.is_consumable.errors %}<div class="invalid-feedback d-block">{% for e in form.is_consumable.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>
                    </div>
                </div>

                <div class="card shadow-sm mb-4">
                    <div class="card-header">
                        <h5 class="mb-0 font-heading"><i class="bi bi-calendar-week-fill me-2"></i>Dates & Maintenance</h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                             <div class="col-md-6 mb-3" id="expiryDateGroup" {% if not form.is_consumable.data %}style="display:none;"{% endif %}>
                                {{ form.expiry_date.label(class="form-label fw-medium") }}
                                {{ form.expiry_date(class="form-control flatpickr-date" + (" is-invalid" if form.expiry_date.errors else ""), placeholder="YYYY-MM-DD") }}
                                {% if form.expiry_date.errors %}<div class="invalid-feedback">{% for e in form.expiry_date.errors %}{{e}}{% endfor %}</div>{% endif %}
                            </div>
                            <div class="col-md-6 mb-3">
                                {{ form.last_maintenance_date.label(class="form-label fw-medium") }}
                                {{ form.last_maintenance_date(class="form-control flatpickr-date" + (" is-invalid" if form.last_maintenance_date.errors else ""), placeholder="YYYY-MM-DD") }}
                                {% if form.last_maintenance_date.errors %}<div class="invalid-feedback">{% for e in form.last_maintenance_date.errors %}{{e}}{% endfor %}</div>{% endif %}
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            {# Right Column: Classification, Location & Metadata #}
            <div class="col-lg-4">
                <div class="card shadow-sm mb-4">
                    <div class="card-header bg-primary-subtle text-primary-emphasis">
                        <h5 class="mb-0 font-heading"><i class="bi bi-tags-fill me-2"></i>Classification & Status</h5>
                    </div>
                    <div class="card-body">
                        <div class="mb-3">
                            {{ form.category_id.label(class="form-label fw-medium") }}
                            {{ form.category_id(class="form-select tom-select" + (" is-invalid" if form.category_id.errors else "")) }}
                            {% if form.category_id.errors %}<div class="invalid-feedback">{% for e in form.category_id.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>
                        <div class="mb-3">
                            {{ form.status.label(class="form-label fw-medium") }}
                            {{ form.status(class="form-select" + (" is-invalid" if form.status.errors else "")) }}
                            {% if form.status.errors %}<div class="invalid-feedback">{% for e in form.status.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>
                    </div>
                </div>

                <div class="card shadow-sm mb-4">
                     <div class="card-header">
                        <h5 class="mb-0 font-heading"><i class="bi bi-geo-alt-fill me-2"></i>Location</h5>
                    </div>
                    <div class="card-body">
                        <div class="mb-3">
                            {{ form.lab_id.label(class="form-label fw-medium") }}
                            {{ form.lab_id(class="form-select tom-select" + (" is-invalid" if form.lab_id.errors else "")) }}
                            {% if form.lab_id.errors %}<div class="invalid-feedback">{% for e in form.lab_id.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>
                         <div class="mb-3">
                            {{ form.location_description.label(class="form-label fw-medium") }}
                            {{ form.location_description(class="form-control" + (" is-invalid" if form.location_description.errors else ""), rows="2", placeholder="e.g., Room 101, Storage Closet B") }}
                            {% if form.location_description.errors %}<div class="invalid-feedback">{% for e in form.location_description.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>
                    </div>
                </div>

                {% if asset and asset.added_by_user %}
                <div class="card shadow-sm">
                    <div class="card-header">
                        <h5 class="mb-0 font-heading"><i class="bi bi-person-fill-up me-2"></i>Metadata</h5>
                    </div>
                    <ul class="list-group list-group-flush">
                        <li class="list-group-item">
                            <strong>Added By:</strong> {{ asset.added_by_user.full_name or asset.added_by_user.username }}
                        </li>
                        <li class="list-group-item">
                            <strong>Date Added:</strong> {{ asset.created_at | datetimeformat if asset.created_at else 'N/A' }}
                        </li>
                        {# Add Last Updated if available on model #}
                        {# <li class="list-group-item">
                            <strong>Last Updated:</strong> {{ asset.updated_at | datetimeformat if asset.updated_at else 'N/A' }}
                        </li> #}
                    </ul>
                </div>
                {% endif %}
            </div>
        </div>

        <hr class="my-4">
        <div class="d-flex justify-content-end mb-3">
            <a href="{{ request.referrer or url_for('list_pending_assets') if asset and asset.status == 'Pending Review' else url_for('list_all_assets') }}" class="btn btn-outline-secondary me-2">Cancel</a>
            {{ form.submit(class="btn btn-primary btn-lg px-4", value="Save Asset Changes") }}
        </div>
    </form>
</div>
{% endblock %}

{% block body_scripts %}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // TomSelect for category and lab dropdowns
        const categorySelect = document.getElementById('{{ form.category_id.id }}');
        if (categorySelect) new TomSelect(categorySelect, { create: false, placeholder: 'Select a category...' });

        const labSelect = document.getElementById('{{ form.lab_id.id }}');
        if (labSelect) new TomSelect(labSelect, { create: false, placeholder: 'Select a lab/location...' });

        // Toggle Expiry Date field based on Is Consumable checkbox
        const isConsumableSwitch = document.getElementById('isConsumableSwitch');
        const expiryDateGroup = document.getElementById('expiryDateGroup');

        if (isConsumableSwitch && expiryDateGroup) {
            function toggleExpiryDate() {
                if (isConsumableSwitch.checked) {
                    expiryDateGroup.style.display = 'block';
                } else {
                    expiryDateGroup.style.display = 'none';
                    // Optionally clear the expiry date field when hidden
                    // const expiryDateField = expiryDateGroup.querySelector('input');
                    // if (expiryDateField) expiryDateField.value = '';
                }
            }
            // Initial check
            toggleExpiryDate();
            // Listen for changes
            isConsumableSwitch.addEventListener('change', toggleExpiryDate);
        }
        console.log('Edit Asset page JS loaded.');
    });
</script>
{% endblock %}{% extends "layout/base.html" %}
{# Assuming _form_helpers.html macro exists for render_field_with_label or similar #}
{# If not, render fields manually: form.field.label + form.field(**kwargs) #}

{% block page_title %}Add New Asset{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-box-arrow-in-down me-2 text-primary"></i>Add New Asset
        </h1>
        <a href="{{ request.referrer or url_for('my_assets') }}" class="btn btn-sm btn-outline-secondary">
            <i class="bi bi-arrow-left-circle me-1"></i> Cancel & Go Back
        </a>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    <div class="row justify-content-center">
        <div class="col-lg-9 col-md-11">
            <div class="card shadow-sm">
                <div class="card-header bg-primary-subtle text-primary-emphasis">
                    <h5 class="mb-0 font-heading">Asset Details</h5>
                </div>
                <div class="card-body p-4">
                    {% include 'layout/_flash_messages.html' %}

                    <form method="POST" action="{{ url_for('add_asset') }}" novalidate>
                        {{ form.hidden_tag() if form.hidden_tag }} {# CSRF Token #}

                        <div class="mb-3">
                            {{ form.name.label(class="form-label fw-medium") }}
                            {{ form.name(class="form-control form-control-lg" + (" is-invalid" if form.name.errors else ""), placeholder="e.g., Dell Latitude Laptop, Epson Projector EX3280") }}
                            {% if form.name.errors %}<div class="invalid-feedback">{% for e in form.name.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>

                        <div class="mb-3">
                            {{ form.description.label(class="form-label fw-medium") }}
                            {{ form.description(class="form-control" + (" is-invalid" if form.description.errors else ""), rows="4", placeholder="Detailed description, model number, specifications, purpose...") }}
                            {% if form.description.errors %}<div class="invalid-feedback">{% for e in form.description.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>

                        <div class="row g-3">
                            <div class="col-md-4 mb-3">
                                {{ form.quantity.label(class="form-label fw-medium") }}
                                {{ form.quantity(class="form-control" + (" is-invalid" if form.quantity.errors else ""), type="number", min="1") }}
                                {% if form.quantity.errors %}<div class="invalid-feedback">{% for e in form.quantity.errors %}{{e}}{% endfor %}</div>{% endif %}
                            </div>
                            <div class="col-md-4 mb-3">
                                {{ form.purchase_cost.label(class="form-label fw-medium") }}
                                <div class="input-group">
                                    <span class="input-group-text">$</span> {# Adjust currency symbol if needed #}
                                    {{ form.purchase_cost(class="form-control" + (" is-invalid" if form.purchase_cost.errors else ""), type="number", step="0.01", min="0", placeholder="0.00") }}
                                </div>
                                {% if form.purchase_cost.errors %}<div class="invalid-feedback d-block">{% for e in form.purchase_cost.errors %}{{e}}{% endfor %}</div>{% endif %}
                            </div>
                            <div class="col-md-4 mb-3">
                                {{ form.condition.label(class="form-label fw-medium") }}
                                {{ form.condition(class="form-select" + (" is-invalid" if form.condition.errors else "")) }}
                                {% if form.condition.errors %}<div class="invalid-feedback">{% for e in form.condition.errors %}{{e}}{% endfor %}</div>{% endif %}
                            </div>
                        </div>
                        
                        <div class="form-check form-switch mb-3">
                            {{ form.is_consumable(class="form-check-input" + (" is-invalid" if form.is_consumable.errors else ""), role="switch", id="isConsumableSwitchAdd") }}
                            {{ form.is_consumable.label(class="form-check-label fw-medium", for="isConsumableSwitchAdd") }}
                            {% if form.is_consumable.errors %}<div class="invalid-feedback d-block">{% for e in form.is_consumable.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>

                        <div class="row g-3">
                            <div class="col-md-6 mb-3" id="expiryDateGroupAdd" {% if not form.is_consumable.data %}style="display:none;"{% endif %}>
                                {{ form.expiry_date.label(class="form-label fw-medium") }}
                                {{ form.expiry_date(class="form-control flatpickr-date" + (" is-invalid" if form.expiry_date.errors else ""), placeholder="YYYY-MM-DD") }}
                                {% if form.expiry_date.errors %}<div class="invalid-feedback">{% for e in form.expiry_date.errors %}{{e}}{% endfor %}</div>{% endif %}
                            </div>
                            <div class="col-md-6 mb-3">
                                {{ form.last_maintenance_date.label(class="form-label fw-medium") }}
                                {{ form.last_maintenance_date(class="form-control flatpickr-date" + (" is-invalid" if form.last_maintenance_date.errors else ""), placeholder="YYYY-MM-DD") }}
                                {% if form.last_maintenance_date.errors %}<div class="invalid-feedback">{% for e in form.last_maintenance_date.errors %}{{e}}{% endfor %}</div>{% endif %}
                            </div>
                        </div>

                        <hr class="my-4">
                        <h5 class="font-heading mb-3">Suggested Classification & Location</h5>
                        <p class="text-muted small">These may be overridden by HR/Admin based on school policy if you are not an admin.</p>

                        <div class="row g-3">
                            <div class="col-md-6 mb-3">
                                {{ form.suggested_category_id.label(class="form-label fw-medium") }}
                                {{ form.suggested_category_id(class="form-select tom-select" + (" is-invalid" if form.suggested_category_id.errors else "")) }}
                                {% if form.suggested_category_id.errors %}<div class="invalid-feedback">{% for e in form.suggested_category_id.errors %}{{e}}{% endfor %}</div>{% endif %}
                            </div>
                            <div class="col-md-6 mb-3">
                                {{ form.suggested_lab_id.label(class="form-label fw-medium") }}
                                {{ form.suggested_lab_id(class="form-select tom-select" + (" is-invalid" if form.suggested_lab_id.errors else "")) }}
                                {% if form.suggested_lab_id.errors %}<div class="invalid-feedback">{% for e in form.suggested_lab_id.errors %}{{e}}{% endfor %}</div>{% endif %}
                            </div>
                        </div>

                        <div class="mb-3">
                            {{ form.location_description.label(class="form-label fw-medium") }}
                            {{ form.location_description(class="form-control" + (" is-invalid" if form.location_description.errors else ""), rows="2", placeholder="e.g., Inside cabinet near window, Main hall storage room") }}
                            {% if form.location_description.errors %}<div class="invalid-feedback">{% for e in form.location_description.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>

                        <div class="d-flex justify-content-end mt-4">
                            <a href="{{ request.referrer or url_for('my_assets') }}" class="btn btn-outline-secondary me-2">Cancel</a>
                            {{ form.submit(class="btn btn-primary px-4 btn-lg", value="Submit Asset for Review") }}
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block body_scripts %}
{{ super() }} {# Include scripts from base.html like main.js which has TomSelect/Flatpickr init #}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Specific JS for this page
        const isConsumableSwitch = document.getElementById('isConsumableSwitchAdd');
        const expiryDateGroup = document.getElementById('expiryDateGroupAdd');

        function toggleExpiry() {
            if (isConsumableSwitch && expiryDateGroup) {
                expiryDateGroup.style.display = isConsumableSwitch.checked ? 'block' : 'none';
                 const expiryInput = expiryDateGroup.querySelector('input');
                 if (expiryInput && !isConsumableSwitch.checked) {
                     // expiryInput.value = ''; // Optionally clear if hiding
                 }
            }
        }

        if (isConsumableSwitch) {
            isConsumableSwitch.addEventListener('change', toggleExpiry);
            toggleExpiry(); // Initial call
        }

        // TomSelect is initialized globally by main.js for class 'tom-select'
        // Flatpickr is initialized globally by main.js for class 'flatpickr-date'
    });
</script>
{% endblock %}{% extends "layout/base.html" %}

{% block page_title %}All School Assets{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-boxes me-2 text-primary"></i>School Asset Inventory
        </h1>
        <div class="btn-toolbar mb-2 mb-md-0">
            {% if current_user.role.name in ['hr_ceo', 'system_admin', 'teacher', 'librarian'] or (current_user.role.name == 'student' and current_user.is_leader) or (current_user.role.name == 'talent_club' and current_user.is_tc_leader) %}
            <a href="{{ url_for('add_asset') }}" class="btn btn-sm btn-success">
                <i class="bi bi-plus-circle-fill me-1"></i> Add New Asset
            </a>
            {% endif %}
        </div>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">

    {# Filters Section #}
    <div class="card shadow-sm mb-4">
        <div class="card-body bg-light-subtle">
            <form method="GET" action="{{ url_for('list_all_assets') }}" class="row g-3 align-items-end">
                <div class="col-md-3">
                    <label for="categoryFilter" class="form-label fw-medium text-muted small">Category:</label>
                    <select name="category" id="categoryFilter" class="form-select form-select-sm tom-select-filter">
                        <option value="all" {% if category_filter == 'all' %}selected{% endif %}>All Categories</option>
                        {% for category in all_categories %}
                            <option value="{{ category.name }}" {% if category_filter == category.name %}selected{% endif %}>{{ category.name }}</option>
                        {% endfor %}
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="statusFilter" class="form-label fw-medium text-muted small">Status:</label>
                    <select name="status" id="statusFilter" class="form-select form-select-sm tom-select-filter">
                        <option value="all" {% if status_filter == 'all' %}selected{% endif %}>All Statuses</option>
                        <option value="available_active" {% if status_filter == 'available_active' %}selected{% endif %}>Available/Active Use</option>
                        <option value="Pending Review" {% if status_filter == 'Pending Review' %}selected{% endif %}>Pending Review</option>
                        <option value="Available" {% if status_filter == 'Available' %}selected{% endif %}>Available</option>
                        <option value="CheckedOut" {% if status_filter == 'CheckedOut' %}selected{% endif %}>Checked Out</option>
                        <option value="Under Maintenance" {% if status_filter == 'Under Maintenance' %}selected{% endif %}>Under Maintenance</option>
                        <option value="Needs Repair" {% if status_filter == 'Needs Repair' %}selected{% endif %}>Needs Repair</option>
                        <option value="Lost" {% if status_filter == 'Lost' %}selected{% endif %}>Lost</option>
                        <option value="Retired" {% if status_filter == 'Retired' %}selected{% endif %}>Retired</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="labFilter" class="form-label fw-medium text-muted small">Lab/Location:</label>
                    <select name="lab" id="labFilter" class="form-select form-select-sm tom-select-filter">
                        <option value="all" {% if lab_filter == 'all' %}selected{% endif %}>All Labs/Locations</option>
                        {% for lab in all_labs %}
                            <option value="{{ lab.name }}" {% if lab_filter == lab.name %}selected{% endif %}>{{ lab.name }}</option>
                        {% endfor %}
                    </select>
                </div>
                <div class="col-md-2">
                    <label for="searchFilter" class="form-label fw-medium text-muted small">Search:</label>
                    <input type="text" name="search" id="searchFilter" class="form-control form-control-sm" value="{{ search_query or '' }}" placeholder="Name, desc...">
                </div>
                <div class="col-md-1 d-flex align-items-end">
                    <button type="submit" class="btn btn-primary btn-sm w-100"><i class="bi bi-funnel-fill"></i></button>
                </div>
            </form>
        </div>
    </div>

    {# Asset Listing #}
    {% if paginated_assets and paginated_assets.items %}
        <div class="row row-cols-1 row-cols-sm-2 row-cols-lg-3 row-cols-xl-4 g-4">
            {% for asset in paginated_assets.items %}
                <div class="col"> {# This col is for Bootstrap's grid system #}
                    {% include 'partials/_asset_card.html' %}
                </div>
            {% endfor %}
        </div>

        {# Pagination #}
        {% if paginated_assets.has_prev or paginated_assets.has_next %}
            <nav aria-label="Asset pagination" class="mt-5 d-flex justify-content-center">
                <ul class="pagination shadow-sm">
                    <li class="page-item {{ 'disabled' if not paginated_assets.has_prev else '' }}">
                        <a class="page-link" href="{{ url_for('list_all_assets', page=paginated_assets.prev_num, category=category_filter, status=status_filter, lab=lab_filter, search=search_query) if paginated_assets.has_prev else '#' }}" aria-label="Previous">
                            <span aria-hidden="true">«</span>
                        </a>
                    </li>
                    {% for page_num in paginated_assets.iter_pages(left_edge=1, right_edge=1, left_current=2, right_current=2) %}
                        {% if page_num %}
                            <li class="page-item {{ 'active' if page_num == paginated_assets.page else '' }}">
                                <a class="page-link" href="{{ url_for('list_all_assets', page=page_num, category=category_filter, status=status_filter, lab=lab_filter, search=search_query) }}">{{ page_num }}</a>
                            </li>
                        {% else %}
                            <li class="page-item disabled"><span class="page-link">...</span></li>
                        {% endif %}
                    {% endfor %}
                    <li class="page-item {{ 'disabled' if not paginated_assets.has_next else '' }}">
                        <a class="page-link" href="{{ url_for('list_all_assets', page=paginated_assets.next_num, category=category_filter, status=status_filter, lab=lab_filter, search=search_query) if paginated_assets.has_next else '#' }}" aria-label="Next">
                            <span aria-hidden="true">»</span>
                        </a>
                    </li>
                </ul>
            </nav>
        {% endif %}

    {% else %}
        <div class="card shadow-sm">
            <div class="card-body text-center text-muted p-5 content-placeholder">
                <i class="bi bi-binoculars-fill display-3 mb-3"></i>
                <h4 class="font-heading">No Assets Found</h4>
                <p>There are no assets matching your current filter criteria.</p>
                <a href="{{ url_for('list_all_assets') }}" class="btn btn-outline-primary mt-2"><i class="bi bi-arrow-counterclockwise me-1"></i>Clear Filters</a>
            </div>
        </div>
    {% endif %}
</div>
{% endblock %}

{% block body_scripts %}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Initialize TomSelect for filter dropdowns
        document.querySelectorAll('.tom-select-filter').forEach(el => {
            new TomSelect(el, {
                create: false,
                // allowEmptyOption: true, // If you want the "All..." to be clearable
                // placeholder: 'Select filter...' // If you use allowEmptyOption
            });
        });
        console.log('All Assets page JS loaded.');
    });
</script>
{% endblock %}{% extends "layout/base.html" %}

{% block title %}Report Issue: {{ asset.name }}{% endblock %}

{% block content_header %}
<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2 font-heading">
        <i class="bi bi-exclamation-triangle-fill me-2 text-warning"></i>Report Issue
    </h1>
    {# Link back to the previous page or a sensible default #}
    <a href="{{ request.referrer or url_for('list_all_assets') }}" class="btn btn-sm btn-outline-secondary">
        <i class="bi bi-arrow-left-circle me-1"></i>Back
    </a>
</div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-light-subtle">
                    <h5 class="mb-0 font-heading">Asset Details</h5>
                </div>
                <div class="card-body">
                    <dl class="row mb-0 small">
                        <dt class="col-sm-3">Asset Name:</dt>
                        <dd class="col-sm-9 fw-bold">{{ asset.name }}</dd>
                        
                        <dt class="col-sm-3">Asset ID:</dt>
                        <dd class="col-sm-9">{{ asset.id }}</dd>

                        <dt class="col-sm-3">Category:</dt>
                        <dd class="col-sm-9">{{ asset.category.name if asset.category else 'N/A' }}</dd>

                        <dt class="col-sm-3">Location:</dt>
                        <dd class="col-sm-9">{{ asset.lab.name if asset.lab else (asset.location_description or 'N/A') }}</dd>
                    </dl>
                </div>
            </div>
            
            <div class="card shadow-sm">
                <div class="card-header bg-warning-subtle">
                    <h5 class="mb-0 font-heading text-warning-emphasis">Describe the Issue</h5>
                </div>
                <div class="card-body p-4">
                    {% include 'layout/_flash_messages.html' %}
                    <form method="POST" action="{{ url_for('report_asset_specific', asset_id=asset.id) }}" novalidate>
                        {{ form.hidden_tag() }} {# CSRF Token #}

                        {# FIX: Now correctly renders the `damage_description` field from the form #}
                        <div class="mb-3">
                            {{ form.damage_description.label(class="form-label fw-bold") }}
                            {{ form.damage_description(class="form-control" + (" is-invalid" if form.damage_description.errors else ""), rows="5", placeholder="Please be specific. What happened? Are there error messages? What is the current state of the asset?", required=True) }}
                            {% if form.damage_description.errors %}<div class="invalid-feedback">{{ form.damage_description.errors[0] }}</div>{% endif %}
                        </div>

                        <div class="row g-3">
                            {# FIX: Now correctly renders the `date_of_damage` field #}
                            <div class="col-md-6">
                                {{ form.date_of_damage.label(class="form-label fw-bold") }}
                                {{ form.date_of_damage(class="form-control" + (" is-invalid" if form.date_of_damage.errors else "")) }}
                                <small class="form-text text-muted">Leave blank if unknown.</small>
                                {% if form.date_of_damage.errors %}<div class="invalid-feedback">{{ form.date_of_damage.errors[0] }}</div>{% endif %}
                            </div>

                            {# FIX: Now correctly renders the `quantity_damaged` field #}
                            <div class="col-md-6">
                                {{ form.quantity_damaged.label(class="form-label fw-bold") }}
                                {{ form.quantity_damaged(class="form-control" + (" is-invalid" if form.quantity_damaged.errors else ""), type="number", min="1") }}
                                {% if form.quantity_damaged.errors %}<div class="invalid-feedback">{{ form.quantity_damaged.errors[0] }}</div>{% endif %}
                            </div>
                        </div>

                        <div class="d-flex justify-content-end mt-4">
                            <a href="{{ request.referrer or url_for('list_all_assets') }}" class="btn btn-secondary me-2">Cancel</a>
                            {{ form.submit(class="btn btn-warning") }}
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}{% extends "layout/base.html" %}
{% from 'macros/_ui_components.html' import render_spinner %}

{% block page_title %}Nexus Pulse{% endblock %}

{% block content_header %}
<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2 font-heading">Nexus Pulse</h1>
    <div class="btn-toolbar mb-2 mb-md-0">
        {# Future actions like filtering could go here #}
    </div>
</div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    <div class="row justify-content-center">
        <div class="col-lg-8">

            {# 1. Create Post Component (Now a functional form) #}
            <div class="card shadow-sm mb-4">
                <form id="create-global-post-form" action="{{ url_for('create_global_post') }}" method="POST" enctype="multipart/form-data">
                    <input type="hidden" name="csrf_token" value="{{ get_csrf_token_value() }}">
                    <div class="card-body">
                        <div class="d-flex align-items-start">
                            <img src="{{ url_for('static', filename=(current_user.profile_photo_url or 'img/placeholders/user_avatar_default.png')) }}" class="rounded-circle me-3" width="48" height="48" alt="Your Avatar">
                            <div class="flex-grow-1">
                                <textarea id="global-post-content" name="content" class="form-control" rows="3" placeholder="What's happening, {{ current_user.first_name or current_user.username }}?"></textarea>
                                
                                {# File attachment display area #}
                                <div id="post-file-preview" class="mt-2 d-none">
                                    <div class="alert alert-secondary d-flex justify-content-between align-items-center p-2">
                                        <span>
                                            <i class="bi bi-paperclip me-2"></i>
                                            <span id="post-file-name"></span>
                                        </span>
                                        <button type="button" class="btn-close" aria-label="Remove File" id="remove-post-file-btn"></button>
                                    </div>
                                </div>

                                <div class="d-flex justify-content-between align-items-center mt-2">
                                    <div>
                                        {# This button will trigger the file input modal #}
                                        <button type="button" class="btn btn-sm btn-outline-secondary border-0" data-bs-toggle="tooltip" title="Attach File" id="attach-file-btn">
                                            <i class="bi bi-paperclip"></i>
                                        </button>
                                        {# Add other buttons as needed #}
                                    </div>
                                    <button type="submit" class="btn btn-primary" id="submit-global-post-btn">
                                        <span class="spinner-border spinner-border-sm d-none me-1" role="status" aria-hidden="true"></span>
                                        Post
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>

            {# 2. Feed Container (JavaScript will populate this) #}
            <div id="global-feed-container">
                {# Placeholder Skeleton UI - This is shown while the first API call is in progress #}
                <div id="feed-skeleton-loader">
                    {% for i in range(3) %} {# Show 3 skeleton cards #}
                    <div class="card shadow-sm mb-4">
                        <div class="card-body">
                            <div class="d-flex align-items-center mb-3">
                                <div class="skeleton-avatar rounded-circle me-3"></div>
                                <div class="flex-grow-1">
                                    <div class="skeleton-line skeleton-line-short"></div>
                                    <div class="skeleton-line skeleton-line-very-short mt-1"></div>
                                </div>
                            </div>
                            <div class="skeleton-line"></div>
                            <div class="skeleton-line skeleton-line-long"></div>
                            <div class="skeleton-line skeleton-line-medium"></div>
                        </div>
                    </div>
                    {% endfor %}
                </div>
            </div>

            {# 3. Load More Trigger #}
            <div id="load-more-trigger" class="text-center my-4 d-none">
                 <button class="btn btn-outline-primary" id="load-more-btn">
                    <span class="spinner-border spinner-border-sm d-none me-1" role="status" aria-hidden="true"></span>
                    Load More Posts
                 </button>
            </div>
        </div>
    </div>
</div>

{# Hidden file input for the "Attach File" button #}
<input type="file" id="global-post-file-input" class="d-none">

{% endblock %}

{% block page_styles %}
{# Simple CSS for the skeleton loader effect #}
<style>
    .skeleton-line, .skeleton-avatar {
        background-color: #e9ecef;
        border-radius: .25rem;
        animation: skeleton-loading 1.5s infinite;
    }
    .skeleton-avatar { width: 48px; height: 48px; }
    .skeleton-line { height: 1em; }
    .skeleton-line-long { width: 80%; }
    .skeleton-line-medium { width: 60%; }
    .skeleton-line-short { width: 40%; }
    .skeleton-line-very-short { width: 20%; }
    @keyframes skeleton-loading {
        0% { background-color: #e9ecef; }
        50% { background-color: #ced4da; }
        100% { background-color: #e9ecef; }
    }
</style>
{% endblock %}

{% block body_scripts %}
{# Import the Socket.IO client library #}
<script src="https://cdn.socket.io/4.5.4/socket.io.min.js"></script>

<script type="module">
    // --- CONSTANTS & STATE ---
    const feedContainer = document.getElementById('global-feed-container');
    const skeletonLoader = document.getElementById('feed-skeleton-loader');
    const loadMoreTrigger = document.getElementById('load-more-trigger');
    const loadMoreBtn = document.getElementById('load-more-btn');
    const createPostForm = document.getElementById('create-global-post-form');
    const postContentTextarea = document.getElementById('global-post-content');
    const postFileInput = document.getElementById('global-post-file-input');
    const attachFileBtn = document.getElementById('attach-file-btn');
    const filePreview = document.getElementById('post-file-preview');
    const fileNameSpan = document.getElementById('post-file-name');
    const removeFileBtn = document.getElementById('remove-post-file-btn');

    let currentPage = 1;
    let isLoading = false;
    const currentUserId = {{ current_user.id|tojson }};
    const isAdmin = {{ 'true' if current_user.role and current_user.role.name in ['system_admin', 'hr_ceo'] else 'false' }};

    // --- SOCKET.IO SETUP ---
    const socket = io();
    socket.on('connect', () => console.log('Socket.IO connected to Nexus Pulse.'));

    socket.on('new_comment', (data) => {
        const { post_id, comment_html, new_comment_count } = data;
        const commentSection = document.getElementById(`comments-for-post-${post_id}`);
        if (commentSection) {
            commentSection.insertAdjacentHTML('beforeend', comment_html);
        }
        const commentCountSpan = document.querySelector(`#global-post-${post_id} .comment-count`);
        if (commentCountSpan) {
            commentCountSpan.textContent = new_comment_count;
        }
    });

    socket.on('like_update', (data) => {
        const { post_id, new_like_count } = data;
        const likeCountSpan = document.querySelector(`#global-post-${post_id} .like-count`);
        if (likeCountSpan) {
            likeCountSpan.textContent = new_like_count;
        }
    });

    // --- FUNCTIONS ---
    const escapeHtml = (unsafe) => {
        if (!unsafe) return '';
        return unsafe
             .replace(/&/g, "&")
             .replace(/</g, "<")
             .replace(/>/g, ">")
             .replace(/"/g, """)
             .replace(/'/g, "'");
    };
    
    async function fetchAndRenderPosts(page = 1) {
        if (isLoading) return;
        isLoading = true;
        const spinner = loadMoreBtn.querySelector('.spinner-border');
        if (spinner) spinner.classList.remove('d-none');
        
        try {
            const response = await fetch(`{{ url_for('get_global_posts') }}?page=${page}`);
            if (!response.ok) throw new Error('Failed to fetch posts');
            
            const data = await response.json();
            
            if (page === 1) {
                feedContainer.innerHTML = '';
            }
            
            data.posts.forEach(post => {
                const postHtml = renderPostHtml(post);
                feedContainer.insertAdjacentHTML('beforeend', postHtml);
                socket.emit('join_post_room', { 'post_id': post.id });
            });
            
            if (data.pagination.has_next) {
                loadMoreTrigger.classList.remove('d-none');
                currentPage = data.pagination.page + 1;
            } else {
                loadMoreTrigger.classList.add('d-none');
            }
        } catch (error) {
            console.error('Error fetching posts:', error);
            feedContainer.innerHTML = `<div class="alert alert-danger text-center">Could not load posts. Please try again later.</div>`;
        } finally {
            isLoading = false;
            if (spinner) spinner.classList.add('d-none');
            if (skeletonLoader) skeletonLoader.remove();
        }
    }

    // --- EVENT DELEGATION FOR DYNAMIC CONTENT ---
    feedContainer.addEventListener('click', (e) => {
        const likeButton = e.target.closest('.like-btn');
        const commentButton = e.target.closest('.comment-btn');
        const deleteButton = e.target.closest('.delete-post-btn');
        const editButton = e.target.closest('.edit-post-btn');
        
        if (likeButton) {
            e.preventDefault();
            handleLike(likeButton.dataset.postId, likeButton);
        } else if (commentButton) {
            e.preventDefault();
            toggleCommentSection(commentButton.dataset.postId);
        } else if (deleteButton) {
            e.preventDefault();
            if (confirm('Are you sure you want to delete this post? This cannot be undone.')) {
                handleDelete(deleteButton.dataset.postId);
            }
        } else if (editButton) {
            e.preventDefault();
            handleEdit(editButton.dataset.postId);
        }
    });

    feedContainer.addEventListener('submit', async (e) => {
        if (e.target.classList.contains('comment-form')) {
            e.preventDefault();
            handleCommentSubmit(e.target);
        }
        if (e.target.classList.contains('edit-post-form')) {
            e.preventDefault();
            handleEditSubmit(e.target);
        }
    });

    // --- ACTION HANDLERS ---
    async function handleLike(postId, button) {
        try {
            const response = await fetch(`{{ url_for('toggle_global_post_like', post_id=0) }}`.replace('0', postId), {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' }
            });
            const result = await response.json();
            if (response.ok) {
                const likeCountSpan = button.querySelector('.like-count');
                likeCountSpan.textContent = result.like_count;
                if (result.liked) {
                    button.classList.add('text-primary');
                    button.classList.remove('text-muted');
                } else {
                    button.classList.remove('text-primary');
                    button.classList.add('text-muted');
                }
            } else {
                alert(`Error: ${result.error}`);
            }
        } catch (error) {
            console.error('Like action failed:', error);
        }
    }

    function toggleCommentSection(postId) {
        const commentSection = document.getElementById(`comment-section-post-${postId}`);
        if (commentSection) {
            commentSection.classList.toggle('d-none');
            if (!commentSection.classList.contains('d-none')) {
                loadCommentsForPost(postId);
            }
        }
    }
    
    async function handleDelete(postId) {
        try {
            const response = await fetch(`{{ url_for('delete_global_post', post_id=0) }}`.replace('0', postId), { method: 'DELETE' });
            if(response.ok) {
                const postElement = document.getElementById(`global-post-${postId}`);
                if(postElement) {
                    postElement.style.transition = 'opacity 0.5s';
                    postElement.style.opacity = '0';
                    setTimeout(() => postElement.remove(), 500);
                }
            } else {
                const result = await response.json();
                alert(`Error: ${result.error}`);
            }
        } catch(error) {
            console.error('Delete action failed:', error);
        }
    }
    
    async function loadCommentsForPost(postId) {
        const commentsContainer = document.getElementById(`comments-for-post-${postId}`);
        if (commentsContainer.dataset.loaded === 'true') return;
        commentsContainer.innerHTML = '{{ render_spinner() }}';
        try {
            const response = await fetch(`{{ url_for('get_global_post_comments', post_id=0) }}?per_page=50`.replace('0', postId));
            const data = await response.json();
            commentsContainer.innerHTML = '';
            if (response.ok) {
                data.comments.forEach(comment => {
                    const commentHtml = renderCommentHtml(comment);
                    commentsContainer.insertAdjacentHTML('beforeend', commentHtml);
                });
                commentsContainer.dataset.loaded = 'true';
            } else {
                commentsContainer.innerHTML = '<p class="text-danger small">Could not load comments.</p>';
            }
        } catch (error) {
            console.error('Failed to load comments:', error);
            commentsContainer.innerHTML = '<p class="text-danger small">Could not load comments.</p>';
        }
    }
    
    async function handleCommentSubmit(form) {
        const postId = form.dataset.postId;
        const input = form.querySelector('input[type="text"]');
        const content = input.value.trim();
        if (!content) return;
        try {
            const response = await fetch(`{{ url_for('create_global_comment', post_id=0) }}`.replace('0', postId), {
                method: 'POST',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({ content: content })
            });
            const result = await response.json();
            if (response.ok) {
                const commentsContainer = document.getElementById(`comments-for-post-${postId}`);
                const commentHtml = renderCommentHtml(result.comment);
                commentsContainer.insertAdjacentHTML('beforeend', commentHtml);
                input.value = '';
                const commentCountSpan = document.querySelector(`#global-post-${postId} .comment-count`);
                if(commentCountSpan) commentCountSpan.textContent = result.post_comment_count;
            } else {
                alert(`Error: ${result.error}`);
            }
        } catch (error) {
            console.error('Failed to post comment:', error);
        }
    }

    function handleEdit(postId) {
        const postElement = document.getElementById(`global-post-${postId}`);
        const contentElement = postElement.querySelector('.post-content-area');
        const originalContentParagraph = contentElement.querySelector('p.card-text');
        const originalContent = originalContentParagraph ? originalContentParagraph.innerHTML : '';
        
        const editFormHtml = `
            <form class="edit-post-form" data-post-id="${postId}">
                <textarea class="form-control" name="content" rows="4">${originalContent.replace(/<br\s*[\/]?>/gi, "\n")}</textarea>
                <div class="text-end mt-2">
                    <button type="button" class="btn btn-sm btn-secondary cancel-edit-btn">Cancel</button>
                    <button type="submit" class="btn btn-sm btn-primary">Save Changes</button>
                </div>
            </form>
        `;
        contentElement.dataset.originalContent = contentElement.innerHTML;
        contentElement.innerHTML = editFormHtml;

        contentElement.querySelector('.cancel-edit-btn').addEventListener('click', () => {
            contentElement.innerHTML = contentElement.dataset.originalContent;
        }, { once: true });
    }

    async function handleEditSubmit(form) {
        const postId = form.dataset.postId;
        const textarea = form.querySelector('textarea');
        const content = textarea.value;

        try {
            const response = await fetch(`{{ url_for('update_global_post', post_id=0) }}`.replace('0', postId), {
                method: 'PUT',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({ content: content })
            });
            const result = await response.json();
            if(response.ok) {
                const contentElement = document.querySelector(`#global-post-${postId} .post-content-area`);
                contentElement.innerHTML = `<p class="card-text">${escapeHtml(content).replace(/\n/g, '<br>')}</p>`;
            } else {
                alert(`Error: ${result.error}`);
            }
        } catch (error) {
            console.error('Failed to edit post:', error);
        }
    }

    // --- INITIALIZATION & CREATE POST FORM LISTENERS ---
    document.addEventListener('DOMContentLoaded', () => fetchAndRenderPosts(1));
    loadMoreBtn.addEventListener('click', () => fetchAndRenderPosts(currentPage));
    attachFileBtn.addEventListener('click', () => postFileInput.click());
    postFileInput.addEventListener('change', e => {
        const file = e.target.files[0];
        if (file) {
            fileNameSpan.textContent = file.name;
            filePreview.classList.remove('d-none');
        }
    });
    removeFileBtn.addEventListener('click', () => {
        postFileInput.value = '';
        filePreview.classList.add('d-none');
    });

    createPostForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        const submitBtn = document.getElementById('submit-global-post-btn');
        const spinner = submitBtn.querySelector('.spinner-border');
        
        const content = postContentTextarea.value.trim();
        const file = postFileInput.files[0];

        if (!content && !file) {
            alert("Please write something or attach a file.");
            return;
        }

        const formData = new FormData(createPostForm);
        // The file input is outside the form, so we must append its file manually.
        // We also must check if a file was selected.
        if (file) {
            formData.append('attached_file', file);
        }
        
        submitBtn.disabled = true;
        spinner.classList.remove('d-none');
        try {
            const response = await fetch("{{ url_for('create_global_post') }}", {
                method: 'POST',
                body: formData
                // NO Content-Type header needed for FormData; browser sets it.
            });
            const result = await response.json();
            if (response.ok) {
                const newPostHtml = renderPostHtml(result.post);
                feedContainer.insertAdjacentHTML('afterbegin', newPostHtml);
                socket.emit('join_post_room', { 'post_id': result.post.id });
                createPostForm.reset();
                filePreview.classList.add('d-none');
                postFileInput.value = ''; // Important to clear the file input
            } else {
                alert(`Error: ${result.error || 'Could not create post.'}`);
            }
        } catch (error) {
            console.error('Error creating post:', error);
            alert('A network error occurred. Please try again.');
        } finally {
            submitBtn.disabled = false;
            spinner.classList.add('d-none');
        }
    });

    // --- HTML RENDERER HELPERS ---
    function renderPostHtml(post) {
        const getHumanTime = (isoString) => {
            if (!isoString) return '';
            const date = new Date(isoString);
            const now = new Date();
            const diffSeconds = Math.round((now - date) / 1000);
            if (diffSeconds < 60) return 'just now';
            if (diffSeconds < 3600) return `${Math.round(diffSeconds / 60)} min ago`;
            if (diffSeconds < 86400) return `${Math.round(diffSeconds / 3600)} hr ago`;
            return date.toLocaleDateString();
        };
        
        const authorProfileUrl = post.author.profile_photo_url ? `{{ url_for('static', filename='') }}${post.author.profile_photo_url}` : `{{ url_for('static', filename='img/placeholders/user_avatar_default.png') }}`;
        const contentHtml = post.content ? `<p class="card-text">${escapeHtml(post.content).replace(/\n/g, '<br>')}</p>` : '';
        
        let fileHtml = '';
        if (post.file) {
            if (post.file.mimetype && post.file.mimetype.startsWith('image/')) {
                fileHtml = `<img src="${post.file.download_url}" class="img-fluid rounded mt-2" alt="Post attachment">`;
            } else {
                fileHtml = `<div class="border rounded p-3 mt-2"><i class="bi bi-file-earmark-text fs-4 me-2"></i><a href="${post.file.download_url}" target="_blank">${escapeHtml(post.file.original_filename)}</a></div>`;
            }
        }

        const isAuthor = post.author.id === currentUserId;
        const canDelete = isAuthor || isAdmin;
        const optionsDropdown = (isAuthor || canDelete) ? `
            <div class="dropdown">
                <button class="btn btn-sm btn-light border-0" type="button" data-bs-toggle="dropdown" aria-expanded="false"><i class="bi bi-three-dots"></i></button>
                <ul class="dropdown-menu dropdown-menu-end">
                    ${isAuthor ? `<li><a class="dropdown-item edit-post-btn" href="#" data-post-id="${post.id}">Edit Post</a></li>` : ''}
                    ${canDelete ? `<li><a class="dropdown-item text-danger delete-post-btn" href="#" data-post-id="${post.id}">Delete Post</a></li>` : ''}
                </ul>
            </div>` : '';

        const likedClass = post.current_user_liked ? 'text-primary' : 'text-muted';

        return `
            <div class="card shadow-sm mb-4" id="global-post-${post.id}">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-start">
                        <div class="d-flex align-items-center">
                            <img src="${authorProfileUrl}" class="rounded-circle me-3" width="48" height="48" alt="Avatar">
                            <div><h6 class="mb-0">${escapeHtml(post.author.full_name)}</h6><small class="text-muted">@${escapeHtml(post.author.username)} · ${getHumanTime(post.timestamp)}</small></div>
                        </div>
                        ${optionsDropdown}
                    </div>
                    <div class="mt-3 post-content-area">${contentHtml}${fileHtml}</div>
                </div>
                <div class="card-footer bg-white d-flex justify-content-around py-1">
                    <button class="btn btn-sm ${likedClass} w-100 like-btn" data-post-id="${post.id}"><i class="bi bi-hand-thumbs-up"></i> <span class="like-count">${post.like_count}</span> Like</button>
                    <button class="btn btn-sm text-muted w-100 comment-btn" data-post-id="${post.id}"><i class="bi bi-chat-dots"></i> <span class="comment-count">${post.comment_count}</span> Comment</button>
                    <button class="btn btn-sm text-muted w-100 save-post-btn" data-post-id="${post.id}"><i class="bi bi-bookmark"></i> Save</button>
                </div>
                <div class="card-footer bg-light p-2 d-none" id="comment-section-post-${post.id}">
                     <div class="comments-container mb-2" id="comments-for-post-${post.id}"></div>
                     <form class="comment-form" data-post-id="${post.id}">
                        <div class="input-group"><input type="text" class="form-control form-control-sm" placeholder="Write a comment..."><button class="btn btn-primary btn-sm" type="submit">Send</button></div>
                     </form>
                 </div>
            </div>`;
    }

    function renderCommentHtml(comment) {
        const authorProfileUrl = comment.author.profile_photo_url ? `{{ url_for('static', filename='') }}${comment.author.profile_photo_url}` : `{{ url_for('static', filename='img/placeholders/user_avatar_default.png') }}`;
        const canDelete = comment.author.id === currentUserId || isAdmin;
        const deleteButton = canDelete ? `<button class="btn btn-sm btn-link text-danger p-0 delete-comment-btn" data-comment-id="${comment.id}"><i class="bi bi-trash"></i></button>` : '';

        return `
            <div class="d-flex align-items-start mt-2" id="comment-${comment.id}">
                <img src="${authorProfileUrl}" class="rounded-circle me-2" width="32" height="32" alt="Avatar">
                <div class="flex-grow-1 bg-white p-2 rounded">
                    <div class="d-flex justify-content-between">
                        <strong>${escapeHtml(comment.author.full_name)}</strong>
                        ${deleteButton}
                    </div>
                    <p class="mb-0 small">${escapeHtml(comment.content)}</p>
                </div>
            </div>`;
    }
</script>
{% endblock %}{% extends "layout/base.html" %}

{% block title %}My Added Assets{% endblock %}

{% block content_header %}
<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2 font-heading">
        <i class="bi bi-box-seam-fill me-2 text-primary"></i>My Added Assets
    </h1>
    <div class="btn-toolbar mb-2 mb-md-0">
        <a href="{{ url_for('add_asset') }}" class="btn btn-sm btn-success">
            <i class="bi bi-plus-circle-fill me-1"></i>Add Another Asset
        </a>
    </div>
</div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    {% include 'layout/_flash_messages.html' %}

    <div class="card shadow-sm">
        <div class="card-header bg-light-subtle">
            <h5 class="mb-0 font-heading">Assets You Have Submitted for Review</h5>
        </div>
        <div class="card-body p-0">
            {% if assets %}
                <div class="table-responsive">
                    <table class="table table-hover table-striped mb-0 align-middle">
                        <thead class="table-light">
                            <tr>
                                <th scope="col">Asset Name</th>
                                <th scope="col">Category</th>
                                <th scope="col">Quantity</th>
                                <th scope="col">Condition</th>
                                <th scope="col">Status</th>
                                <th scope="col" class="text-center">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% for asset in assets %}
                            <tr>
                                <td class="fw-bold">{{ asset.name }}</td>
                                <td>{{ asset.category.name if asset.category else 'Pending' }}</td>
                                <td class="text-center">{{ asset.quantity }}</td>
                                <td>{{ asset.condition }}</td>
                                <td>
                                    {# Using a map for cleaner status badges #}
                                    {% set status_map = {
                                        'Available': 'success', 'Pending Review': 'warning',
                                        'CheckedOut': 'info', 'Under Maintenance': 'danger',
                                        'Needs Repair': 'danger', 'Retired': 'dark', 'Lost': 'dark'
                                    } %}
                                    {% set color = status_map.get(asset.status, 'secondary') %}
                                    <span class="badge bg-{{ color }}-subtle text-{{ color }}-emphasis">{{ asset.status }}</span>
                                </td>
                                <td class="text-center">
                                    {# Only HR/Admins can edit, but the user who added it can always report it. #}
                                    <a href="{{ url_for('report_asset_specific', asset_id=asset.id) }}" class="btn btn-sm btn-outline-warning" data-bs-toggle="tooltip" title="Report an issue with this asset">
                                        <i class="bi bi-exclamation-triangle-fill"></i> Report
                                    </a>
                                </td>
                            </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                </div>
            {% else %}
                <div class="text-center p-5 text-muted">
                    <i class="bi bi-journal-x fs-1 mb-3"></i>
                    <h4 class="font-heading">You haven't added any assets yet.</h4>
                    <p>When you add assets to the system, they will appear here for you to track.</p>
                    <a href="{{ url_for('add_asset') }}" class="btn btn-primary mt-2">Add Your First Asset</a>
                </div>
            {% endif %}
        </div>
    </div>
</div>
{% endblock %}{# /templates/_macros.html - A dedicated file for reusable template components #}

{% macro render_stat_card(card_title, card_value, card_icon, card_color_class, card_url=None, card_url_text='View Details', card_id=None) %}
<div class="col">
    <div class="card dashboard-stat-card h-100 shadow-sm" {% if card_id %}id="{{ card_id }}"{% endif %}>
        <div class="card-body d-flex align-items-center">
            <div class="stat-icon display-4 me-3 {{ card_color_class | default('text-primary') }}">
                <i class="bi {{ card_icon | default('bi-bar-chart-line-fill') }}"></i>
            </div>
            <div class="stat-content">
                <h6 class="card-subtitle mb-1 text-muted text-uppercase font-body" style="font-size: 0.8rem;">{{ card_title }}</h6>
                <p class="card-text display-6 fw-bold mb-0 font-heading">{{ card_value }}</p>
            </div>
        </div>
        {% if card_url %}
        <a href="{{ card_url }}" class="card-footer text-decoration-none text-muted bg-light-subtle hover-bg-light">
            <small>{{ card_url_text }} <i class="bi bi-arrow-right-short ms-1"></i></small>
        </a>
        {% endif %}
    </div>
</div>
{% endmacro %}


{% macro render_quick_links(title, links) %}
    {% if links and links | length > 0 %}
    <div class="card shadow-sm dashboard-quick-links-card">
        <div class="card-header">
            <h5 class="mb-0 font-heading"><i class="bi bi-lightning-charge-fill me-2"></i>{{ title }}</h5>
        </div>
        <div class="list-group list-group-flush">
            {% for link in links %}
                <a href="{{ link.url | default('#') }}" class="list-group-item list-group-item-action d-flex align-items-center py-3">
                    <i class="bi {{ link.icon | default('bi-link-45deg') }} fs-5 me-3 {{ link.color_class | default('text-primary') }}" style="min-width: 24px;"></i>
                    <span class="fw-medium">{{ link.text | default('Link') }}</span>
                    <i class="bi bi-chevron-right ms-auto text-muted small"></i>
                </a>
            {% endfor %}
        </div>
    </div>
    {% endif %}
{% endmacro %}


{% macro render_recent_activity(title, activities, view_all_url='#') %}
<div class="card shadow-sm recent-activity-card">
    <div class="card-header">
        <h5 class="mb-0 font-heading"><i class="bi bi-clock-history me-2"></i>{{ title }}</h5>
    </div>
    <div class="card-body" style="max-height: 400px; overflow-y: auto;">
        {% if activities and activities | length > 0 %}
            <ul class="list-unstyled mb-0">
                {% for activity in activities %}
                    <li class="d-flex align-items-start mb-3 pb-3 {% if not loop.last %}border-bottom{% endif %}">
                        <div class="activity-icon me-3">
                            <span class="badge bg-{{ activity.badge_color | default('secondary') }} p-2 rounded-circle">
                                <i class="bi {{ activity.icon | default('bi-terminal') }} fs-5 text-white"></i>
                            </span>
                        </div>
                        <div class="activity-content">
                            <p class="mb-1 text-dark">{{ activity.text | safe }}</p>
                            <small class="text-muted">
                                <i class="bi bi-calendar3 me-1"></i>
                                {{ activity.timestamp | datetimeformat('%b %d, %Y %I:%M %p') if activity.timestamp else 'Just now' }}
                            </small>
                            {% if activity.url %}
                                <a href="{{ activity.url }}" class="ms-2 small text-decoration-none">Details <i class="bi bi-arrow-up-right-square"></i></a>
                            {% endif %}
                        </div>
                    </li>
                {% endfor %}
            </ul>
        {% else %}
            <div class="text-center text-muted p-3">
                <i class="bi bi-hdd-rack fs-1 mb-2"></i>
                <p>No recent activity to display.</p>
            </div>
        {% endif %}
    </div>
    {% if activities and activities | length > 5 %}
    <a href="{{ view_all_url }}" class="card-footer text-center text-decoration-none text-muted bg-light-subtle hover-bg-light">
        <small>View Full Log <i class="bi bi-arrow-right-short ms-1"></i></small>
    </a>
    {% endif %}
</div>
{% endmacro %}{% extends "layout/base.html" %}

{% block page_title %}Server Error (500){% endblock %}

{% block content %}
{% set no_sidebar = True if not current_user or not current_user.is_authenticated else False %} {# Show sidebar if user is logged in #}

<div class="container text-center py-5">
    <div class="row justify-content-center">
        <div class="col-lg-8 col-md-10">
            <i class="bi bi-exclamation-octagon-fill text-danger display-1 mb-4"></i>
            <h1 class="display-4 font-heading text-danger">Internal Server Error</h1>
            <p class="lead text-muted">
                We apologize for the inconvenience. Something went wrong on our end.
            </p>
            <p class="text-muted">
                Our team has been notified and we are working to resolve the issue as soon as possible.
            </p>
            <hr class="my-4">
            <p class="mb-1">
                Please try again later. If the problem persists, you can contact support.
            </p>
            <p class="text-muted small">
                (Error Code: 500 Internal Server Error)
            </p>
            <div class="mt-4">
                 {% if current_user.is_authenticated %}
                    <a href="{{ url_for('role_redirect') }}" class="btn btn-primary btn-lg me-2">
                        <i class="bi bi-house-door-fill me-2"></i>Go to Dashboard
                    </a>
                {% else %}
                     <a href="{{ url_for('home') }}" class="btn btn-primary btn-lg me-2">
                        <i class="bi bi-house-door-fill me-2"></i>Go to Homepage
                    </a>
                {% endif %}
                <a href="javascript:location.reload();" class="btn btn-outline-secondary btn-lg">
                    <i class="bi bi-arrow-clockwise me-2"></i>Try Again
                </a>
            </div>
        </div>
    </div>
</div>
{% endblock %}{% extends "layout/base.html" %}

{% block page_title %}Access Denied (403){% endblock %}

{% block content %}
{% set no_sidebar = True if not current_user or not current_user.is_authenticated else False %} {# Show sidebar if user is logged in #}

<div class="container text-center py-5">
    <div class="row justify-content-center">
        <div class="col-lg-8 col-md-10">
            <i class="bi bi-shield-lock-fill text-danger display-1 mb-4"></i>
            <h1 class="display-4 font-heading text-danger">Access Denied</h1>
            <p class="lead text-muted">
                Oops! It seems you don't have permission to access this page or resource.
            </p>
            <hr class="my-4">
            <p class="mb-1">
                If you believe you should have access, please contact the system administrator or your designated superior.
            </p>
            <p class="text-muted small">
                (Error Code: 403 Forbidden)
            </p>
            <div class="mt-4">
                {% if current_user.is_authenticated %}
                    <a href="{{ url_for('role_redirect') }}" class="btn btn-primary btn-lg me-2">
                        <i class="bi bi-house-door-fill me-2"></i>Go to Dashboard
                    </a>
                {% else %}
                    <a href="{{ url_for('login') }}" class="btn btn-primary btn-lg me-2">
                        <i class="bi bi-box-arrow-in-right me-2"></i>Login
                    </a>
                {% endif %}
                <a href="javascript:history.back()" class="btn btn-outline-secondary btn-lg">
                    <i class="bi bi-arrow-left-circle-fill me-2"></i>Go Back
                </a>
            </div>
        </div>
    </div>
</div>
{% endblock %}{% extends "layout/base.html" %}

{% block page_title %}Page Not Found (404){% endblock %}

{% block content %}
{% set no_sidebar = True if not current_user or not current_user.is_authenticated else False %} {# Show sidebar if user is logged in #}

<div class="container text-center py-5">
    <div class="row justify-content-center">
        <div class="col-lg-8 col-md-10">
            <i class="bi bi-compass-fill text-warning display-1 mb-4"></i>
            <h1 class="display-4 font-heading text-warning">Page Not Found</h1>
            <p class="lead text-muted">
                We're sorry, but the page you were looking for could not be found.
            </p>
            <p class="text-muted">
                It might have been removed, had its name changed, or is temporarily unavailable.
            </p>
            <hr class="my-4">
            <p class="mb-1">
                Please check the URL for any typos, or try navigating from the main dashboard.
            </p>
            <p class="text-muted small">
                (Error Code: 404 Not Found)
            </p>
            <div class="mt-4">
                {% if current_user.is_authenticated %}
                    <a href="{{ url_for('role_redirect') }}" class="btn btn-primary btn-lg me-2">
                        <i class="bi bi-house-door-fill me-2"></i>Go to Dashboard
                    </a>
                {% else %}
                     <a href="{{ url_for('home') }}" class="btn btn-primary btn-lg me-2">
                        <i class="bi bi-house-door-fill me-2"></i>Go to Homepage
                    </a>
                {% endif %}
                <a href="javascript:history.back()" class="btn btn-outline-secondary btn-lg">
                    <i class="bi bi-arrow-left-circle-fill me-2"></i>Go Back
                </a>
            </div>
        </div>
    </div>
</div>
{% endblock %}--- START OF FULL CORRECTED FILE: dashboard.html ---

{% extends "layout/base.html" %}
{# Import the reusable macros from the dedicated file #}
{% from "_macros.html" import render_stat_card, render_quick_links, render_recent_activity with context %}

{% block page_title %}System Administration{% endblock %}

{% block content_header %}
<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="page-title font-heading mb-0">
        <i class="bi bi-hdd-network-fill me-2 text-primary"></i>System Administration
    </h1>
    <div class="btn-toolbar mb-2 mb-md-0">
        <a href="{{ url_for('settings') }}" class="btn btn-sm btn-outline-secondary">
            <i class="bi bi-person-gear me-1"></i> My Settings
        </a>
    </div>
</div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">

    {# Welcome Message #}
    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow-sm welcome-card bg-dark text-white">
                <div class="card-body">
                    <h4 class="card-title font-heading">Administrator Control Panel, {{ current_user.full_name or current_user.username }}!</h4>
                    <p class="mb-0">Manage users, system settings, monitor logs, and ensure the smooth operation of the Nexus platform.</p>
                </div>
            </div>
        </div>
    </div>

    {# Main Stats Cards Row - CORRECTED with trailing commas for valid syntax #}
    <div class="row row-cols-1 row-cols-sm-2 row-cols-lg-3 row-cols-xl-4 g-4 mb-4">
        {{ render_stat_card(
            card_title="Total Active Users",
            card_value=total_active_users | default(0),
            card_icon="bi-people-fill",
            card_color_class="text-primary",
            card_url="#",
        ) }}

        {{ render_stat_card(
            card_title="System Roles",
            card_value=total_roles | default(0),
            card_icon="bi-person-rolodex",
            card_color_class="text-info",
            card_url="#",
        ) }}

        {{ render_stat_card(
            card_title="Database Size",
            card_value=db_size | default("N/A"),
            card_icon="bi-database-fill-gear",
            card_color_class="text-success",
            card_url="#",
        ) }}

        {{ render_stat_card(
            card_title="Recent Log Events",
            card_value=recent_log_count | default(0),
            card_icon="bi-file-earmark-text-fill",
            card_color_class="text-warning",
            card_url="#",
        ) }}
    </div>

    {# Main Content Area with proper Grid Layout #}
    <div class="row g-4">
        
        {# Left Column: Quick Links & System Status #}
        <div class="col-lg-4 col-xl-3">
            {% set admin_quick_links = [
                {'url': "#" , 'text': 'Manage Users', 'icon': 'bi-person-lines-fill', 'color_class': 'text-primary'},
                {'url': "#" , 'text': 'Manage Roles & Permissions', 'icon': 'bi-shield-shaded', 'color_class': 'text-info'},
                {'url': url_for('list_all_assets'), 'text': 'View All Assets', 'icon': 'bi-boxes', 'color_class': 'text-success'},
                {'url': url_for('manage_asset_categories'), 'text': 'Manage Asset Categories', 'icon': 'bi-tags-fill', 'color_class': 'text-secondary'},
                {'url': "#" , 'text': 'System Configuration', 'icon': 'bi-sliders', 'color_class': 'text-warning'},
                {'url': "#" , 'text': 'View System Logs', 'icon': 'bi-journal-text', 'color_class': 'text-danger'},
                {'url': url_for('create_task'), 'text': 'Create System Task', 'icon': 'bi-plus-square-dotted', 'color_class': 'text-primary'}
            ] %}
            {{ render_quick_links("Quick Actions", admin_quick_links) }}
        </div>

        {# Right Column: Main Content / Activity Feed etc. #}
        <div class="col-lg-8 col-xl-9">
            <div class="card shadow-sm">
                <div class="card-body text-center p-5">
                    <p class="text-muted">Main content area for future charts, tables, or detailed reports.</p>
                </div>
            </div>
        </div>

    </div>

</div>
{% endblock %}

{% block body_scripts %}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        console.log('System Admin Dashboard JS loaded.');
    });
</script>
{% endblock %}

--- END OF FULL CORRECTED FILE ---{% extends "layout/base.html" %}

{% block page_title %}Dashboard{% endblock %}

{% block content %}
<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <div class="page-title-container d-flex justify-content-between align-items-center mb-4">
                <h1 class="page-title font-heading mb-0">Welcome, {{ current_user.full_name or current_user.username }}!</h1>
            </div>

            {% include 'layout/_flash_messages.html' %} {# Show any specific flash messages #}

            <div class="card shadow-sm">
                <div class="card-header bg-secondary text-white">
                    <h5 class="mb-0 font-heading"><i class="bi bi-info-circle-fill me-2"></i>Generic Dashboard</h5>
                </div>
                <div class="card-body">
                    <p class="lead">
                        This is a fallback dashboard. Your role-specific dashboard may not be fully configured yet.
                    </p>
                    <p>
                        You can access common features like your settings, notifications, and chat via the navigation menus.
                    </p>
                    <hr>
                    <p class="mb-0">
                        If you believe you should have access to more specific features, please contact the system administrator.
                    </p>
                </div>
            </div>

            <div class="row mt-4">
                <div class="col-md-6 col-lg-4 mb-3">
                    <div class="card dashboard-stat-card h-100">
                        <div class="card-body">
                            <div class="stat-icon text-primary">
                                <i class="bi bi-bell-fill"></i>
                            </div>
                            <div>
                                <div class="stat-value">
                                    {{ unread_notifications_count if unread_notifications_count != "N/A" else 0 }}
                                </div>
                                <div class="stat-label">Unread Notifications</div>
                            </div>
                        </div>
                         <a href="{{ url_for('view_notifications') }}" class="card-footer text-decoration-none text-muted small">
                            View All <i class="bi bi-arrow-right-short"></i>
                        </a>
                    </div>
                </div>
                 <div class="col-md-6 col-lg-4 mb-3">
                    <div class="card dashboard-stat-card h-100">
                        <div class="card-body">
                            <div class="stat-icon text-success">
                                <i class="bi bi-chat-dots-fill"></i>
                            </div>
                            <div>
                                <div class="stat-value">
                                     {{ unread_messages_count if unread_messages_count != "N/A" else 0 }}
                                </div>
                                <div class="stat-label">Unread Messages</div>
                            </div>
                        </div>
                         <a href="{{ url_for('contacts_list') }}" class="card-footer text-decoration-none text-muted small">
                            Go to Chats <i class="bi bi-arrow-right-short"></i>
                        </a>
                    </div>
                </div>
                 <div class="col-md-12 col-lg-4 mb-3">
                    <div class="card dashboard-stat-card h-100">
                        <div class="card-body">
                            <div class="stat-icon text-info">
                                <i class="bi bi-gear-fill"></i>
                            </div>
                            <div>
                                <div class="stat-value" style="font-size: 1.5rem;">Profile & Settings</div>
                                <div class="stat-label">Manage your account</div>
                            </div>
                        </div>
                        <a href="{{ url_for('settings') }}" class="card-footer text-decoration-none text-muted small">
                            Go to Settings <i class="bi bi-arrow-right-short"></i>
                        </a>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>
{% endblock %}{% extends "layout/base.html" %}

{% block page_title %}Checkout Book{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-journal-arrow-up me-2 text-primary"></i>Checkout Book/Asset
        </h1>
        <a href="{{ url_for('librarian_dashboard') if current_user.role.name == 'librarian' else url_for('student_dashboard') }}" class="btn btn-sm btn-outline-secondary">
            <i class="bi bi-arrow-left-circle me-1"></i> Back to Dashboard
        </a>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    <div class="row justify-content-center">
        <div class="col-lg-8 col-md-10">
            <div class="card shadow-sm">
                <div class="card-header bg-primary-subtle text-primary-emphasis">
                    <h5 class="mb-0 font-heading">Book Checkout Form</h5>
                </div>
                <div class="card-body p-4">
                    {% include 'layout/_flash_messages.html' %}

                    <form method="POST" action="{{ url_for('checkout_book') }}" novalidate>
                        {{ form.hidden_tag() if form.hidden_tag }} {# CSRF Token #}

                        <div class="mb-3">
                            {{ form.asset_id.label(class="form-label fw-medium") }}
                            {{ form.asset_id(class="form-select tom-select-book" + (" is-invalid" if form.asset_id.errors else ""), placeholder="Search and select a book...") }}
                            {% if form.asset_id.errors %}
                                <div class="invalid-feedback">
                                    {% for error in form.asset_id.errors %}<span>{{ error }}</span>{% endfor %}
                                </div>
                            {% elif not form.asset_id.choices or (form.asset_id.choices | length == 1 and form.asset_id.choices[0][0] == '') %}
                                <div class="alert alert-warning mt-2" role="alert">
                                  <i class="bi bi-exclamation-triangle-fill me-2"></i> No books are currently available for checkout.
                                </div>
                            {% endif %}
                        </div>

                        {# Conditional User Selection for Librarians #}
                        {% if is_librarian %}
                            <div class="mb-3">
                                {{ form.user_id.label(class="form-label fw-medium") }}
                                {{ form.user_id(class="form-select tom-select-user" + (" is-invalid" if form.user_id.errors else ""), placeholder="Search and select a user...") }}
                                {% if form.user_id.errors %}
                                    <div class="invalid-feedback">
                                        {% for error in form.user_id.errors %}<span>{{ error }}</span>{% endfor %}
                                    </div>
                                {% endif %}
                            </div>
                        {% endif %}

                        <div class="mb-3">
                            {{ form.due_date.label(class="form-label fw-medium") }}
                            {{ form.due_date(class="form-control flatpickr-date" + (" is-invalid" if form.due_date.errors else ""), placeholder="Select due date") }}
                            {% if form.due_date.errors %}
                                <div class="invalid-feedback">
                                    {% for error in form.due_date.errors %}<span>{{ error }}</span>{% endfor %}
                                </div>
                            {% endif %}
                        </div>

                        <hr class="my-4">

                        <div class="d-flex justify-content-end">
                             <a href="{{ url_for('librarian_dashboard') if current_user.role.name == 'librarian' else url_for('student_dashboard') }}" class="btn btn-outline-secondary me-2">Cancel</a>
                            {{ form.submit(class="btn btn-primary px-4", value="Checkout Book") }}
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block body_scripts %}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Initialize TomSelect for Book selection
        const bookSelect = document.getElementById('{{ form.asset_id.id }}');
        if (bookSelect) {
            new TomSelect(bookSelect, {
                create: false,
                placeholder: 'Search or select a book...',
                // Add remote loading options here if book list is very large
                // and backend provides an AJAX search endpoint for books
                // render: {
                //     option: function(data, escape) {
                //         return `<div><span class="title">${escape(data.text)}</span></div>`;
                //     },
                //     item: function(data, escape) {
                //         return `<div>${escape(data.text)}</div>`;
                //     }
                // }
            });
        }

        // Initialize TomSelect for User selection (Librarian only)
        {% if is_librarian %}
        const userSelect = document.getElementById('{{ form.user_id.id }}');
        if (userSelect) {
            new TomSelect(userSelect, {
                create: false,
                placeholder: 'Search or select a user...',
                // Add remote loading options here if user list is very large
                // and backend provides an AJAX search endpoint for users
            });
        }
        {% endif %}

        // Initialize Flatpickr for due date
        // Already handled by global Flatpickr init in main.js for class "flatpickr-date"

        console.log('Checkout Book page JS loaded.');
    });
</script>
{% endblock %}{% extends "layout/base.html" %}

{% block page_title %}Tasks I Assigned{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-card-checklist me-2 text-primary"></i>Tasks I Created & Assigned
        </h1>
        <a href="{{ url_for('create_task') }}" class="btn btn-sm btn-success">
            <i class="bi bi-plus-circle-fill me-1"></i> Create New Task
        </a>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    {% include 'layout/_flash_messages.html' %}

    {# Filters - Placeholder for future (e.g., filter by task status, urgency, due date range) #}
    {# <div class="card shadow-sm mb-3">
        <div class="card-body bg-light-subtle py-2 px-3">
            <small class="text-muted">Filters: (Coming soon)</small>
        </div>
    </div> #}

    <div class="card shadow-sm">
        <div class="card-header">
            <h5 class="mb-0 font-heading">Overview of Tasks You Created</h5>
        </div>
        <div class="card-body p-0">
            {% if my_created_tasks and my_created_tasks | length > 0 %}
                <div class="list-group list-group-flush">
                    {% for task in my_created_tasks %}
                        <div class="list-group-item task-creator-view-item py-3 px-3 mb-2 shadow-sm border rounded">
                            <div class="d-flex w-100 justify-content-between">
                                <h6 class="mb-1 font-heading">
                                    <a href="{{ url_for('view_assigned_task_detail', task_id=task.id) }}" class="text-decoration-none">
                                        <i class="bi bi-journal-text me-1"></i> {{ task.title | truncate(60) }}
                                    </a>
                                </h6>
                                <small class="text-muted">Created: {{ task.created_at | dateformat }}</small>
                            </div>
                            <p class="mb-2 text-muted small">{{ task.description | truncate(100) }}</p>
                            <div class="d-flex justify-content-between align-items-center small">
                                <div>
                                    <span class="me-2" title="Urgency"><strong>Urgency:</strong>
                                        {% if task.urgency == 'Critical' %}<span class="badge bg-danger text-white rounded-pill">{{ task.urgency }}</span>
                                        {% elif task.urgency == 'High' %}<span class="badge bg-warning text-dark rounded-pill">{{ task.urgency }}</span>
                                        {% else %}<span class="badge bg-info text-white rounded-pill">{{ task.urgency }}</span>{% endif %}
                                    </span>
                                    {% if task.due_date %}
                                    <span title="Due Date"><strong>Due:</strong> {{ task.due_date | dateformat }}
                                        {% if task.due_date < now.date() %}<span class="badge bg-danger-subtle text-danger-emphasis ms-1">OVERDUE</span>{% endif %}
                                    </span>
                                    {% endif %}
                                </div>
                                <a href="{{ url_for('view_assigned_task_detail', task_id=task.id) }}" class="btn btn-sm btn-outline-primary">
                                    View Assignments ({{ task.user_assignments.count() if task.user_assignments else 0 }}) <i class="bi bi-arrow-right-short"></i>
                                </a>
                            </div>
                            {# Assignment Status Summary #}
                            {% set counts = task_status_counts.get(task.id, {}) %}
                            {% if counts %}
                            <div class="mt-2 pt-2 border-top border-light-subtle">
                                <small class="text-muted fw-medium">Assignment Statuses:</small>
                                <div class="d-flex flex-wrap gap-2 mt-1">
                                    {% for status, count in counts.items() %}
                                        {% if count > 0 %}
                                        <span class="badge rounded-pill px-2 py-1 fs-08rem
                                            {% if status == 'Open' %} bg-info-subtle text-info-emphasis
                                            {% elif status == 'In Progress' %} bg-primary-subtle text-primary-emphasis
                                            {% elif status.endswith('(Pending Review)') %} bg-warning-subtle text-warning-emphasis
                                            {% elif status == 'Accepted' %} bg-success-subtle text-success-emphasis
                                            {% elif status == 'Review Rejected' %} bg-danger-subtle text-danger-emphasis
                                            {% else %} bg-secondary-subtle text-secondary-emphasis {% endif %}">
                                            {{ status | replace(' (Pending Review)', '') }}: {{ count }}
                                        </span>
                                        {% endif %}
                                    {% endfor %}
                                </div>
                            </div>
                            {% endif %}
                        </div>
                    {% endfor %}
                </div>
            {% else %}
                <div class="text-center text-muted p-5 content-placeholder">
                    <i class="bi bi-journal-plus display-3 mb-3"></i>
                    <h4 class="font-heading">No Tasks Created Yet</h4>
                    <p>You haven't created and assigned any tasks. <a href="{{ url_for('create_task') }}">Create one now!</a></p>
                </div>
            {% endif %}
        </div>
        {# Optional: Pagination #}
    </div>
</div>
{% endblock %}{% extends "layout/base.html" %}

{% set page_title = "Task: " + (task.title if task else "N/A") %}
{% block page_title %}{{ page_title }}{% endblock %}

{% block content_header %}
<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2 font-heading text-truncate">
        <i class="bi bi-clipboard-check-fill me-2 text-primary"></i>{{ page_title }}
    </h1>
    {# Correctly determines back link based on who is viewing #}
    <a href="{{ url_for('my_tasks') if is_assigned_user else url_for('view_assigned_task_detail', task_id=task.id) }}" class="btn btn-sm btn-outline-secondary">
        <i class="bi bi-arrow-left-circle me-1"></i> 
        Back to {{ "My Tasks" if is_assigned_user else "Task Assignments" }}
    </a>
</div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    {% include 'layout/_flash_messages.html' %}

    <div class="row g-4">
        {# Left Column: Task Information & User's Assignment Details #}
        <div class="col-lg-7">
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-light-subtle">
                    <h5 class="mb-0 font-heading">Task Information</h5>
                </div>
                <div class="card-body">
                    <h4 class="font-heading mb-3">{{ task.title }}</h4>
                    <dl class="row small">
                        <dt class="col-sm-3">Created By</dt>
                        <dd class="col-sm-9">{{ task.created_by.full_name or task.created_by.username }}</dd>

                        <dt class="col-sm-3">Urgency</dt>
                        <dd class="col-sm-9">
                            {% if task.urgency == 'Critical' %}<span class="badge bg-danger-subtle text-danger-emphasis">{{ task.urgency }}</span>
                            {% elif task.urgency == 'High' %}<span class="badge bg-warning-subtle text-warning-emphasis">{{ task.urgency }}</span>
                            {% else %}<span class="badge bg-info-subtle text-info-emphasis">{{ task.urgency }}</span>{% endif %}
                        </dd>

                        <dt class="col-sm-3">Due Date</dt>
                        <dd class="col-sm-9">
                            {% if task.due_date %}
                                {{ task.due_date | dateformat('%A, %B %d, %Y') }}
                                {% if task.due_date < now.date() and user_task.status not in ['Accepted', 'Resolved'] %}
                                    <span class="badge bg-danger-subtle text-danger-emphasis ms-2">OVERDUE</span>
                                {% endif %}
                            {% else %} N/A {% endif %}
                        </dd>
                    </dl>
                    <hr>
                    <h6 class="font-heading mt-3">Full Description:</h6>
                    <div class="p-3 bg-light-subtle border rounded" style="white-space: pre-wrap;">
                        {{ task.description }}
                    </div>
                </div>
            </div>

            <div class="card shadow-sm mb-4">
                <div class="card-header bg-light-subtle">
                    <h5 class="mb-0 font-heading">Your Assignment Details (for {{ user_task.user.full_name or user_task.user.username }})</h5>
                </div>
                <div class="card-body">
                    <dl class="row small">
                        <dt class="col-sm-4">Current Status</dt>
                        <dd class="col-sm-8">
                            <span class="badge fs-09rem px-2 py-1 rounded-pill 
                                {% if user_task.status == 'Open' %} bg-info-subtle text-info-emphasis
                                {% elif user_task.status == 'In Progress' %} bg-primary-subtle text-primary-emphasis
                                {% elif user_task.status.endswith('(Pending Review)') %} bg-warning-subtle text-warning-emphasis
                                {% elif user_task.status == 'Accepted' %} bg-success-subtle text-success-emphasis
                                {% elif user_task.status == 'Review Rejected' %} bg-danger-subtle text-danger-emphasis
                                {% else %} bg-secondary-subtle text-secondary-emphasis {% endif %}">
                                {{ user_task.status }}
                            </span>
                        </dd>
                        <dt class="col-sm-4">Assigned On</dt>
                        <dd class="col-sm-8">{{ user_task.assigned_at | datetimeformat('%b %d, %Y at %I:%M %p') }}</dd>
                    </dl>
                    {% if user_task.completion_notes %}
                        <h6 class="font-heading mt-3">Your Notes/Reason for Status:</h6>
                        <blockquote class="blockquote bg-light-subtle border-start border-4 border-secondary-subtle p-3 rounded small">{{ user_task.completion_notes }}</blockquote>
                    {% endif %}
                    {% if user_task.reviewed_by %}
                        <h6 class="font-heading mt-3">Reviewer Information:</h6>
                        <blockquote class="blockquote bg-light-subtle border-start border-4 border-secondary-subtle p-3 rounded small">
                            <strong>Reviewed By:</strong> {{ user_task.reviewed_by.full_name or user_task.reviewed_by.username }} on {{ user_task.reviewed_at | datetimeformat('%b %d, %Y') }}
                            {% if user_task.reviewer_notes %}
                                <hr class="my-2">
                                {{ user_task.reviewer_notes }}
                            {% endif %}
                        </blockquote>
                    {% endif %}
                </div>
            </div>

            {# Action Forms - Conditionally rendered based on context from the backend #}
            {% if can_update_status and update_form %}
            <div class="card shadow-sm mb-4" id="updateStatusFormSection">
                <div class="card-header bg-primary-subtle">
                    <h5 class="mb-0 font-heading text-primary-emphasis"><i class="bi bi-pencil-square me-2"></i>Update Your Task Status</h5>
                </div>
                <div class="card-body p-4">
                    <form method="POST" action="{{ url_for('update_user_task_status', user_task_id=user_task.id) }}" id="updateUserTaskStatusForm" novalidate>
                        {{ update_form.hidden_tag() }}
                        <div class="mb-3">
                            {{ update_form.status.label(class="form-label fw-bold") }}
                            {{ update_form.status(class="form-select" + (" is-invalid" if update_form.status.errors else "")) }}
                            {% if update_form.status.errors %}<div class="invalid-feedback">{{ update_form.status.errors[0] }}</div>{% endif %}
                        </div>
                        <div class="mb-3">
                            {{ update_form.completion_notes.label(text="Notes / Reason for Status (Required for 'Delayed' or 'Cannot Complete'):", class="form-label fw-bold") }}
                            {{ update_form.completion_notes(class="form-control" + (" is-invalid" if update_form.completion_notes.errors else ""), rows="4", placeholder="Provide details if completing, or a reason if you cannot...") }}
                            {% if update_form.completion_notes.errors %}<div class="invalid-feedback">{{ update_form.completion_notes.errors[0] }}</div>{% endif %}
                        </div>
                        <div class="d-grid">
                            {{ update_form.submit(class="btn btn-primary") }}
                        </div>
                    </form>
                </div>
            </div>
            {% endif %}

            {% if can_review_status and review_form %}
            <div class="card shadow-sm mb-4" id="reviewFormSection">
                <div class="card-header bg-warning-subtle">
                    <h5 class="mb-0 font-heading text-warning-emphasis"><i class="bi bi-check2-square me-2"></i>Review Assignee's Submission</h5>
                </div>
                <div class="card-body p-4">
                    <form method="POST" action="{{ url_for('review_user_task', user_task_id=user_task.id) }}" id="reviewUserTaskStatusForm" novalidate>
                        {{ review_form.hidden_tag() }}
                        <div class="alert alert-secondary small">
                           Submission from {{ user_task.user.full_name }}: <strong>{{ user_task.status }}</strong><br>
                           {% if user_task.completion_notes %}Notes: <em>{{ user_task.completion_notes | truncate(150) }}</em>{% endif %}
                        </div>
                        <div class="mb-3">
                            {{ review_form.review_outcome.label(class="form-label fw-bold") }}
                            {{ review_form.review_outcome(class="form-select" + (" is-invalid" if review_form.review_outcome.errors else "")) }}
                            {% if review_form.review_outcome.errors %}<div class="invalid-feedback">{{ review_form.review_outcome.errors[0] }}</div>{% endif %}
                        </div>
                        <div class="mb-3">
                            {{ review_form.reviewer_notes.label(text="Reviewer Notes (Required if rejecting):", class="form-label fw-bold") }}
                            {{ review_form.reviewer_notes(class="form-control" + (" is-invalid" if review_form.reviewer_notes.errors else ""), rows="4", placeholder="Provide feedback or a reason for rejection...") }}
                            {% if review_form.reviewer_notes.errors %}<div class="invalid-feedback">{{ review_form.reviewer_notes.errors[0] }}</div>{% endif %}
                        </div>
                        <div class="d-grid">
                            {{ review_form.submit(class="btn btn-warning") }}
                        </div>
                    </form>
                </div>
            </div>
            {% endif %}
        </div>

        {# Right Column: Task History Log #}
        <div class="col-lg-5">
            <div class="card shadow-sm sticky-lg-top" style="top: 70px;">
                <div class="card-header bg-light-subtle">
                    <h5 class="mb-0 font-heading"><i class="bi bi-list-ol me-2"></i>Assignment History</h5>
                </div>
                <div class="card-body p-0" style="max-height: 80vh; overflow-y: auto;">
                    {% if history_records %}
                        <ul class="list-group list-group-flush">
                            {% for history_item in history_records %}
                                {% include 'partials/_task_history_item.html' %}
                            {% endfor %}
                        </ul>
                    {% else %}
                        <div class="p-4 text-muted text-center"><i class="bi bi-archive fs-2 d-block mb-2"></i>No history recorded yet.</div>
                    {% endif %}
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}{% extends "layout/base.html" %}

{% block page_title %}Create New Task{% endblock %}

{% block content_header %}
<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="page-title font-heading mb-0">
        <i class="bi bi-plus-square-dotted me-2 text-primary"></i>Create New Task
    </h1>
    <a href="{{ url_for('my_assigned_tasks') if current_user.role.name in TASK_CREATOR_ROLES else url_for('my_tasks') }}" class="btn btn-sm btn-outline-secondary">
        <i class="bi bi-arrow-left-circle me-1"></i> Back to Tasks
    </a>
</div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    <div class="row justify-content-center">
        <div class="col-lg-10 col-xl-8">
            <div class="card shadow-sm">
                <div class="card-header bg-primary-subtle text-primary-emphasis">
                    <h5 class="mb-0 font-heading">Task Details & Assignment</h5>
                </div>
                <div class="card-body p-4">
                    {% include 'layout/_flash_messages.html' %}

                    <form method="POST" action="{{ url_for('create_task') }}" id="createTaskForm" novalidate>
                        {{ form.hidden_tag() if form.hidden_tag }} {# CSRF Token #}

                        {# --- Task Information (Unchanged) --- #}
                        <fieldset class="mb-4">
                            <legend class="font-heading fs-5 mb-3 border-bottom pb-2">Task Information</legend>
                            <div class="mb-3">
                                {{ form.title.label(class="form-label fw-medium") }}
                                {{ form.title(class="form-control form-control-lg" + (" is-invalid" if form.title.errors else ""), placeholder="Enter a clear and concise task title") }}
                                {% if form.title.errors %}<div class="invalid-feedback">{% for e in form.title.errors %}{{e}}{% endfor %}</div>{% endif %}
                            </div>
                            <div class="mb-3">
                                {{ form.description.label(class="form-label fw-medium") }}
                                {{ form.description(class="form-control" + (" is-invalid" if form.description.errors else ""), rows="5", placeholder="Provide a detailed description of the task, expected outcomes, and any necessary instructions.") }}
                                {% if form.description.errors %}<div class="invalid-feedback">{% for e in form.description.errors %}{{e}}{% endfor %}</div>{% endif %}
                            </div>
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    {{ form.due_date.label(class="form-label fw-medium") }}
                                    {{ form.due_date(class="form-control flatpickr-date" + (" is-invalid" if form.due_date.errors else ""), placeholder="YYYY-MM-DD (Optional)") }}
                                    {% if form.due_date.errors %}<div class="invalid-feedback">{% for e in form.due_date.errors %}{{e}}{% endfor %}</div>{% endif %}
                                </div>
                                <div class="col-md-6 mb-3">
                                    {{ form.urgency.label(class="form-label fw-medium") }}
                                    {{ form.urgency(class="form-select" + (" is-invalid" if form.urgency.errors else "")) }}
                                    {% if form.urgency.errors %}<div class="invalid-feedback">{% for e in form.urgency.errors %}{{e}}{% endfor %}</div>{% endif %}
                                </div>
                            </div>
                        </fieldset>

                        {# --- MODERN UNIFIED ASSIGNMENT SECTION --- #}
                        <fieldset class="mb-4">
                            <legend class="font-heading fs-5 mb-3 border-bottom pb-2">Assign Task To</legend>
                            <div class="mb-3">
                                <label for="assigneePicker" class="form-label fw-medium">Assignees</label>
                                <select id="assigneePicker" multiple placeholder="Search for users, roles, or classes..."></select>
                                <small class="form-text text-muted">You can assign this task to individual users, entire roles (e.g., all Teachers), or specific classes (e.g., Grade 9, Section A).</small>
                                
                                {# Hidden input to store the structured selection data #}
                                <input type="hidden" name="assignees_data" id="assignees_data">
                            </div>
                        </fieldset>

                        <div class="d-flex justify-content-end mt-4">
                            <a href="{{ url_for('my_assigned_tasks') if current_user.role.name in TASK_CREATOR_ROLES else url_for('my_tasks') }}" class="btn btn-outline-secondary me-2">Cancel</a>
                            {{ form.submit(class="btn btn-primary px-4 btn-lg", value="Create & Assign Task") }}
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block body_scripts %}
<script src="{{ url_for('static', filename='js/tasks.js') }}?v={{ range(1, 100000) | random }}"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Initialize the new, modern assignee picker
        if (typeof initializeModernAssigneePicker === 'function') {
            initializeModernAssigneePicker({
                pickerId: 'assigneePicker',
                hiddenInputId: 'assignees_data',
                searchUrl: "{{ url_for('api_search_assignees') }}" // Use the new API endpoint
            });
        } else {
            console.error('initializeModernAssigneePicker function not found in tasks.js');
        }
    });
</script>
{% endblock %}{% extends "layout/base.html" %}

{% block page_title %}My Assigned Tasks{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-list-check me-2 text-primary"></i>My Assigned Tasks
        </h1>
        {# Optional: Link to create task if user also has creator role #}
        {% if current_user.role.name in TASK_CREATOR_ROLES %}
        <a href="{{ url_for('create_task') }}" class="btn btn-sm btn-success">
            <i class="bi bi-plus-circle-fill me-1"></i> Create New Task
        </a>
        {% endif %}
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    {% include 'layout/_flash_messages.html' %}

    {# Filters - Placeholder for future enhancement (e.g., filter by status, urgency) #}
    {# <div class="card shadow-sm mb-3">
        <div class="card-body bg-light-subtle py-2 px-3">
            <small class="text-muted">Filters: (Coming soon)</small>
        </div>
    </div> #}

    <div class="card shadow-sm">
        <div class="card-header">
            <h5 class="mb-0 font-heading">Tasks Requiring Your Action</h5>
        </div>
        <div class="card-body p-0">
            {% if my_tasks and my_tasks | length > 0 %}
                <div class="list-group list-group-flush">
                    {% for user_task_item in my_tasks %} {# Renamed to avoid conflict with task variable in partial #}
                        {% with user_task=user_task_item, current_user=current_user %}
                            {% include 'partials/_task_list_item.html' %}
                        {% endwith %}
                    {% endfor %}
                </div>
            {% else %}
                <div class="text-center text-muted p-5 content-placeholder">
                    <i class="bi bi-check2-circle display-3 mb-3 text-success"></i>
                    <h4 class="font-heading">No Tasks Assigned!</h4>
                    <p>You currently have no tasks assigned to you that require action.</p>
                </div>
            {% endif %}
        </div>
        {# Optional: Pagination if task list is very long #}
    </div>
</div>
{% endblock %}
{% extends "layout/base.html" %}

{% set page_title = "Assignments for: " + (task.title if task else "N/A") %}
{% block page_title %}{{ page_title }}{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0 text-truncate" style="max-width: 70%;">
            <i class="bi bi-people-fill me-2 text-primary"></i>{{ page_title }}
        </h1>
        <a href="{{ url_for('my_assigned_tasks') }}" class="btn btn-sm btn-outline-secondary">
            <i class="bi bi-arrow-left-circle me-1"></i> Back to My Created Tasks
        </a>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    {% include 'layout/_flash_messages.html' %}

    {# Task Summary Card #}
    <div class="card shadow-sm mb-4">
        <div class="card-header">
            <h5 class="mb-0 font-heading">Task Overview</h5>
        </div>
        <div class="card-body">
             <dl class="row mb-0">
                <dt class="col-sm-3">Title:</dt>
                <dd class="col-sm-9">{{ task.title }}</dd>

                <dt class="col-sm-3">Description:</dt>
                <dd class="col-sm-9" style="white-space: pre-wrap;">{{ task.description }}</dd>

                <dt class="col-sm-3">Urgency:</dt>
                <dd class="col-sm-9">
                     {% if task.urgency == 'Critical' %}<span class="badge bg-danger text-white rounded-pill px-2">{{ task.urgency }}</span>
                     {% elif task.urgency == 'High' %}<span class="badge bg-warning text-dark rounded-pill px-2">{{ task.urgency }}</span>
                     {% else %}<span class="badge bg-info text-white rounded-pill px-2">{{ task.urgency }}</span>
                     {% endif %}
                </dd>

                <dt class="col-sm-3">Due Date:</dt>
                <dd class="col-sm-9">
                    {% if task.due_date %}{{ task.due_date | dateformat }}
                        {% if task.due_date < now.date() %} <span class="badge bg-danger-subtle text-danger-emphasis ms-1">OVERDUE</span>{% endif %}
                    {% else %} N/A {% endif %}
                </dd>
                 <dt class="col-sm-3">Total Assignments:</dt>
                <dd class="col-sm-9">{{ user_assignments | length }}</dd>
            </dl>
        </div>
    </div>

    {# Assignments List Card #}
    <div class="card shadow-sm">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h5 class="mb-0 font-heading">Individual Assignments & Progress</h5>
            {# Optional: Filters for assignment status #}
        </div>
        <div class="card-body p-0">
             {% if user_assignments and user_assignments | length > 0 %}
                <div class="list-group list-group-flush">
                    {% for assignment in user_assignments %}
                        {# Use the _user_task_assignment_item.html partial #}
                        {% include 'partials/_user_task_assignment_item.html' with {'user_assignment': assignment, 'task': task, 'current_user': current_user} %}
                    {% endfor %}
                </div>
            {% else %}
                <div class="text-center text-muted p-5 content-placeholder">
                    <i class="bi bi-person-fill-x display-3 mb-3"></i>
                    <h4 class="font-heading">No Users Assigned</h4>
                    <p>This task has not been assigned to any users yet, or assignments were removed.</p>
                    {# TODO: Add button to "Add/Edit Assignees" for this task #}
                </div>
            {% endif %}
        </div>
         {# Optional: Pagination if many assignees #}
    </div>
</div>
{% endblock %}{# templates/macros/_form_helpers.html #}

{# --- MACRO: render_field ---
   Renders a single form field with a label, input, errors, and help text,
   styled for Bootstrap 5.
   - field: The WTForms field object (e.g., form.username)
   - kwargs: Any additional attributes to add to the input tag (e.g., placeholder, class)
#}
{% macro render_field(field, **kwargs) %}
    <div class="mb-3">
        {{ field.label(class="form-label") }}
        
        {# Add Bootstrap's is-invalid class if errors exist #}
        {% if field.errors %}
            {% set css_class = 'form-control is-invalid ' + kwargs.pop('class', '') %}
            {{ field(class=css_class, **kwargs) }}
            <div class="invalid-feedback">
                {% for error in field.errors %}
                    <span>{{ error }}</span>
                {% endfor %}
            </div>
        {% else %}
            {{ field(class='form-control ' + kwargs.pop('class', ''), **kwargs) }}
        {% endif %}
        
        {% if field.description %}
            <small class="form-text text-muted">{{ field.description }}</small>
        {% endif %}
    </div>
{% endmacro %}


{# --- MACRO: render_submit_button ---
   Renders a submit button with an optional spinner for loading states.
   - field: The WTForms submit field object (e.g., form.submit)
   - btn_class: Custom CSS classes for the button (defaults to 'btn-primary')
#}
{% macro render_submit_button(field, btn_class='btn-primary') %}
    <button type="submit" class="btn {{ btn_class }}">
        <span class="spinner-border spinner-border-sm d-none me-1" role="status" aria-hidden="true"></span>
        {{ field.label.text }}
    </button>
{% endmacro %}
{# This macro renders a single form field with Bootstrap 5 styling #}
{# It handles labels, errors, and passes through HTML attributes like placeholder, rows, etc. #}
{% macro render_field(field, label_visible=true) %}
  <div class="mb-3">
    {% if label_visible %}
      {{ field.label(class="form-label") }}
    {% endif %}

    {# Add 'is-invalid' class if there are errors #}
    {% set field_class = 'form-control' %}
    {% if field.errors %}
      {% set field_class = field_class + ' is-invalid' %}
    {% endif %}

    {# Render the field, passing any extra HTML attributes (like placeholder, rows) from the template call #}
    {{ field(class=field_class, **kwargs) }}

    {# Display validation errors #}
    {% for error in field.errors %}
      <div class="invalid-feedback">
        {{ error }}
      </div>
    {% endfor %}

    {# Display the field's help text/description, if it has one #}
    {% if field.description %}
      <div class="form-text">
        {{ field.description }}
      </div>
    {% endif %}
  </div>
{% endmacro %}{# ================================================================= #}
{# REUSABLE UI COMPONENT MACROS                                      #}
{# ================================================================= #}


{# --- Macro to render a Bootstrap loading spinner --- #}
{#
   Call it like this in your templates:
   {{ render_spinner('Loading data...') }}
#}
{% macro render_spinner(message='Loading...', extra_classes='') %}
<div class="d-flex justify-content-center align-items-center text-center {{ extra_classes }}">
    <div class="spinner-border text-primary" role="status" style="width: 2.5rem; height: 2.5rem;">
        <span class="visually-hidden">{{ message }}</span>
    </div>
    {% if message %}
        <span class="ms-3 h5 mb-0">{{ message }}</span>
    {% endif %}
</div>
{% endmacro %}


{# --- Macro to render a Bootstrap alert --- #}
{#
   Call it like this in your templates:
   {{ render_alert('This is a success message.', 'success', 'bi-check-circle-fill') }}
   {{ render_alert('This is a warning.', 'warning', 'bi-exclamation-triangle-fill') }}
#}
{% macro render_alert(message, category='primary', icon_class='bi-info-circle-fill', is_dismissible=true) %}
<div class="alert alert-{{ category }} {% if is_dismissible %}alert-dismissible fade show{% endif %}" role="alert">
    <i class="bi {{ icon_class }} me-2"></i>
    {{ message|safe }}
    {% if is_dismissible %}
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    {% endif %}
</div>
{% endmacro %}


{# --- Macro to render flash messages --- #}
{#
   Call it in your base layout like this:
   {% with messages = get_flashed_messages(with_categories=true) %}
       {% if messages %}
           <div class="flash-messages-container">
               {{ render_flash_messages(messages) }}
           </div>
       {% endif %}
   {% endwith %}
#}
{% macro render_flash_messages(messages) %}
    {% for category, message in messages %}
        {% set icon = 'bi-info-circle-fill' %}
        {% if category == 'success' %}
            {% set icon = 'bi-check-circle-fill' %}
        {% elif category == 'warning' %}
            {% set icon = 'bi-exclamation-triangle-fill' %}
        {% elif category == 'danger' %}
            {% set icon = 'bi-x-octagon-fill' %}
        {% endif %}
        
        {{ render_alert(message, category, icon, is_dismissible=true) }}
    {% endfor %}
{% endmacro %}{% extends "layout/base.html" %}
{% block title %}Manage: {{ club.name }}{% endblock %}
{% block content %}
<div class="container-fluid mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="h3 mb-0">Club Management Dashboard</h1>
            <p class="text-muted mb-0">You are managing: <strong>{{ club.name }}</strong></p>
        </div>
        <a href="{{ url_for('club_profile', club_id=club.id) }}" class="btn btn-outline-secondary"><i class="bi bi-eye-fill me-1"></i> View Public Profile</a>
    </div>

    <div class="row">
        <!-- Member Management -->
        <div class="col-lg-6 mb-4">
            <div class="card shadow h-100">
                <div class="card-header"><h6 class="m-0 font-weight-bold text-primary">Manage Members</h6></div>
                <div class="card-body">
                    <h5 class="card-title">Pending Join Requests</h5>
                    <div class="list-group mb-3">
                        {% for req in pending_requests %}
                            <div class="list-group-item d-flex justify-content-between">
                                <span>{{ req.sender.first_name }} {{ req.sender.last_name }}</span>
                                <span><!-- Action buttons here --></span>
                            </div>
                        {% else %}
                            <div class="list-group-item text-muted">No pending requests.</div>
                        {% endfor %}
                    </div>
                    <h5 class="card-title">Current Members</h5>
                    <div class="list-group">
                        {% for member in club.memberships %}
                            <div class="list-group-item d-flex justify-content-between">
                                <span>{{ member.user.first_name }} {{ member.user.last_name }}</span>
                                <span>{{ member.role }}</span>
                            </div>
                        {% endfor %}
                    </div>
                </div>
            </div>
        </div>
        <!-- Proposal & Task Management -->
        <div class="col-lg-6 mb-4">
            <div class="card shadow h-100">
                <div class="card-header"><h6 class="m-0 font-weight-bold text-primary">Proposals & Tasks</h6></div>
                <div class="card-body">
                    <!-- Actions to create proposals/tasks -->
                    <a href="#" class="btn btn-primary w-100 mb-3">Create New Task</a>
                    <a href="#" class="btn btn-outline-primary w-100">Create New Proposal</a>
                    <hr>
                    <h5 class="card-title">Pending Proposals</h5>
                     <div class="list-group">
                        {% for prop in pending_proposals %}
                            <div class="list-group-item d-flex justify-content-between">
                                <span>{{ prop.title }}</span>
                                <span><a href="#" class="btn btn-sm btn-secondary">Review</a></span>
                            </div>
                        {% else %}
                             <div class="list-group-item text-muted">No proposals awaiting review.</div>
                        {% endfor %}
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}{% extends "layout/base.html" %}

{# DEFINE MACROS FIRST, AFTER EXTENDS #}
{% macro render_stat_card(card_title, card_value, card_icon, card_color_class, card_url=None, card_url_text='View Details', card_id=None) %}
<div class="col">
    <div class="card dashboard-stat-card h-100 shadow-sm" {% if card_id %}id="{{ card_id }}"{% endif %}>
        <div class="card-body d-flex align-items-center">
            <div class="stat-icon display-4 me-3 {{ card_color_class | default('text-primary') }}">
                <i class="bi {{ card_icon | default('bi-bar-chart-line-fill') }}"></i>
            </div>
            <div class="stat-content">
                <h6 class="card-subtitle mb-1 text-muted text-uppercase font-body" style="font-size: 0.8rem;">{{ card_title }}</h6>
                <p class="card-text display-6 fw-bold mb-0 font-heading">{{ card_value }}</p>
            </div>
        </div>
        {% if card_url %}
        <a href="{{ card_url }}" class="card-footer text-decoration-none text-muted bg-light-subtle hover-bg-light">
            <small>{{ card_url_text }} <i class="bi bi-arrow-right-short ms-1"></i></small>
        </a>
        {% endif %}
    </div>
</div>
{% endmacro %}

{% macro render_quick_links(links) %}
    {% if links and links | length > 0 %}
    <div class="card shadow-sm dashboard-quick-links-card">
        <div class="card-header">
            <h5 class="mb-0 font-heading"><i class="bi bi-lightning-charge-fill me-2"></i>Quick Actions</h5>
        </div>
        <div class="list-group list-group-flush">
            {% for link in links %}
                <a href="{{ link.url | default('#') }}" class="list-group-item list-group-item-action d-flex align-items-center py-3">
                    <i class="bi {{ link.icon | default('bi-link-45deg') }} fs-5 me-3 {{ link.color_class | default('text-primary') }}" style="min-width: 24px;"></i>
                    <span class="fw-medium">{{ link.text | default('Link') }}</span>
                    <i class="bi bi-chevron-right ms-auto text-muted small"></i>
                </a>
            {% endfor %}
        </div>
    </div>
    {% endif %}
{% endmacro %}

{% macro render_recent_activity(activities) %}
<div class="card shadow-sm recent-activity-card">
    <div class="card-header">
        <h5 class="mb-0 font-heading"><i class="bi bi-clock-history me-2"></i>Recent High-Level Activity</h5>
    </div>
    <div class="card-body" style="max-height: 400px; overflow-y: auto;">
        {% if activities and activities | length > 0 %}
            <ul class="list-unstyled">
                {% for activity in activities %}
                    <li class="d-flex align-items-start mb-3 pb-3 border-bottom">
                        <div class="activity-icon me-3">
                            <span class="badge bg-{{ activity.badge_color | default('dark') }} p-2 rounded-circle"> {# Darker default for exec #}
                                <i class="bi {{ activity.icon | default('bi-clipboard-data') }} fs-5 text-white"></i>
                            </span>
                        </div>
                        <div class="activity-content">
                            <p class="mb-1 text-dark">{{ activity.text | safe }}</p>
                            <small class="text-muted">
                                <i class="bi bi-calendar3 me-1"></i>
                                {{ activity.timestamp | datetimeformat('%b %d, %Y %I:%M %p') if activity.timestamp else 'Just now' }}
                            </small>
                            {% if activity.url %}
                                <a href="{{ activity.url }}" class="ms-2 small text-decoration-none">View Details <i class="bi bi-arrow-up-right-square"></i></a>
                            {% endif %}
                        </div>
                    </li>
                {% endfor %}
            </ul>
        {% else %}
            <div class="text-center text-muted p-3">
                <i class="bi bi-archive fs-1 mb-2"></i>
                <p>No recent high-level activity to display.</p>
            </div>
        {% endif %}
    </div>
    {# <a href="#" class="card-footer text-center text-decoration-none text-muted bg-light-subtle hover-bg-light">
        <small>View Full Activity Log <i class="bi bi-arrow-right-short ms-1"></i></small>
    </a> #}
</div>
{% endmacro %}
{# END OF MACRO DEFINITIONS #}


{% block page_title %}School Executive Dashboard{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-building-gear me-2 text-primary"></i>School Executive Dashboard
        </h1>
        <div class="btn-toolbar mb-2 mb-md-0">
            <a href="{{ url_for('school_exec_initiate_request') }}" class="btn btn-sm btn-success me-2">
                 <i class="bi bi-send-plus-fill me-1"></i> Initiate Request (Tier 3)
            </a>
            <a href="{{ url_for('settings') }}" class="btn btn-sm btn-outline-secondary">
                <i class="bi bi-gear-fill me-1"></i> Settings
            </a>
        </div>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">

    {# Welcome Message #}
    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow-sm welcome-card bg-info text-white">
                <div class="card-body">
                    <h4 class="card-title font-heading">Executive Overview, {{ current_user.full_name or current_user.username }}!</h4>
                    <p class="mb-0">Monitor key school metrics, manage high-level requests, and track strategic initiatives.</p>
                </div>
            </div>
        </div>
    </div>

    {# Main Stats Cards Row #}
    <div class="row row-cols-1 row-cols-sm-2 row-cols-lg-3 row-cols-xl-4 g-4 mb-4">
        {{ render_stat_card(
            card_title="Total Students",
            card_value=student_count | default(0),
            card_icon="bi-people-fill",
            card_color_class="text-primary",
            card_url=url_for('student_database_index')
        ) }}

        {# Link to staff directory or teacher management page if exists #}
        {{ render_stat_card(
            card_title="Total Staff (Teachers)",
            card_value=teacher_count | default(0),
            card_icon="bi-person-workspace",
            card_color_class="text-success",
            card_url="#"
        ) }}

        {{ render_stat_card(
            card_title="Total Assets",
            card_value=total_assets | default(0),
            card_icon="bi-archive-fill",
            card_color_class="text-info",
            card_url=url_for('list_all_assets')
        ) }}

        {# Backend to filter for Tier 2+ for this user #}
        {{ render_stat_card(
            card_title="Open High-Tier Requests",
            card_value=requests_inbox_count | default(0),
            card_icon="bi-envelope-exclamation-fill",
            card_color_class="text-warning",
            card_url=url_for('requests_inbox')
        ) }}
    </div>

    <div class="row g-4">
        {# Left Column: Quick Links & Key Reports (Placeholder) #}
        <div class="col-lg-4 col-xl-3">
            {% set exec_quick_links = [
                {'url': url_for('requests_inbox'), 'text': 'Review Assigned Requests', 'icon': 'bi-folder-symlink-fill', 'color_class': 'text-primary'},
                {'url': "#", 'text': 'Budget Overview', 'icon': 'bi-piggy-bank-fill', 'color_class': 'text-success'},
                {'url': "#", 'text': 'Compliance Reports', 'icon': 'bi-file-earmark-check-fill', 'color_class': 'text-info'},
                {'url': "#", 'text': 'Strategic Initiatives', 'icon': 'bi-lightbulb-fill', 'color_class': 'text-warning'}
            ] %}
            {{ render_quick_links(exec_quick_links) }}

            {# Placeholder for Key Performance Indicators (KPIs) #}
            <div class="card shadow-sm mt-4">
                <div class="card-header">
                    <h5 class="mb-0 font-heading"><i class="bi bi-graph-up-arrow me-2"></i>Key Performance Indicators</h5>
                </div>
                <div class="card-body text-center text-muted content-placeholder">
                    <i class="bi bi-clipboard-data-fill fs-1 mb-2"></i>
                    <p>Summary of key school KPIs will be displayed here.</p>
                </div>
            </div>
        </div>

        {# Right Column: Recent High-Level Activity & Analytics (Placeholder) #}
        <div class="col-lg-8 col-xl-9">
            {{ render_recent_activity(recent_executive_activities if recent_executive_activities is defined else []) }}

            <div class="card shadow-sm mt-4">
                <div class="card-header">
                    <h5 class="mb-0 font-heading"><i class="bi bi-bar-chart-steps me-2"></i>School-Wide Analytics Snapshot</h5>
                </div>
                <div class="card-body">
                    {# Placeholder for multiple small charts or a summary #}
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <h6 class="text-center text-muted font-heading">Enrollment Trends</h6>
                            <div class="chart-container" style="height: 200px;" id="enrollmentTrendChartContainer">
                                <canvas id="enrollmentTrendChart"></canvas>
                            </div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <h6 class="text-center text-muted font-heading">Graduation Rates</h6>
                             <div class="chart-container" style="height: 200px;" id="graduationRateChartContainer">
                                <canvas id="graduationRateChart"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %} {# This is the end of the content block #}

{% block body_scripts %}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        console.log('School Executive Dashboard JS (using global analytics) loaded.');
        if (typeof fetchAndDisplayAnalytics === 'function') {
            // Example: Assuming backend routes like /analytics/enrollment_trends and /analytics/graduation_rates
            fetchAndDisplayAnalytics('enrollment_trends', 'Enrollment Trends', 'enrollmentTrendChartContainer', 'line');
            fetchAndDisplayAnalytics('graduation_rates', 'Graduation Rates', 'graduationRateChartContainer', 'bar');
        } else {
            console.error("fetchAndDisplayAnalytics function not found. Ensure utils.js is loaded.");
        }
    });
</script>
{% endblock %}
{# This container is where toast notifications will be dynamically added #}
<div class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 1080">
    {# Toasts will be generated here by JavaScript #}
</div>

{# This script captures flashed messages and generates the toasts #}
{% with messages = get_flashed_messages(with_categories=true) %}
  {% if messages %}
    <script>
      document.addEventListener('DOMContentLoaded', function () {
        const toastContainer = document.querySelector('.toast-container');
        if (!toastContainer) return;

        const categoryToIcon = {
          'success': '<i class="bi bi-check-circle-fill me-2"></i>',
          'danger': '<i class="bi bi-exclamation-triangle-fill me-2"></i>',
          'warning': '<i class="bi bi-exclamation-triangle-fill me-2"></i>',
          'info': '<i class="bi bi-info-circle-fill me-2"></i>'
        };

        const categoryToClass = {
          'success': 'text-bg-success',
          'danger': 'text-bg-danger',
          'warning': 'text-bg-warning',
          'info': 'text-bg-info'
        };

        {% for category, message in messages %}
          (function() {
            const toastEl = document.createElement('div');
            toastEl.classList.add('toast', 'align-items-center', 'border-0');
            toastEl.classList.add(categoryToClass['{{ category }}'] || 'text-bg-secondary');
            toastEl.setAttribute('role', 'alert');
            toastEl.setAttribute('aria-live', 'assertive');
            toastEl.setAttribute('aria-atomic', 'true');

            const iconHtml = categoryToIcon['{{ category }}'] || '';
            const messageText = `{{ message|escape|safe }}`.replace(/\n/g, '<br>');

            toastEl.innerHTML = `
              <div class="d-flex">
                <div class="toast-body">
                  ${iconHtml}
                  ${messageText}
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
              </div>
            `;
            
            toastContainer.appendChild(toastEl);
            const toast = new bootstrap.Toast(toastEl, { delay: 6000 }); // 6-second delay
            toast.show();
            toastEl.addEventListener('hidden.bs.toast', () => toastEl.remove());
          })();
        {% endfor %}
      });
    </script>
  {% endif %}
{% endwith %}<!DOCTYPE html>
<html lang="en" data-bs-theme="light"> {# Default theme, JS can toggle this #}
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    
    {# CSRF Token for secure AJAX requests from JS files #}
    <meta name="csrf-token" content="{{ csrf_token() }}">

    <title>{% block page_title %}Nexus School Management{% endblock %} - Nexus</title>

    <!-- Favicon -->
    <link rel="icon" href="{{ url_for('static', filename='favicon.ico') }}" type="image/x-icon">

    <!-- Stylesheets -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&family=Open+Sans:wght@400;600&display=swap" rel="stylesheet">
    
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    
    <!-- Third-Party Libraries CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <link href="https://cdn.jsdelivr.net/npm/tom-select@2.3.1/dist/css/tom-select.bootstrap5.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <link href="https://unpkg.com/filepond/dist/filepond.min.css" rel="stylesheet">
    <link href="https://unpkg.com/filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.css" rel="stylesheet">

    <!-- Custom App Stylesheet (must be last) -->
    <link rel="stylesheet" href="{{ url_for('static', filename='css/style.css') }}?v={{ range(1, 99999) | random }}">

    {% block head_css %}{% endblock %} {# For page-specific CSS #}
</head>

<body class="nexus-body"> {# nexus-body is the main flex container #}

    {% block navbar_block %}
        {# The navbar sits outside the main content wrapper #}
        {% include 'layout/_navbar.html' %}
    {% endblock navbar_block %}
    
    {# ================================================================= #}
    {# === CORRECTED OFF-CANVAS LAYOUT STRUCTURE ======================= #}
    {# ================================================================= #}

    {# This div will contain the sidebar and the main content area #}
    <div class="d-flex flex-grow-1">

        {# 1. RENDER THE SIDEBAR (if applicable) #}
        {# The sidebar is now a direct child of the flex container. #}
        {# All grid classes like col-md-3, d-md-block have been removed. #}
        {% if current_user.is_authenticated and not no_sidebar %}
            
            {# The <nav> element now only has the ID and nexus-sidebar class, as intended by style.css #}
            {% include 'layout/_sidebar.html' %}
            
            {# 2. ADD THE MISSING BACKDROP FOR MOBILE VIEW #}
            {# This is the crucial overlay that your JS is looking for. #}
            <div class="sidebar-backdrop d-md-none"></div>

        {% endif %}

        {# 3. RENDER THE MAIN CONTENT AREA #}
        {# This is the wrapper for your page content. It will be pushed by the sidebar on desktop. #}
        {# The class 'nexus-main-content' is what your CSS targets to apply margin-left. #}
        <main role="main" class="nexus-main-content">
            {% block content_header %}{% endblock %}
            {% block content %}{% endblock %}
        </main>
        
    </div>

    {# ================================================================= #}
    {# === END OF CORRECTION =========================================== #}
    {# ================================================================= #}

    {% include 'layout/_footer.html' %}

    {# Global modal structure for file previews #}
    <div class="modal fade" id="viewFileModal" tabindex="-1" aria-labelledby="viewFileModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title font-heading" id="viewFileModalLabel">File Preview</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body text-center" id="viewFileModalBody">
                    <div class="spinner-border text-primary" role="status"><span class="visually-hidden">Loading...</span></div>
                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-primary" id="filePreviewModalDownloadBtn" download>
                        <i class="bi bi-download me-2"></i>Download
                    </a>
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- JavaScript Libraries & Application Scripts -->
    <script>
        {% if current_user.is_authenticated %}
            window.currentUserRole = {{ current_user.role.name | tojson if current_user.role else 'null' }};
            window.currentUserAvatarUrl = '{{ url_for('static', filename=(current_user.profile_photo_url or 'img/placeholders/user_avatar_default.png')) }}';
            document.body.dataset.currentUserId = {{ current_user.id | tojson }};
        {% else %}
            window.currentUserRole = null;
            window.currentUserAvatarUrl = '{{ url_for('static', filename='img/placeholders/user_avatar_default.png') }}';
            document.body.dataset.currentUserId = null;
        {% endif %}
    </script>
    
    
    <!-- Core & Third-Party Libraries -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.2/dist/chart.umd.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script src="https://cdn.jsdelivr.net/npm/tom-select@2.3.1/dist/js/tom-select.complete.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>
    <script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>
    <script src="https://cdn.socket.io/4.7.5/socket.io.min.js"></script>

    <!-- FilePond JS Plugins (must come before main FilePond script) -->
    <script src="https://unpkg.com/filepond-plugin-file-validate-type/dist/filepond-plugin-file-validate-type.min.js"></script>
    <script src="https://unpkg.com/filepond-plugin-file-validate-size/dist/filepond-plugin-file-validate-size.min.js"></script>
    <script src="https://unpkg.com/filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.js"></script>
    <script src="https://unpkg.com/filepond/dist/filepond.min.js"></script>
    
    <!-- Application-specific JavaScript (must come last) -->
    <script src="{{ url_for('static', filename='js/utils.js') }}?v={{ range(1, 99999) | random }}"></script>
    <script src="{{ url_for('static', filename='js/socketHandlers.js') }}?v={{ range(1, 99999) | random }}"></script>
    <script src="{{ url_for('static', filename='js/main.js') }}?v={{ range(1, 99999) | random }}"></script>
    
    {% block body_scripts %}{% endblock %} {# For page-specific JS #}

</body>
</html><footer class="footer mt-auto py-3 bg-light border-top">
  <div class="container-fluid">
    <div class="row align-items-center">
      <div class="col-md-6 text-center text-md-start mb-2 mb-md-0">
        <span class="text-muted">
          © {{ current_year }} Nexus - Kechene Debre Selam G.S.S. All rights reserved.
        </span>
      </div>
      <div class="col-md-6 text-center text-md-end">
        <a href="{{ url_for('home') }}" class="text-muted text-decoration-none me-3">Home</a>
        <a href="#" class="text-muted text-decoration-none me-3">Privacy Policy</a>
        <a href="#" class="text-muted text-decoration-none">Terms of Service</a>
      </div>
    </div>
  </div>
</footer>{# templates/layout/_navbar.html - CORRECTED VERSION #}

<nav class="navbar navbar-expand-md navbar-dark fixed-top bg-dark nexus-navbar shadow-sm">
    <div class="container-fluid">
        {# --- Sidebar Toggle - Always Visible --- #}
        {# This button's only job is to toggle the sidebar. Our JS controls it. #}
        {% if current_user.is_authenticated and not no_sidebar %}
        <button class="btn btn-outline-secondary me-2" id="sidebarToggle" type="button" aria-controls="sidebarMenu" aria-expanded="false" aria-label="Toggle sidebar">
            <i class="bi bi-list fs-4"></i>
        </button>
        {% endif %}

        <a class="navbar-brand d-flex align-items-center" href="{{ url_for('home') }}">
            {# Logos for light/dark theme - visibility controlled by CSS #}
            <img src="{{ url_for('static', filename='img/logo_light.png') }}" alt="Nexus Logo" class="navbar-brand-img-light me-2" style="height: 35px;">
            <img src="{{ url_for('static', filename='img/logo_dark.png') }}" alt="Nexus Logo Dark" class="navbar-brand-img-dark me-2" style="height: 35px; display: none;">
            <span class="fw-bold">Nexus</span>
        </a>

        {# --- Main Navbar Collapse Toggle - Mobile Only --- #}
        {# This is the standard Bootstrap button. Its only job is to show/hide the main nav links on mobile. #}
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarMainCollapse" aria-controls="navbarMainCollapse" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse" id="navbarMainCollapse">
            <ul class="navbar-nav ms-auto mb-2 mb-md-0 align-items-center">
                {% if current_user.is_authenticated %}
                    {# Notifications Dropdown #}
                    <li class="nav-item dropdown">
                        <a class="nav-link position-relative" href="#" id="notificationsDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false" title="Notifications">
                            <i class="bi bi-bell-fill fs-5"></i>
                            {% if unread_notifications_count and unread_notifications_count > 0 %}
                                <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                                    {{ unread_notifications_count }}
                                    <span class="visually-hidden">unread notifications</span>
                                </span>
                            {% endif %}
                        </a>
                        <ul class="dropdown-menu dropdown-menu-end dropdown-menu-dark shadow-lg mt-2" aria-labelledby="notificationsDropdown" style="min-width: 300px;">
                            <li><h6 class="dropdown-header">Notifications</h6></li>
                            <li><hr class="dropdown-divider"></li>
                            <li id="notification-items-container">
                                <a class="dropdown-item text-wrap" href="#">
                                    <small class="d-block text-muted">No new notifications</small>
                                </a>
                            </li>
                            <li><hr class="dropdown-divider"></li>
                            <li><a class="dropdown-item text-center" href="{{ url_for('view_notifications') }}">View All Notifications</a></li>
                        </ul>
                    </li>

                    {# Messages Dropdown #}
                     <li class="nav-item dropdown ms-md-2">
                        <a class="nav-link position-relative" href="#" id="messagesDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false" title="Messages">
                            <i class="bi bi-chat-left-text-fill fs-5"></i>
                             {% if unread_messages_count and unread_messages_count > 0 %}
                                <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                                    {{ unread_messages_count }}
                                    <span class="visually-hidden">unread messages</span>
                                </span>
                            {% endif %}
                        </a>
                        <ul class="dropdown-menu dropdown-menu-end dropdown-menu-dark shadow-lg mt-2" aria-labelledby="messagesDropdown" style="min-width: 300px;">
                            <li><h6 class="dropdown-header">Recent Messages</h6></li>
                            <li><hr class="dropdown-divider"></li>
                            <li id="message-items-container">
                                <a class="dropdown-item text-wrap" href="#">
                                    <small class="d-block text-muted">No new messages</small>
                                </a>
                            </li>
                             <li><hr class="dropdown-divider"></li>
                            <li><a class="dropdown-item text-center" href="{{ url_for('contacts_list') }}">View All Chats</a></li>
                        </ul>
                    </li>

                    {# User Profile Dropdown #}
                    <li class="nav-item dropdown ms-md-2">
                        <a class="nav-link dropdown-toggle d-flex align-items-center" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            {% if current_user.profile_photo_url %}
                                <img src="{{ url_for('static', filename=current_user.profile_photo_url) }}" alt="{{ current_user.username }}" class="rounded-circle me-2" style="width: 32px; height: 32px; object-fit: cover;">
                            {% else %}
                                <i class="bi bi-person-circle fs-4 me-2"></i>
                            {% endif %}
                            <span class="d-none d-md-inline">{{ current_user.username }}</span>
                        </a>
                        <ul class="dropdown-menu dropdown-menu-end dropdown-menu-dark shadow-lg mt-2" aria-labelledby="userDropdown">
                            <li><h6 class="dropdown-header">Hi, {{ current_user.full_name or current_user.username }}!</h6></li>
                            <li><p class="dropdown-item-text px-3 mb-0"><small>{{ current_user.role.name.replace('_', ' ') | title if current_user.role else 'No Role' }}</small></p></li>
                            <li><hr class="dropdown-divider"></li>
                            <li><a class="dropdown-item" href="{{ url_for('role_redirect') }}"><i class="bi bi-speedometer2 me-2"></i>Dashboard</a></li>
                            <li><a class="dropdown-item" href="{{ url_for('settings') }}"><i class="bi bi-gear-fill me-2"></i>Settings</a></li>
                            <li><a class="dropdown-item" href="{{ url_for('change_password') }}"><i class="bi bi-shield-lock-fill me-2"></i>Change Password</a></li>
                            <li><hr class="dropdown-divider"></li>
                            <li>
                                <form action="{{ url_for('logout') }}" method="GET" class="d-inline w-100">
                                    <button type="submit" class="dropdown-item"><i class="bi bi-box-arrow-right me-2"></i>Logout</button>
                                </form>
                            </li>
                        </ul>
                    </li>
                {% else %}
                    <li class="nav-item">
                        <a class="nav-link {{ 'active' if request.endpoint == 'login' else '' }}" href="{{ url_for('login') }}">Login</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link {{ 'active' if request.endpoint == 'pre_register' else '' }}" href="{{ url_for('pre_register') }}">Register</a>
                    </li>
                {% endif %}

                 {# Theme Switcher Button #}
                <li class="nav-item ms-md-2">
                    <button class="btn btn-outline-secondary btn-sm" id="themeSwitcher" type="button" title="Toggle theme">
                        <i class="bi bi-moon-stars-fill"></i>
                    </button>
                </li>
            </ul>
        </div>
    </div>
</nav><nav id="sidebarMenu" class="nexus-sidebar">
    <div class="sidebar-sticky pt-3">
        {# Sidebar Close Button for mobile #}
        <button type="button" class="btn-close float-end mb-2 me-2" id="sidebarCloseButton" aria-label="Close sidebar"></button>
        <div style="clear:both;"></div>

        {% if current_user.is_authenticated %}
            {# 1. Profile Info Block #}
            <div class="px-3 mb-3 text-center">
                {% if current_user.profile_photo_url %}
                    <img src="{{ url_for('static', filename=current_user.profile_photo_url) }}" alt="{{ current_user.username }}" class="rounded-circle mb-2" style="width: 80px; height: 80px; object-fit: cover; border: 2px solid var(--nexus-border-color);">
                {% else %}
                    <i class="bi bi-person-circle text-secondary" style="font-size: 80px;"></i>
                {% endif %}
                <h6 class="mb-0 mt-2 font-heading">{{ current_user.full_name or current_user.username }}</h6>
                <small class="text-muted">{{ current_user.role.name.replace('_', ' ') | title if current_user.role else 'N/A' }}</small>
            </div>
            <hr class="mx-3 my-2">

            {# Main Navigation List #}
            <ul class="nav flex-column">

                {# 2. Universal Core Links (for all roles) #}
                <li class="nav-item">
                    {# CORRECTED: Added a check for request.endpoint before calling .endswith() to prevent crashes on error pages. #}
                    <a class="nav-link {{ 'active' if request.endpoint == 'role_redirect' or (request.endpoint and request.endpoint.endswith('_dashboard')) else '' }}" href="{{ url_for('role_redirect') }}">
                        <i class="bi bi-speedometer2"></i>
                        Dashboard
                    </a>
                </li>

                {# 3. Universal Social & Communication Links #}
                <li class="sidebar-heading px-3 mt-4 mb-1 text-muted text-uppercase">
                    <span>Engage & Connect</span>
                </li>
                <li class="nav-item">
                    <a class="nav-link {{ 'active' if request.endpoint == 'social_feed_placeholder' else '' }}" href="{{ url_for('social_feed_placeholder') }}">
                        <i class="bi bi-globe2"></i>
                        Nexus Pulse
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link {{ 'active' if request.endpoint in ['contacts_list', 'contact_results', 'universal_chat'] else '' }}" href="{{ url_for('contacts_list') }}">
                        <i class="bi bi-chat-dots-fill"></i>
                        Chat / Contacts
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link {{ 'active' if request.endpoint in ['view_notifications', 'notification_recipient_groups', 'send_notification_to_group'] else '' }}" href="{{ url_for('view_notifications') }}">
                        <i class="bi bi-bell-fill"></i>
                        Notifications
                        {% if unread_notifications_count and unread_notifications_count > 0 %}
                            <span class="badge bg-danger rounded-pill ms-auto">{{ unread_notifications_count }}</span>
                        {% endif %}
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link {{ 'active' if request.endpoint == 'view_saved_items' else '' }}" href="{{ url_for('view_saved_items') }}">
                        <i class="bi bi-bookmark-star-fill"></i>
                        Saved Items
                    </a>
                </li>

                {# 4. Role-Specific Sections #}

                {# --- STUDENT --- #}
                {% if current_user.role.name == 'student' %}
                    <li class="sidebar-heading px-3 mt-4 mb-1 text-muted text-uppercase">
                        <span>My Academics & Tasks</span>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link {{ 'active' if request.endpoint == 'view_library' else '' }}" href="{{ url_for('view_library') }}">
                            <i class="bi bi-book-half"></i> My Borrowed Books
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link {{ 'active' if request.endpoint == 'view_student_behavior_records' and request.view_args.get('user_id') == current_user.id else '' }}" href="{{ url_for('view_student_behavior_records', user_id=current_user.id) }}">
                            <i class="bi bi-clipboard2-check-fill"></i> My Behavior Records
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link {{ 'active' if request.endpoint == 'my_tasks' else '' }}" href="{{ url_for('my_tasks') }}">
                            <i class="bi bi-list-task"></i> My Tasks
                        </a>
                    </li>

                    <li class="sidebar-heading px-3 mt-4 mb-1 text-muted text-uppercase">
                        <span>Social & Clubs</span>
                    </li>
                    <li class="nav-item">
                        {# CLEANUP: Removed reference to non-existent 'view_my_channel_organization' endpoint #}
                        <a class="nav-link {{ 'active' if request.endpoint and request.endpoint.startswith('social_channel_') else '' }}" href="{{ url_for('social_channel_list') }}">
                            <i class="bi bi-broadcast-pin"></i> Channels
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link {{ 'active' if request.endpoint and request.endpoint.startswith('social_group_') else '' }}" href="{{ url_for('social_group_list') }}">
                            <i class="bi bi-people-fill"></i> Groups
                        </a>
                    </li>
                    {% if current_user.is_tc_member %}
                    <li class="nav-item">
                        <a class="nav-link {{ 'active' if request.endpoint and request.endpoint.startswith('talent_club_') else '' }}" href="{{ url_for('talent_club_dashboard_member_view') }}">
                            <i class="bi bi-trophy-fill"></i> Talent Club
                        </a>
                    </li>
                    {% endif %}
                {% endif %}

                {# --- TEACHER --- #}
                {% if current_user.role.name == 'teacher' %}
                    <li class="sidebar-heading px-3 mt-4 mb-1 text-muted text-uppercase">
                        <span>Teaching Tools</span>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link {{ 'active' if request.endpoint == 'enter_marks' else '' }}" href="{{ url_for('enter_marks') }}">
                            <i class="bi bi-pencil-square"></i> Enter Marks
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link {{ 'active' if request.endpoint == 'mark_attendance' else '' }}" href="{{ url_for('mark_attendance') }}">
                            <i class="bi bi-calendar-check-fill"></i> Mark Attendance
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link {{ 'active' if request.endpoint == 'teacher_lab_equipment' else '' }}" href="{{ url_for('teacher_lab_equipment') }}">
                            <i class="bi bi-binoculars-fill"></i> My Lab Equipment
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link {{ 'active' if request.endpoint in ['student_database_index', 'student_database_block'] else '' }}" href="{{ url_for('student_database_index') }}">
                            <i class="bi bi-person-lines-fill"></i> Student Database
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link {{ 'active' if request.endpoint == 'my_tasks' else '' }}" href="{{ url_for('my_tasks') }}">
                            <i class="bi bi-list-task"></i> My Tasks
                        </a>
                    </li>
                {% endif %}

                {# --- LIBRARIAN --- #}
                {% if current_user.role.name == 'librarian' %}
                    <li class="sidebar-heading px-3 mt-4 mb-1 text-muted text-uppercase">
                        <span>Library Management</span>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link {{ 'active' if request.endpoint == 'checkout_book' else '' }}" href="{{ url_for('checkout_book') }}">
                            <i class="bi bi-journal-arrow-up"></i> Checkout Book
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link {{ 'active' if request.endpoint == 'list_checkouts' else '' }}" href="{{ url_for('list_checkouts') }}">
                            <i class="bi bi-journals"></i> All Checkouts
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link {{ 'active' if request.endpoint == 'librarian_attendance_dashboard' else '' }}" href="{{ url_for('librarian_attendance_dashboard') }}">
                            <i class="bi bi-door-open-fill"></i> Kiosk Dashboard
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link {{ 'active' if request.endpoint == 'my_tasks' else '' }}" href="{{ url_for('my_tasks') }}">
                            <i class="bi bi-list-task"></i> My Tasks
                        </a>
                    </li>
                {% endif %}

                {# --- HR/CEO & SYSTEM ADMIN --- #}
                {% if current_user.role.name in ['hr_ceo', 'system_admin'] %}
                    <li class="sidebar-heading px-3 mt-4 mb-1 text-muted text-uppercase">
                        <span>Management</span>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link {{ 'active' if request.endpoint == 'list_pending_assets' else '' }}" href="{{ url_for('list_pending_assets') }}">
                            <i class="bi bi-box-seam-fill"></i> Pending Assets
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link {{ 'active' if request.endpoint == 'list_all_assets' else '' }}" href="{{ url_for('list_all_assets') }}">
                            <i class="bi bi-boxes"></i> All Assets
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link {{ 'active' if request.endpoint == 'list_asset_reports' else '' }}" href="{{ url_for('list_asset_reports') }}">
                            <i class="bi bi-flag-fill"></i> Asset Reports
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link {{ 'active' if request.endpoint == 'manage_asset_categories' else '' }}" href="{{ url_for('manage_asset_categories') }}">
                            <i class="bi bi-tags-fill"></i> Asset Categories
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link {{ 'active' if request.endpoint == 'student_database_index' else '' }}" href="{{ url_for('student_database_index') }}">
                            <i class="bi bi-person-lines-fill"></i> Student Database
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link {{ 'active' if request.endpoint == 'manage_student_leaders' else '' }}" href="{{ url_for('manage_student_leaders') }}">
                            <i class="bi bi-person-check-fill"></i> Student Leaders
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link {{ 'active' if request.endpoint == 'manage_system_tc_leader' else '' }}" href="{{ url_for('manage_system_tc_leader') }}">
                            <i class="bi bi-trophy-fill"></i> TC Leader Admin
                        </a>
                    </li>
                    
                    <li class="sidebar-heading px-3 mt-4 mb-1 text-muted text-uppercase">
                        <span>Tasks & Requests</span>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link {{ 'active' if request.endpoint == 'create_task' else '' }}" href="{{ url_for('create_task') }}">
                            <i class="bi bi-plus-square-dotted"></i> Create Task
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link {{ 'active' if request.endpoint == 'my_assigned_tasks' else '' }}" href="{{ url_for('my_assigned_tasks') }}">
                            <i class="bi bi-card-list"></i> Assigned Tasks
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link {{ 'active' if request.endpoint == 'requests_inbox' else '' }}" href="{{ url_for('requests_inbox') }}">
                            <i class="bi bi-envelope-paper-fill"></i> Requests Inbox
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link {{ 'active' if request.endpoint == 'hr_ceo_initiate_request' else '' }}" href="{{ url_for('hr_ceo_initiate_request') }}">
                            <i class="bi bi-send-plus-fill"></i> Initiate Request
                        </a>
                    </li>
                {% endif %}

                {# --- SUBMISSION LINKS (for non-admins) --- #}
                {% if current_user.role.name in ['student', 'teacher', 'librarian', 'talent_club'] %}
                    <li class="sidebar-heading px-3 mt-4 mb-1 text-muted text-uppercase">
                        <span>Submissions</span>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link {{ 'active' if request.endpoint == 'add_asset' or request.endpoint == 'my_assets' else '' }}" href="{{ url_for('add_asset') }}">
                            <i class="bi bi-plus-circle-dotted"></i> Add Asset
                        </a>
                    </li>
                     <li class="nav-item">
                        <a class="nav-link {{ 'active' if request.endpoint == 'report_asset_general' else '' }}" href="{{ url_for('report_asset_general') }}">
                            <i class="bi bi-exclamation-triangle-fill"></i> Report General Issue
                        </a>
                    </li>
                    {# CORRECTED: Added 'permissions is defined' to prevent crash on error pages. #}
                    {% if permissions is defined and permissions.can_create_request %}
                    <li class="nav-item">
                        <a class="nav-link {{ 'active' if request.endpoint == 'submit_request' else '' }}" href="{{ url_for('submit_request') }}">
                            <i class="bi bi-file-earmark-plus-fill"></i> Submit Request
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link {{ 'active' if request.endpoint == 'my_requests' else '' }}" href="{{ url_for('my_requests') }}">
                            <i class="bi bi-folder-check"></i> My Requests
                        </a>
                    </li>
                    {% endif %}
                {% endif %}

                {# 5. Global Bottom Links #}
                <li class="nav-item mt-auto mb-2"> {# Pushes to bottom of sidebar #}
                     <hr class="mx-3 my-2">
                    <a class="nav-link {{ 'active' if request.endpoint == 'settings' else '' }}" href="{{ url_for('settings') }}">
                        <i class="bi bi-gear-wide-connected"></i>
                        Settings
                    </a>
                </li>
                <li class="nav-item">
                    <a href="{{ url_for('logout') }}" class="nav-link">
                        <i class="bi bi-box-arrow-left"></i>
                        Logout
                    </a>
                </li>
            </ul>
        {% endif %}
    </div>
</nav>{% extends "layout/base.html" %}

{% set block_title = "Students: Grade " + grade + " - Section " + section %}
{% block page_title %}{{ block_title }}{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-people-fill me-2 text-primary"></i>{{ block_title }}
        </h1>
        <div class="btn-toolbar mb-2 mb-md-0">
            {% if current_user.role.name in ['hr_ceo', 'system_admin'] %}
            <a href="{{ url_for('export_block', grade=grade, section=section) }}" class="btn btn-sm btn-outline-success me-2" title="Export this block to CSV">
                <i class="bi bi-file-earmark-arrow-down-fill me-1"></i> Export CSV
            </a>
            {% endif %}
            <a href="{{ url_for('student_database_index') }}" class="btn btn-sm btn-outline-secondary">
                <i class="bi bi-arrow-left-circle me-1"></i> Back to Index
            </a>
        </div>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    {% include 'layout/_flash_messages.html' %}

    <div class="card shadow-sm">
        <div class="card-header">
            <h5 class="mb-0 font-heading">Student Roster</h5>
            {# Optional: Add student search within this block #}
        </div>
        <div class="card-body p-0">
            {% if students and students | length > 0 %}
                <div class="table-responsive">
                    <table class="table table-hover table-striped mb-0 align-middle student-roster-table">
                        <thead class="table-light">
                            <tr>
                                <th scope="col" style="width: 5%;">Avatar</th>
                                <th scope="col">Full Name</th>
                                <th scope="col">Username</th>
                                <th scope="col">Email</th>
                                <th scope="col" class="text-center">Leader</th>
                                <th scope="col" class="text-center">TC Member</th>
                                <th scope="col" class="text-center">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% for student_user in students %} {# Renamed to avoid conflict with student variable if used inside #}
                            <tr>
                                <td>
                                    {% set student_avatar = url_for('static', filename=(student_user.profile_photo_url if student_user.profile_photo_url else 'img/placeholders/user_avatar_default.png')) %}
                                    <img src="{{ student_avatar }}" alt="{{ student_user.username }}" class="rounded-circle" style="width: 35px; height: 35px; object-fit: cover;">
                                </td>
                                <td class="fw-medium">
                                    {% if current_user.role.name == 'teacher' %}
                                        <a href="{{ url_for('teacher_student_profile_view', user_id=student_user.id) }}" class="text-decoration-none">{{ student_user.full_name or student_user.username }}</a>
                                    {% elif current_user.role.name == 'librarian' %}
                                         <a href="{{ url_for('librarian_student_profile', user_id=student_user.id) }}" class="text-decoration-none">{{ student_user.full_name or student_user.username }}</a>
                                    {% else %} {# HR/CEO/System Admin direct to more detailed behavior log or a general admin profile view #}
                                        <a href="{{ url_for('view_student_behavior_records', user_id=student_user.id) }}" class="text-decoration-none">{{ student_user.full_name or student_user.username }}</a>
                                    {% endif %}
                                </td>
                                <td><small class="text-muted">{{ student_user.username }}</small></td>
                                <td><small class="text-muted">{{ student_user.email or 'N/A' }}</small></td>
                                <td class="text-center">
                                    {% if student_user.is_leader %}
                                        <i class="bi bi-star-fill text-warning" title="Section Leader"></i>
                                    {% else %}
                                        <i class="bi bi-star text-muted" title="Not a leader"></i>
                                    {% endif %}
                                </td>
                                <td class="text-center">
                                     {% if student_user.is_tc_member %}
                                        <i class="bi bi-trophy-fill text-success" title="Talent Club Member"></i>
                                    {% else %}
                                        <i class="bi bi-trophy text-muted" title="Not a TC member"></i>
                                    {% endif %}
                                </td>
                                <td class="text-center">
                                    {# HR/CEO/Admin can view full behavior log, edit student profile (future) #}
                                    <a href="{{ url_for('view_student_behavior_records', user_id=student_user.id) }}" class="btn btn-sm btn-outline-info p-1 me-1" title="View/Manage Behavior Records">
                                        <i class="bi bi-person-exclamation fs-6"></i>
                                    </a>
                                    {% if current_user.role.name in ['hr_ceo', 'system_admin'] %}
                                    <a href="{{ url_for('settings') }}?user_id={{ student_user.id }}" class="btn btn-sm btn-outline-primary p-1" title="Edit Student Profile (Admin)"> {# Needs admin edit user route #}
                                        <i class="bi bi-pencil-square fs-6"></i>
                                    </a>
                                    {% endif %}
                                </td>
                            </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                </div>
            {% else %}
                <div class="text-center text-muted p-5 content-placeholder">
                    <i class="bi bi-person-fill-x display-3 mb-3"></i>
                    <h4 class="font-heading">No Students Found</h4>
                    <p>There are no active students currently listed for Grade {{ grade }}, Section {{ section }}.</p>
                </div>
            {% endif %}
        </div>
    </div>
</div>
{% endblock %}{% extends "layout/base.html" %}

{% block page_title %}Student Database Index{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-person-lines-fill me-2 text-primary"></i>Student Database Index
        </h1>
        <a href="{{ url_for('hr_ceo_dashboard') if current_user.role.name == 'hr_ceo' else url_for('system_admin_dashboard') if current_user.role.name == 'system_admin' else url_for('teacher_dashboard') }}" class="btn btn-sm btn-outline-secondary">
            <i class="bi bi-arrow-left-circle me-1"></i> Back to Dashboard
        </a>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    {% include 'layout/_flash_messages.html' %}

    <p class="lead text-muted mb-4">Browse students by grade and section. Select a block to view student details and manage records.</p>

    {% if ordered_grouped_blocks %}
        {% for grade, sections_in_grade in ordered_grouped_blocks.items() %}
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-primary-subtle text-primary-emphasis">
                    <h4 class="mb-0 font-heading">Grade {{ grade }}</h4>
                </div>
                <div class="list-group list-group-flush">
                    {% if sections_in_grade %}
                        {% for section_info in sections_in_grade %}
                            <a href="{{ url_for('student_database_block', grade=grade, section=section_info.section) }}" class="list-group-item list-group-item-action d-flex justify-content-between align-items-center py-3">
                                <div>
                                    <h5 class="mb-1 font-heading">Section {{ section_info.section }}</h5>
                                    {% if section_info.subjects %}
                                        <small class="text-muted">Subjects: {{ section_info.subjects | join(', ') | truncate(100) }}</small>
                                    {% else %}
                                        <small class="text-muted">No specific subjects listed for teachers in this section.</small>
                                    {% endif %}
                                </div>
                                <i class="bi bi-chevron-right fs-4 text-primary opacity-75"></i>
                            </a>
                        {% endfor %}
                    {% else %}
                        <div class="list-group-item text-muted p-3">No active sections found for Grade {{ grade }}.</div>
                    {% endif %}
                </div>
            </div>
        {% endfor %}
    {% else %}
        <div class="text-center text-muted p-5 content-placeholder">
            <i class="bi bi-folder-x display-3 mb-3"></i>
            <h4 class="font-heading">No Student Data Available</h4>
            <p>There are no active student grade/section blocks to display at this time.</p>
        </div>
    {% endif %}
</div>
{% endblock %}{# templates/partials/_user_task_assignment_item.html - Nexus School Management System #}
{# Gemini 3 Pro Preview - Phase G.3 #}
{#
    Reusable item for displaying a single user's assignment under a task (for creator's view).
    Expects a `user_assignment` object (UserTask instance) and `current_user`.
    - user_assignment.user (User object - the assignee)
    - user_assignment.status
    - user_assignment.completion_notes
    - user_assignment.reviewer_notes
    - user_assignment.last_status_update_at
    - user_assignment.assigned_at
    - user_assignment.task (the parent Task object)
#}

{% set assignee = user_assignment.user %}
{% set task = user_assignment.task %}
{% set assignee_avatar = url_for('static', filename=(assignee.profile_photo_url if assignee and assignee.profile_photo_url else 'img/placeholders/user_avatar_default.png')) %}

<div class="list-group-item user-task-assignment-item py-3 px-3 mb-2 shadow-sm border rounded
    {% if user_assignment.status == 'Open' %} border-info-subtle border-start-info border-start-3
    {% elif user_assignment.status == 'In Progress' %} border-primary-subtle border-start-primary border-start-3
    {% elif user_assignment.status in ['Completed (Pending Review)', 'Delayed (Pending Review)', 'Rejected (Pending Review)'] %} border-warning-subtle border-start-warning border-start-3
    {% elif user_assignment.status == 'Accepted' %} border-success-subtle border-start-success border-start-3
    {% elif user_assignment.status == 'Review Rejected' %} border-danger-subtle border-start-danger border-start-3
    {% else %} border-light-subtle {% endif %}">

    <div class="d-flex w-100 align-items-center mb-2">
        <img src="{{ assignee_avatar }}" alt="{{ assignee.username if assignee else 'N/A' }}" class="rounded-circle me-2 shadow-sm" style="width: 35px; height: 35px; object-fit: cover;">
        <div class="flex-grow-1">
            <h6 class="mb-0 font-heading assignee-name">
                {{ assignee.full_name or assignee.username if assignee else 'Unassigned User' }}
                <small class="text-muted fw-normal">({{ assignee.role.name.replace('_',' ') | title if assignee and assignee.role else 'N/A' }})</small>
            </h6>
            <small class="text-muted">Assigned: {{ user_assignment.assigned_at | dateformat }}</small>
        </div>
        <div class="text-end">
            <span class="badge fs-08rem px-2 py-1 rounded-pill
                {% if user_assignment.status == 'Open' %} bg-info-subtle text-info-emphasis
                {% elif user_assignment.status == 'In Progress' %} bg-primary-subtle text-primary-emphasis
                {% elif user_assignment.status.endswith('(Pending Review)') %} bg-warning-subtle text-warning-emphasis
                {% elif user_assignment.status == 'Accepted' %} bg-success-subtle text-success-emphasis
                {% elif user_assignment.status == 'Review Rejected' %} bg-danger-subtle text-danger-emphasis
                {% else %} bg-secondary-subtle text-secondary-emphasis {% endif %}">
                {{ user_assignment.status | replace(' (Pending Review)', '') }} {# Shorten for display #}
            </span>
            <small class="d-block text-muted mt-1">Last Update: {{ user_assignment.last_status_update_at | humanize_time_diff }}</small>
        </div>
    </div>

    {% if user_assignment.completion_notes %}
        <div class="assignment-notes my-2 p-2 bg-light-subtle border rounded small">
            <strong class="d-block mb-1"><i class="bi bi-chat-left-text-fill me-1"></i>Assignee's Notes:</strong>
            <p class="mb-0 fst-italic" style="white-space: pre-wrap;">{{ user_assignment.completion_notes }}</p>
        </div>
    {% endif %}

    {% if user_assignment.status == 'Review Rejected' and user_assignment.reviewer_notes %}
         <div class="assignment-notes my-2 p-2 bg-danger-subtle border border-danger- GGGGGGGGGGG rounded small">
            <strong class="d-block mb-1 text-danger-emphasis"><i class="bi bi-reply-all-fill me-1"></i>Your Review Notes (Rejected):</strong>
            <p class="mb-0 fst-italic" style="white-space: pre-wrap;">{{ user_assignment.reviewer_notes }}</p>
        </div>
    {% elif user_assignment.status == 'Accepted' and user_assignment.reviewer_notes %}
         <div class="assignment-notes my-2 p-2 bg-success-subtle border border-success- GGGGGGGGGGG rounded small">
            <strong class="d-block mb-1 text-success-emphasis"><i class="bi bi-check2-all me-1"></i>Your Review Notes (Accepted):</strong>
            <p class="mb-0 fst-italic" style="white-space: pre-wrap;">{{ user_assignment.reviewer_notes }}</p>
        </div>
    {% endif %}


    {# Action button for Creator/Admin to Review or View Detail #}
    {% if current_user.id == task.created_by_id or (current_user.role and current_user.role.name in ['system_admin', 'hr_ceo']) %}
        <div class="mt-2 text-end">
            {% if user_assignment.status in ['Completed (Pending Review)', 'Delayed (Pending Review)', 'Rejected (Pending Review)'] %}
                <a href="{{ url_for('view_user_task', user_task_id=user_assignment.id) }}#reviewFormSection" class="btn btn-sm btn-warning"> {# Anchor to review form section #}
                    <i class="bi bi-check-square-fill me-1"></i> Review Submission
                </a>
            {% else %}
                 <a href="{{ url_for('view_user_task', user_task_id=user_assignment.id) }}" class="btn btn-sm btn-outline-secondary">
                    <i class="bi bi-eye-fill me-1"></i> View Details & History
                </a>
            {% endif %}
        </div>
    {% endif %}
</div>{# templates/partials/_task_history_item.html - Nexus School Management System #}
{# Gemini 3 Pro Preview - Phase G.2 #}
{#
    Reusable item for displaying a single task history entry.
    Expects a `history_entry` object (TaskHistory instance) in the context.
    - history_entry.changed_by (User object)
    - history_entry.timestamp
    - history_entry.action
    - history_entry.old_status
    - history_entry.new_status
    - history_entry.notes
#}
<li class="list-group-item task-history-entry py-2 px-3">
    <div class="d-flex w-100 justify-content-between">
        <small class="text-muted history-timestamp" title="{{ history_entry.timestamp | datetimeformat('%Y-%m-%d %H:%M:%S UTC') }}">
            <i class="bi bi-clock-history me-1"></i>{{ history_entry.timestamp | humanize_time_diff }}
        </small>
        <small class="text-muted history-actor">
            by: {{ history_entry.changed_by.full_name or history_entry.changed_by.username if history_entry.changed_by else 'System' }}
        </small>
    </div>
    <p class="mb-1 history-action">
        <strong class="font-heading">{{ history_entry.action }}:</strong>
        {% if history_entry.old_status %}
            Status changed from <span class="badge bg-secondary-subtle text-secondary-emphasis rounded-pill px-1">{{ history_entry.old_status }}</span>
            to <span class="badge bg-primary-subtle text-primary-emphasis rounded-pill px-1">{{ history_entry.new_status }}</span>.
        {% else %}
            Status set to <span class="badge bg-primary-subtle text-primary-emphasis rounded-pill px-1">{{ history_entry.new_status }}</span>.
        {% endif %}
    </p>
    {% if history_entry.notes %}
        <small class="d-block text-muted fst-italic history-notes ps-3 border-start border-2">
            <i class="bi bi-chat-left-quote me-1"></i> {{ history_entry.notes | nl2br | safe }}
        </small>
    {% endif %}
</li>{# templates/partials/_group_card_item.html - Nexus School Management System #}
{#
    Reusable card for displaying a single Social Group.
    Expects a `group` object (SocialGroup instance) and `current_user`.
    Optionally, `is_member` boolean for button states.
#}

{% set group_avatar = url_for('static', filename=(group.profile_photo_url if group.profile_photo_url else 'img/placeholders/group_default_avatar.png')) %}
{% set member_count = group.members.count() if group.members else 0 %} {# Assumes group.members is queryable for count #}

<div class="col"> {# Bootstrap column class applied by parent template #}
    <div class="card social-group-card h-100 shadow-sm">
        <a href="{{ url_for('view_social_group', group_id=group.id) }}" class="text-decoration-none d-block group-card-image-link">
            <div class="group-card-img-placeholder bg-secondary-subtle text-center d-flex align-items-center justify-content-center" style="height: 120px;">
                {% if group.profile_photo_url %}
                    <img src="{{ group_avatar }}" alt="{{ group.name }} Cover" class="img-fluid" style="width: 100%; height: 100%; object-fit: cover;">
                {% else %}
                    <i class="bi bi-people-fill display-3 text-secondary opacity-75"></i>
                {% endif %}
            </div>
        </a>
        <div class="card-body d-flex flex-column">
            <h5 class="card-title font-heading mb-1">
                <a href="{{ url_for('view_social_group', group_id=group.id) }}" class="text-decoration-none stretched-link text-dark">
                    {{ group.name | truncate(40) }}
                </a>
            </h5>
            <small class="text-muted mb-2">
                <i class="bi bi-person-check-fill me-1"></i>{{ member_count }} Member{{ 's' if member_count != 1 else '' }}
            </small>
            <p class="card-text text-muted small mb-2 flex-grow-1">
                {{ group.description | truncate(70) if group.description else 'No description provided.' }}
            </p>
        </div>
        <div class="card-footer bg-light-subtle d-flex justify-content-between align-items-center">
            <small class="text-muted">
                Owner: {{ group.owner.full_name or group.owner.username if group.owner else 'N/A' }}
            </small>
            <div>
                {% if is_member is defined %} {# Check if variable is passed, for use in discover/my_groups context #}
                    {% if is_member %}
                        <a href="{{ url_for('view_social_group', group_id=group.id) }}" class="btn btn-sm btn-outline-primary">View Group</a>
                        {# Leave Group button could be here, handled by JS #}
                        {# <button class="btn btn-sm btn-outline-danger group-action-btn ms-1" data-action="leave" data-group-id="{{ group.id }}">Leave</button> #}
                    {% else %}
                        {# Placeholder for "Join Group" or "Request to Join" if group is public/requestable #}
                        {# <button class="btn btn-sm btn-success group-action-btn" data-action="join" data-group-id="{{ group.id }}">Join</button> #}
                         <a href="{{ url_for('view_social_group', group_id=group.id) }}" class="btn btn-sm btn-outline-secondary">View Details</a>
                    {% endif %}
                {% else %}
                     <a href="{{ url_for('view_social_group', group_id=group.id) }}" class="btn btn-sm btn-outline-primary">View Group</a>
                {% endif %}
            </div>
        </div>
    </div>
</div>{# templates/partials/_chat_message_item.html - Nexus School Management System #}
{# Gemini 3 Pro Preview - Phase D.2 #}
{#
    Reusable item for displaying a single chat message.
    Expects a `message` object (Message instance) and `current_user_id` in the context.
    - message.sender (User object)
    - message.content
    - message.timestamp
#}

{% set is_sender = message.sender_id == current_user_id %}
{% set sender_name = message.sender.full_name or message.sender.username if message.sender else "Unknown User" %}
{% set sender_avatar = url_for('static', filename=(message.sender.profile_photo_url if message.sender and message.sender.profile_photo_url else 'img/placeholders/user_avatar_default.png')) %}

<div class="chat-message-wrapper d-flex mb-3 {% if is_sender %} justify-content-end {% else %} justify-content-start {% endif %}">
    <div class="chat-message d-flex flex-column {% if is_sender %} sent align-items-end {% else %} received align-items-start {% endif %}" style="max-width: 75%;">
        <div class="d-flex align-items-end {% if is_sender %} flex-row-reverse {% endif %}">
            {% if not is_sender %}
            <img src="{{ sender_avatar }}" alt="{{ sender_name }}" class="rounded-circle me-2 shadow-sm" style="width: 30px; height: 30px; object-fit: cover;">
            {% endif %}
            <div class="message-bubble p-2 px-3 shadow-sm">
                <p class="mb-0 message-content">{{ message.content | safe }}</p> {# Use safe if content can contain simple HTML like line breaks #}
            </div>
        </div>
        <small class="message-timestamp text-muted mt-1 {% if is_sender %} me-1 {% else %} ms-1 {% endif %}"
               title="{{ message.timestamp | datetimeformat('%Y-%m-%d %H:%M:%S UTC') }}">
            {% if not is_sender %}
                <span class="fw-medium">{{ sender_name.split(' ')[0] }}</span> •
            {% endif %}
            {{ message.timestamp | humanize_time_diff }}
        </small>
    </div>
</div>{# templates/partials/_asset_card.html - Nexus School Management System #}
{#
    Reusable card for displaying a single asset.
    Expects an `asset` object and `current_user` in the context.
    The parent template should wrap this in Bootstrap column classes (e.g., col-md-4, col-lg-3).
#}

{# Define a mapping for status badge classes and icons to clean up the template #}
{% set status_map = {
    'Available': ('success', 'bi-check-circle-fill'),
    'Pending Review': ('warning', 'bi-hourglass-split'),
    'CheckedOut': ('info', 'bi-arrow-up-right-circle-fill'),
    'Under Maintenance': ('danger', 'bi-tools'),
    'Needs Repair': ('danger', 'bi-tools'),
    'Retired': ('dark', 'bi-slash-circle-fill'),
    'Lost': ('dark', 'bi-slash-circle-fill')
} %}
{% set status_info = status_map.get(asset.status, ('secondary', 'bi-question-circle-fill')) %}
{% set status_color = status_info[0] %}
{% set status_icon = status_info[1] %}
{% set can_edit = current_user.role.name in ['hr_ceo', 'system_admin'] %}

<div class="card asset-card h-100 shadow-sm">
    <div class="asset-card-img-placeholder bg-light-subtle text-center py-4 border-bottom">
        <i class="bi {{ asset.category.icon_class or 'bi-box-seam' }} display-4 text-muted"></i>
    </div>

    <div class="card-body d-flex flex-column">
        <h5 class="card-title font-heading mb-1">
            {% if can_edit %}
                <a href="{{ url_for('edit_asset', asset_id=asset.id) }}" class="text-decoration-none stretched-link text-body" title="Edit {{ asset.name }}">
                    {{ asset.name | truncate(50) }}
                </a>
            {% else %}
                <span class="text-body">{{ asset.name | truncate(50) }}</span>
            {% endif %}
        </h5>
        <small class="text-muted mb-2">ID: {{ asset.id }} | Qty: {{ asset.quantity }}</small>

        <p class="card-text text-muted small mb-3 flex-grow-1">
            {{ asset.description | truncate(80) or 'No description available.' }}
        </p>

        <div class="d-flex flex-wrap gap-1 mt-auto">
            <span class="badge bg-{{ status_color }}-subtle text-{{ status_color }}-emphasis fw-normal">
                <i class="bi {{ status_icon }} me-1"></i>
                {% if asset.status == 'CheckedOut' %}Checked Out{% else %}{{ asset.status or 'Unknown' }}{% endif %}
            </span>
            <span class="badge bg-secondary-subtle text-secondary-emphasis fw-normal">
                <i class="bi bi-tag-fill me-1"></i>{{ asset.category.name or 'Uncategorized' }}
            </span>
        </div>
    </div>

    <div class="card-footer bg-light-subtle d-flex justify-content-between align-items-center py-2">
        <small class="text-muted text-truncate" title="Location">
            <i class="bi bi-geo-alt-fill me-1"></i>
            {{ (asset.lab.name or asset.location_description or 'N/A') | truncate(20) }}
        </small>
        <div class="asset-actions">
            {% if can_edit %}
                <a href="{{ url_for('edit_asset', asset_id=asset.id) }}" class="btn btn-sm btn-outline-primary p-1" title="Edit Asset">
                    <i class="bi bi-pencil-square fs-6"></i>
                </a>
            {% endif %}
            {# All permitted roles should be able to report an asset from here #}
            {% if current_user.has_permission('REPORT_ASSET') %} {# A permission-based check is preferred #}
                <a href="{{ url_for('report_asset_specific', asset_id=asset.id) }}" class="btn btn-sm btn-outline-warning p-1 ms-1" title="Report Issue">
                    <i class="bi bi-exclamation-triangle-fill fs-6"></i>
                </a>
            {% endif %}
        </div>
    </div>
</div>{# templates/partials/_tc_club_card_item.html - Nexus School Management System #}
{# Gemini 3 Pro Preview - Phase F.1 #}
{#
    Reusable card for displaying a single Talent Club instance.
    Expects a `club` object (TalentClub instance) and `current_user` in the context.
    Optionally, `is_member_of_club` and `is_following_club` booleans for button states.
#}

{% set club_avatar = url_for('static', filename=(club.profile_photo_url if club.profile_photo_url else 'img/placeholders/tc_club_default_avatar.png')) %}
{% set member_count = club.memberships.filter_by(is_active=True).count() if club.memberships else 0 %}
{% set follower_count = club.follows.count() if club.follows else 0 %}
{% set total_engagement = member_count + follower_count %}

<div class="col"> {# Bootstrap column class to be applied by parent template #}
    <div class="card talent-club-card h-100 shadow-sm">
        <a href="{{ url_for('view_talent_club_profile', club_id=club.id) }}" class="text-decoration-none d-block tc-club-card-image-link">
            <div class="tc-club-card-img-placeholder bg-primary-subtle text-center d-flex align-items-center justify-content-center" style="height: 140px;">
                {% if club.profile_photo_url %}
                    <img src="{{ club_avatar }}" alt="{{ club.name }} Cover" class="img-fluid" style="width: 100%; height: 100%; object-fit: cover;">
                {% else %}
                    {# Using club.social_category.icon_class is hypothetical, requires adding this field to SocialCategory model #}
                    <i class="bi {{ club.social_category.icon_class if club.social_category and club.social_category.icon_class else 'bi-trophy-fill' }} display-2 text-primary opacity-75"></i>
                {% endif %}
            </div>
        </a>
        <div class="card-body d-flex flex-column">
            <h5 class="card-title font-heading mb-1">
                <a href="{{ url_for('view_talent_club_profile', club_id=club.id) }}" class="text-decoration-none stretched-link text-dark">
                    {{ club.name | truncate(40) }}
                </a>
            </h5>
            <div class="mb-2">
                <span class="badge bg-info-subtle text-info-emphasis rounded-pill px-2 py-1 me-1 fs-08rem">
                    <i class="bi bi-award-fill me-1"></i>Level {{ club.level | default(1) }}
                </span>
                {% if club.warning_count > 0 %}
                <span class="badge bg-warning-subtle text-warning-emphasis rounded-pill px-2 py-1 fs-08rem">
                    <i class="bi bi-exclamation-triangle-fill me-1"></i>{{ club.warning_count }} Warning{{ 's' if club.warning_count != 1 else '' }}
                </span>
                {% endif %}
            </div>
            <small class="text-muted mb-2">
                <i class="bi bi-tag-fill me-1"></i>{{ club.social_category.name if club.social_category else 'Uncategorized' }}
                <span class="mx-1">•</span>
                <i class="bi bi-people-fill me-1"></i>{{ total_engagement }} Engaged
            </small>
            <p class="card-text text-muted small mb-2 flex-grow-1">
                {{ club.description | truncate(70) if club.description else 'No description available.' }}
            </p>
        </div>
        <div class="card-footer bg-light-subtle d-flex justify-content-between align-items-center">
            <small class="text-muted">
                Lead: {{ club.owner.full_name or club.owner.username if club.owner else 'N/A' }}
            </small>
            <div class="tc-club-actions">
                {% if is_member_of_club %}
                     <button class="btn btn-sm btn-outline-secondary tc-action-btn" data-action="leave_club" data-club-id="{{ club.id }}" title="You are a member">
                        <i class="bi bi-person-check-fill me-1"></i> Member
                    </button>
                {% elif is_following_club %}
                    <button class="btn btn-sm btn-info tc-action-btn" data-action="unfollow_club" data-club-id="{{ club.id }}">
                        <i class="bi bi-bell-slash-fill me-1"></i> Following
                    </button>
                {% else %}
                     <button class="btn btn-sm btn-primary tc-action-btn" data-action="follow_club" data-club-id="{{ club.id }}">
                        <i class="bi bi-bell-fill me-1"></i> Follow
                    </button>
                {% endif %}
            </div>
        </div>
    </div>
</div>{% extends "layout/base.html" %}

{% block page_title %}Report Issue: {{ asset.name }}{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-exclamation-triangle-fill text-warning me-2"></i>Report Issue for Asset
        </h1>
        <a href="javascript:history.back()" class="btn btn-sm btn-outline-secondary">
            <i class="bi bi-arrow-left-circle me-1"></i> Cancel & Go Back
        </a>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    <div class="row justify-content-center">
        <div class="col-lg-8 col-md-10">
            <div class="card shadow-sm">
                <div class="card-header bg-warning-subtle text-warning-emphasis">
                    <h5 class="mb-0 font-heading">Reporting Issue for: <strong>{{ asset.name }}</strong> (ID: {{ asset.id }})</h5>
                </div>
                <div class="card-body p-4">
                    <p class="text-muted">
                        Please provide details about the damage or issue you observed with this asset.
                        Your report will be reviewed by an administrator.
                    </p>

                    {% include 'layout/_flash_messages.html' %}

                    <form method="POST" action="{{ url_for('report_asset_specific', asset_id=asset.id) }}" novalidate>
                        {{ form.hidden_tag() if form.hidden_tag }} {# CSRF Token #}

                        <div class="mb-3">
                            {{ form.damage_description.label(class="form-label fw-medium") }}
                            {{ form.damage_description(class="form-control" + (" is-invalid" if form.damage_description.errors else ""), rows="5", placeholder="Describe the issue in detail...") }}
                            {% if form.damage_description.errors %}
                                <div class="invalid-feedback">
                                    {% for error in form.damage_description.errors %}<span>{{ error }}</span>{% endfor %}
                                </div>
                            {% endif %}
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                {{ form.date_of_damage.label(class="form-label fw-medium") }}
                                {{ form.date_of_damage(class="form-control flatpickr-date" + (" is-invalid" if form.date_of_damage.errors else ""), placeholder="YYYY-MM-DD (Optional)") }}
                                {% if form.date_of_damage.errors %}
                                    <div class="invalid-feedback">
                                        {% for error in form.date_of_damage.errors %}<span>{{ error }}</span>{% endfor %}
                                    </div>
                                {% endif %}
                            </div>
                            <div class="col-md-6 mb-3">
                                {{ form.quantity_damaged.label(class="form-label fw-medium") }}
                                {{ form.quantity_damaged(class="form-control" + (" is-invalid" if form.quantity_damaged.errors else ""), type="number", min="1") }}
                                 <small class="form-text text-muted">Quantity of this specific asset affected.</small>
                                {% if form.quantity_damaged.errors %}
                                    <div class="invalid-feedback">
                                        {% for error in form.quantity_damaged.errors %}<span>{{ error }}</span>{% endfor %}
                                    </div>
                                {% endif %}
                            </div>
                        </div>

                        <hr class="my-4">

                        <div class="d-flex justify-content-end">
                            <a href="javascript:history.back()" class="btn btn-outline-secondary me-2">Cancel</a>
                            {{ form.submit(class="btn btn-warning px-4", value="Submit Report") }}
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}{# templates/partials/_global_post_item.html #}
{# This template renders a single post for the global feed. #}
{# NOTE: This version contains the fix for the TemplateSyntaxError. #}

{% set post_dom_id = 'global_post-' ~ post.id %}

<div class="card social-post-item mb-3 shadow-sm" id="{{ post_dom_id }}" data-post-id="{{ post.id }}" data-post-type="global">
    <div class="card-body">
        {# Post Header: Author, Timestamp, Options Dropdown #}
        <div class="d-flex align-items-center mb-3">
            <a href="{{ url_for('teacher_student_profile_view', user_id=post.author.id) }}" class="flex-shrink-0">
                <img src="{{ post.author.profile_photo_url or url_for('static', filename='img/placeholders/user_avatar_default.png') }}"
                     alt="{{ post.author.full_name or post.author.username }}'s avatar" class="rounded-circle me-3" width="48" height="48" style="object-fit: cover;">
            </a>
            <div class="flex-grow-1">
                <a href="{{ url_for('teacher_student_profile_view', user_id=post.author.id) }}" class="fw-bold text-dark text-decoration-none font-heading">{{ post.author.full_name or post.author.username }}</a>
                <div class="text-muted small">
                    <i class="bi bi-clock"></i> 
                    <span class="post-timestamp" title="{{ post.timestamp.strftime('%Y-%m-%d %H:%M:%S') }}">
                        {{ post.timestamp | humanize_time_diff }}
                    </span>
                    {% if post.is_edited %}<span class="fst-italic ms-1">(edited)</span>{% endif %}
                </div>
            </div>
            {% if post.author_id == current_user.id or current_user.role.name in ['system_admin', 'hr_ceo'] %}
            <div class="dropdown">
                <button class="btn btn-sm btn-light border-0" type="button" data-bs-toggle="dropdown" aria-expanded="false" aria-label="Post options">
                    <i class="bi bi-three-dots-vertical"></i>
                </button>
                <ul class="dropdown-menu dropdown-menu-end">
                    {% if post.author_id == current_user.id %}
                        <li><a class="dropdown-item edit-post-btn" href="#" data-post-id="{{ post.id }}" data-post-type="global"><i class="bi bi-pencil me-2"></i>Edit Post</a></li>
                    {% endif %}
                    <li><button class="dropdown-item text-danger delete-post-btn" data-post-id="{{ post.id }}" data-post-type="global"><i class="bi bi-trash me-2"></i>Delete Post</button></li>
                </ul>
            </div>
            {% endif %}
        </div>

        {# Post Content: Text and File Attachment #}
        {% if post.content %}
            <div class="post-content-text mb-3">{{ post.content | nl2br }}</div>
        {% endif %}

        {% if post.attached_file %}
            {% include 'partials/_file_attachment.html' with context %}
        {% endif %}
        
        {# Post Actions: Like, Comment, Share, Save #}
        <div class="post-actions d-flex justify-content-start align-items-center gap-2 border-top pt-2 mt-2">
            {% include 'partials/social_actions/_like_button.html' with context %}
            {% if post.allow_comments %}
                {% include 'partials/social_actions/_comment_button.html' with context %}
            {% endif %}
            {% include 'partials/social_actions/_share_button.html' with context %}
            {% include 'partials/social_actions/_save_button.html' with context %}
        </div>
    </div>

    {# Collapsible Comments Section #}
    {% if post.allow_comments %}
    <div class="collapse comments-section-wrapper" id="commentsCollapse-{{ post_dom_id }}">
        <div class="card-footer bg-light-subtle p-2 comments-section" id="comments-for-{{ post_dom_id }}">
            <div class="text-center py-3 comments-loading-placeholder d-none">
                <div class="spinner-border spinner-border-sm text-primary" role="status"><span class="visually-hidden">Loading...</span></div>
            </div>
            <div class="comments-list" id="comments-list-{{ post_dom_id }}"></div>
            <div class="load-more-comments-container text-center my-2 d-none">
                 <button class="btn btn-link btn-sm load-more-comments-btn" data-post-id="{{ post.id }}" data-post-type="global">Load more comments</button>
            </div>
            
            {# 
               THE FIX IS APPLIED HERE:
               The problematic `{# ... #}` comment is removed from the `with` block arguments.
            #}
            {% with 
                form = get_comment_form(),
                submit_url = url_for('create_global_comment', post_id=post.id),
                placeholder_text = "Write a thoughtful comment...",
                submit_button_text = "Reply",
                form_id = "commentForm-" ~ post_dom_id,
                textarea_id = "commentTextarea-" ~ post_dom_id,
                form_type = "global_comment_create"
            %}
                {% include "partials/_social_content_form.html" %}
            {% endwith %}
        </div>
    </div>
    {% endif %}
</div>{# templates/partials/_book_checkout_item.html - Nexus School Management System #}
{# Gemini 3 Pro Preview - Phase C.4 #}
{#
    Reusable item for displaying a book checkout record.
    Expects a `checkout` object (BookCheckout instance) in the context.
    - checkout.asset (the book Asset object)
    - checkout.user (the User who borrowed the book)
#}
<div class="list-group-item list-group-item-action flex-column align-items-start book-checkout-item py-3 px-3 mb-2 shadow-sm border rounded
    {% if not checkout.returned and checkout.due_date < now.date() %} border-danger-subtle border-start-danger border-start-3 {% elif not checkout.returned and (checkout.due_date - now.date()).days <= 2 %} border-warning-subtle border-start-warning border-start-3 {% elif checkout.returned %} border-success-subtle {% else %} border-light-subtle {% endif %}">
    <div class="d-flex w-100 justify-content-between mb-2">
        <h6 class="mb-1 font-heading">
            <i class="bi {{ 'bi-journal-bookmark-fill text-primary' if checkout.asset else 'bi-question-diamond-fill text-muted' }} me-2"></i>
            {{ checkout.asset.name | truncate(40) if checkout.asset else 'Unknown Book' }}
            <small class="text-muted fw-normal">(ID: {{ checkout.asset.id if checkout.asset else 'N/A' }})</small>
        </h6>
        <small class="text-muted" title="Checkout ID: {{ checkout.id }}">
            Checked Out: {{ checkout.checkout_date | dateformat }}
        </small>
    </div>

    <div class="row gx-3 gy-1 small align-items-center mb-2">
        <div class="col-md-auto">
            <strong class="text-dark">Borrower:</strong>
            <a href="{{ url_for('librarian_student_profile', user_id=checkout.user.id) if current_user.role.name == 'librarian' else '#' }}"
               class="text-decoration-none {% if current_user.role.name != 'librarian' %} pe-none text-dark {% endif %}">
                {{ checkout.user.full_name or checkout.user.username if checkout.user else 'N/A' }}
            </a>
            {% if checkout.user and checkout.user.grade and checkout.user.section %}
                <span class="text-muted"> (G:{{ checkout.user.grade }}-S:{{ checkout.user.section }})</span>
            {% endif %}
        </div>
        <div class="col-md-auto">
            <strong class="text-dark">Due Date:</strong>
            <span class="{{ 'text-danger fw-bold' if not checkout.returned and checkout.due_date < now.date() else ('text-warning fw-medium' if not checkout.returned and (checkout.due_date - now.date()).days <= 2 else 'text-muted') }}">
                {{ checkout.due_date | dateformat }}
            </span>
        </div>
        <div class="col-md-auto">
            <strong class="text-dark">Status:</strong>
            {% if checkout.returned %}
                <span class="badge bg-success-subtle text-success-emphasis rounded-pill px-2 py-1">
                    <i class="bi bi-check-lg me-1"></i>Returned on {{ checkout.return_date | dateformat }}
                </span>
            {% elif checkout.due_date < now.date() %}
                <span class="badge bg-danger-subtle text-danger-emphasis rounded-pill px-2 py-1">
                    <i class="bi bi-hourglass-split me-1"></i>Overdue
                </span>
            {% else %}
                <span class="badge bg-info-subtle text-info-emphasis rounded-pill px-2 py-1">
                    <i class="bi bi-clock-fill me-1"></i>Checked Out
                </span>
            {% endif %}
        </div>
    </div>

    {# Action button for Librarian to mark as returned #}
    {% if current_user.role.name == 'librarian' and not checkout.returned %}
        <div class="mt-2 text-end">
            <form action="{{ url_for('return_book', checkout_id=checkout.id) }}" method="POST" class="d-inline">
                {{ csrf_token() if csrf_token else '' }}
                <button type="submit" class="btn btn-sm btn-success">
                    <i class="bi bi-check2-square me-1"></i> Mark as Returned
                </button>
            </form>
        </div>
    {% endif %}
</div>{# templates/partials/_notification_item.html - Nexus School Management System #}
{# Gemini 3 Pro Preview - Phase D.1 #}
{#
    Reusable item for displaying a single notification.
    Expects a `notification` object in the context.
    Can be used in dropdowns or full notification lists.
    - notification.sender (User object)
    - notification.content
    - notification.timestamp
    - notification.is_read (boolean)
    - notification.link_url (optional)
    - notification.notification_type (optional, for specific icons/styling)
#}

{% set item_class = "list-group-item-light" if notification.is_read else "list-group-item-primary bg-primary-subtle border-primary-subtle" %}
{% set icon_class = 'bi-envelope-fill' %} {# Default icon #}
{% set icon_color_class = 'text-primary' %}

{# Determine icon based on notification_type #}
{% if notification.notification_type == 'chat' %}
    {% set icon_class = 'bi-chat-dots-fill' %}
    {% set icon_color_class = 'text-success' %}
{% elif notification.notification_type == 'task_assigned' or notification.notification_type == 'task_status_update' or notification.notification_type == 'task_review_result' %}
    {% set icon_class = 'bi-list-task' %}
    {% set icon_color_class = 'text-info' %}
{% elif notification.notification_type == 'request_submitted' or notification.notification_type == 'request_status_update' or notification.notification_type == 'request_forwarded' %}
    {% set icon_class = 'bi-file-earmark-medical-fill' %}
    {% set icon_color_class = 'text-warning' %}
{% elif notification.notification_type and notification.notification_type.startswith('tc_') %}
    {% set icon_class = 'bi-trophy-fill' %}
    {% set icon_color_class = 'text-danger' %}
{% elif notification.notification_type == 'asset_new' or notification.notification_type == 'asset_report' or notification.notification_type == 'asset_status_change' %}
    {% set icon_class = 'bi-archive-fill' %}
    {% set icon_color_class = 'text-secondary' %}
{% endif %}

<a href="{{ notification.link_url if notification.link_url else '#' }}"
   class="list-group-item list-group-item-action notification-item {{ item_class }} {% if not notification.is_read %} unread-notification {% endif %}"
   data-notification-id="{{ notification.id }}"
   aria-current="{{ 'true' if not notification.is_read else 'false' }}">
    <div class="d-flex w-100">
        <div class="notification-icon me-3 pt-1">
            <span class="badge bg-{{ icon_color_class.split('-')[-1] if icon_color_class else 'primary' }}-subtle p-2 rounded-circle">
                 <i class="bi {{ icon_class }} fs-5 {{ icon_color_class }}"></i>
            </span>
        </div>
        <div class="notification-content flex-grow-1">
            <div class="d-flex w-100 justify-content-between">
                <h6 class="mb-1 notification-title font-heading">
                    {% if notification.sender %}
                        From: {{ notification.sender.full_name or notification.sender.username }}
                    {% else %}
                        System Notification
                    {% endif %}
                </h6>
                <small class="text-muted notification-timestamp" title="{{ notification.timestamp | datetimeformat('%Y-%m-%d %H:%M:%S UTC') }}">
                    {{ notification.timestamp | humanize_time_diff }} {# Requires a custom filter or JS formatting #}
                </small>
            </div>
            <p class="mb-1 notification-text text-dark-emphasis">
                {{ notification.content | truncate(150, True) }}
            </p>
            {% if not notification.is_read %}
                <small class="text-primary fw-bold">New</small>
            {% endif %}
        </div>
        {# Optional: Action button within the notification item itself (e.g., "Mark as Read" if not auto-marked on view) #}
        {# {% if not notification.is_read %}
        <button class="btn btn-sm btn-outline-secondary mark-notification-read-btn ms-2 align-self-start" data-notification-id="{{ notification.id }}">
            <i class="bi bi-check2-square"></i>
        </button>
        {% endif %} #}
    </div>
</a><div class="card mb-3 recipient-group-container">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h6 class="mb-0">{{ group_name }} ({{ users|length }})</h6>
        <div class="form-check">
            <input class="form-check-input select-all-group" type="checkbox" id="select-all-{{ group_name|replace(' ', '-')|replace('.', '')|lower }}">
            <label class="form-check-label" for="select-all-{{ group_name|replace(' ', '-')|replace('.', '')|lower }}">
                Select All
            </label>
        </div>
    </div>
    <ul class="list-group list-group-flush" style="max-height: 300px; overflow-y: auto;">
        {% for user in users %}
        <li class="list-group-item d-flex align-items-center recipient-list-item" data-name="{{ user.full_name|lower }}" data-username="{{ user.username|lower }}">
            <input class="form-check-input me-3 recipient-checkbox" type="checkbox" name="recipient_ids_visual" value="{{ user.id }}" id="user-{{ user.id }}">
            <label class="form-check-label d-flex align-items-center w-100" for="user-{{ user.id }}">
                <img src="{{ url_for('static', filename=user.profile_photo_url or 'img/placeholders/avatar.png') }}" alt="" class="rounded-circle me-2" width="32" height="32">
                <div class="flex-grow-1">
                    <span class="fw-bold">{{ user.full_name }}</span>
                    <small class="text-muted ms-2">({{ user.username }})</small>
                </div>
            </label>
        </li>
        {% endfor %}
    </ul>
</div>{# templates/partials/_dashboard_stat_card.html - Nexus School Management System #}
{# Gemini 3 Pro Preview - Phase B.0 #}
{#
    Reusable dashboard statistic card.
    Expects the following variables to be passed in the context:
    - card_title: (String) The title/label for the statistic (e.g., "Total Students")
    - card_value: (String or Number) The statistic value to display.
    - card_icon: (String) Bootstrap Icon class (e.g., "bi-people-fill").
    - card_color_class: (String, optional) Bootstrap text color class for the icon (e.g., "text-primary", "text-success"). Defaults to "text-primary".
    - card_url: (String, optional) URL for the "View Details" link.
    - card_url_text: (String, optional) Text for the "View Details" link (e.g., "Manage Students"). Defaults to "View Details".
    - card_extra_class: (String, optional) Extra CSS classes for the card.
    - card_id: (String, optional) ID for the card element.
#}
{% set color_class = card_color_class | default('text-primary') %}
{% set url_text = card_url_text | default('View Details') %}

<div class="col"> {# Bootstrap column class should be applied by the parent template #}
    <div class="card dashboard-stat-card h-100 shadow-sm {{ card_extra_class | default('') }}" {% if card_id %}id="{{ card_id }}"{% endif %}>
        <div class="card-body d-flex align-items-center">
            <div class="stat-icon display-4 me-3 {{ color_class }}">
                <i class="bi {{ card_icon | default('bi-bar-chart-line-fill') }}"></i>
            </div>
            <div class="stat-content">
                <h6 class="card-subtitle mb-1 text-muted text-uppercase font-body" style="font-size: 0.8rem;">{{ card_title | default('Statistic') }}</h6>
                <p class="card-text display-6 fw-bold mb-0 font-heading">{{ card_value | default('N/A') }}</p>
            </div>
        </div>
        {% if card_url %}
        <a href="{{ card_url }}" class="card-footer text-decoration-none text-muted bg-light-subtle hover-bg-light">
            <small>{{ url_text }} <i class="bi bi-arrow-right-short ms-1"></i></small>
        </a>
        {% else %}
        {# Optionally, a non-clickable footer or no footer if no URL #}
        {# <div class="card-footer bg-light-subtle text-muted">
            <small> </small> {# Placeholder for consistent height if needed #}
        {# </div> #}
        {% endif %}
    </div>
</div>{# templates/partials/_request_list_item.html - Nexus School Management System #}
{# Gemini 3 Pro Preview - Phase H.1 #}
{#
    Reusable item for displaying a request summary in a list.
    Expects a `request_obj` (Request instance) in the context.
    - request_obj.title, .request_type, .urgency, .status, .last_updated_at, .current_handler
#}

{% set status_badge_class = 'bg-secondary-subtle text-secondary-emphasis' %}
{% if request_obj.status == 'Pending' %}
    {% set status_badge_class = 'bg-warning-subtle text-warning-emphasis' %}
{% elif request_obj.status == 'Approved' or request_obj.status == 'On Progress' %}
    {% set status_badge_class = 'bg-primary-subtle text-primary-emphasis' %}
{% elif request_obj.status == 'Resolved' %}
    {% set status_badge_class = 'bg-success-subtle text-success-emphasis' %}
{% elif request_obj.status == 'Denied' %}
    {% set status_badge_class = 'bg-danger-subtle text-danger-emphasis' %}
{% endif %}

<a href="{{ url_for('view_request_detail', request_id=request_obj.id) }}" class="list-group-item list-group-item-action request-list-item flex-column align-items-start py-3 px-3 mb-2 shadow-sm border rounded
    {% if request_obj.status == 'Pending' and request_obj.current_handler_id == current_user.id %} border-warning-subtle border-start-warning border-start-3 {# Highlight for handler's inbox #}
    {% elif request_obj.status == 'Denied' %} border-danger-subtle border-start-danger border-start-3
    {% elif request_obj.status == 'Resolved' %} border-success-subtle border-start-success border-start-3
    {% else %} border-light-subtle {% endif %}">

    <div class="d-flex w-100 justify-content-between mb-1">
        <h6 class="mb-1 font-heading request-title">
            <i class="bi bi-file-earmark-text-fill me-1 {{ status_badge_class.split(' ')[1] | replace('text-', 'text-') }}"></i>
            {{ request_obj.title | truncate(70) }} <small class="text-muted fw-normal">(ID: {{ request_obj.id }})</small>
        </h6>
        <small class="text-muted request-last-updated" title="Last Updated">
             <i class="bi bi-clock-history me-1"></i>{{ request_obj.last_updated_at | humanize_time_diff }}
        </small>
    </div>

    <div class="d-flex w-100 justify-content-between align-items-center small mb-1">
        <div class="request-meta">
            <span class="me-3" title="Type">
                <strong>Type:</strong>
                <span class="badge bg-secondary-subtle text-secondary-emphasis rounded-pill px-2">{{ request_obj.request_type }}</span>
            </span>
            <span class="me-3" title="Urgency">
                <strong>Urgency:</strong>
                {% if request_obj.urgency == 'Critical' %}<span class="badge bg-danger text-white rounded-pill px-2">{{ request_obj.urgency }}</span>
                {% elif request_obj.urgency == 'High' %}<span class="badge bg-warning text-dark rounded-pill px-2">{{ request_obj.urgency }}</span>
                {% elif request_obj.urgency == 'Medium' %}<span class="badge bg-info text-white rounded-pill px-2">{{ request_obj.urgency }}</span>
                {% else %}<span class="badge bg-light text-dark border rounded-pill px-2">{{ request_obj.urgency }}</span>
                {% endif %}
            </span>
            <span title="Current Tier">
                <strong>Tier:</strong>
                <span class="badge bg-dark-subtle text-dark-emphasis rounded-pill px-2">{{ request_obj.tier }}</span>
            </span>
        </div>
        <div class="request-status">
            <strong>Status:</strong>
            <span class="badge fs-08rem px-2 py-1 rounded-pill {{ status_badge_class }}">
                {{ request_obj.status }}
            </span>
        </div>
    </div>

    <p class="mb-1 text-muted small request-description d-none d-md-block">
        {{ request_obj.description | truncate(150) }}
    </p>

    <div class="mt-1 small text-muted">
        {% if request_obj.status == 'Pending' and request_obj.current_handler %}
            Awaiting review by: <strong>{{ request_obj.current_handler.full_name or request_obj.current_handler.username }}</strong>
            ({{ request_obj.current_handler.role.name.replace('_',' ') | title if request_obj.current_handler.role else 'N/A' }})
        {% elif request_obj.status == 'On Progress' and request_obj.current_handler %}
            In progress with: <strong>{{ request_obj.current_handler.full_name or request_obj.current_handler.username }}</strong>
        {% elif request_obj.requester_id == current_user.id and request_obj.status not in ['Resolved', 'Denied'] %}
            <span class="text-primary-emphasis">You submitted this request.</span>
        {% endif %}
    </div>
</a>{# templates/partials/_tc_feed_post_item.html - Nexus School Management System #}
{# Gemini 3 Pro Preview - Phase F.2 #}
{#
    Reusable item for displaying a single Talent Club feed post.
    Expects a `post` object (TalentClubFeedPost instance) and `current_user` in the context.
    Also expects `club` (the TalentClub instance the feed belongs to).
    - post.author (User object)
    - post.content (text content)
    - post.file (File object, optional)
    - post.timestamp
    - post.id
    - post.comments (relationship to TalentClubFeedComment)
    - post.reactions (relationship to TalentClubFeedReaction)
    - club.feed (TalentClubFeed object, to check allow_comments/reactions settings)
#}

{% set author_name = post.author.full_name or post.author.username if post.author else "Anonymous" %}
{% set author_avatar = url_for('static', filename=(post.author.profile_photo_url if post.author and post.author.profile_photo_url else 'img/placeholders/user_avatar_default.png')) %}

<div class="card shadow-sm tc-feed-post-item mb-4" id="tc_feed_post-{{ post.id }}">
    <div class="card-header bg-transparent border-bottom-0 pt-3 pb-2">
        <div class="d-flex align-items-center">
            <a href="#" class="text-decoration-none"> {# Link to author's TC profile or general profile #}
                <img src="{{ author_avatar }}" alt="{{ author_name }}" class="rounded-circle me-2" style="width: 40px; height: 40px; object-fit: cover;">
            </a>
            <div>
                <a href="#" class="text-decoration-none">
                    <h6 class="mb-0 font-heading text-dark">{{ author_name }}</h6>
                </a>
                <small class="text-muted" title="{{ post.timestamp | datetimeformat('%Y-%m-%d %H:%M:%S UTC') }}">
                    {{ post.timestamp | humanize_time_diff }}
                    {% if post.is_edited %} <span class="fst-italic">(edited)</span>{% endif %}
                </small>
            </div>
            {# Post Actions Dropdown (Edit, Delete - for author or club owner/admin) #}
            {% set user_is_post_author = post.author_id == current_user.id %}
            {% set user_is_club_owner_or_admin = (club and club.owner_id == current_user.id) or (current_user.get_tc_club_membership_role(club) == 'admin') %} {# get_tc_club_membership_role is hypothetical helper #}

            {% if user_is_post_author or user_is_club_owner_or_admin %}
            <div class="ms-auto">
                <div class="dropdown">
                    <button class="btn btn-sm btn-link text-muted" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="bi bi-three-dots-vertical"></i>
                    </button>
                    <ul class="dropdown-menu dropdown-menu-end">
                        {% if user_is_post_author %}
                        <li><a class="dropdown-item edit-tc-feed-post-btn" href="#" data-post-id="{{ post.id }}"><i class="bi bi-pencil-square me-2"></i>Edit Post</a></li>
                        {% endif %}
                        <li>
                            <button class="dropdown-item text-danger delete-tc-feed-post-btn" data-post-id="{{ post.id }}">
                                <i class="bi bi-trash-fill me-2"></i>Delete Post
                            </button>
                        </li>
                    </ul>
                </div>
            </div>
            {% endif %}
        </div>
    </div>

    <div class="card-body pt-2">
        {% if post.content %}
            <p class="card-text post-content-text mb-2" id="tc-post-content-{{ post.id }}">{{ post.content | nl2br | safe }}</p>
        {% endif %}

        {% if post.file %}
            <div class="post-attachment mt-2 mb-2 p-2 border rounded bg-light-subtle">
                {# File display logic similar to _social_post_item.html #}
                {% if post.file.mimetype and post.file.mimetype.startswith('image/') %}
                    <a href="{{ url_for('download_social_file', file_id=post.file.id) }}" data-bs-toggle="lightbox" data-gallery="tc-post-{{post.id}}-gallery">
                        <img src="{{ url_for('download_social_file', file_id=post.file.id) }}" class="img-fluid rounded" alt="{{ post.file.original_filename }}" style="max-height: 400px;">
                    </a>
                {% elif post.file.mimetype and post.file.mimetype.startswith('video/') %}
                    <video controls class="img-fluid rounded" style="max-height: 400px;">
                        <source src="{{ url_for('download_social_file', file_id=post.file.id) }}" type="{{ post.file.mimetype }}">
                        Your browser does not support the video tag.
                    </video>
                {% elif post.file.mimetype and post.file.mimetype.startswith('audio/') %}
                     <audio controls class="w-100 mt-2">
                        <source src="{{ url_for('download_social_file', file_id=post.file.id) }}" type="{{ post.file.mimetype }}">
                        Your browser does not support the audio element.
                    </audio>
                {% else %}
                    <div class="d-flex align-items-center p-2">
                        <i class="bi bi-file-earmark-text-fill fs-2 text-secondary me-2"></i>
                        <div>
                            <a href="{{ url_for('download_social_file', file_id=post.file.id) }}" class="fw-medium text-decoration-none stretched-link" download="{{ post.file.original_filename }}">
                                {{ post.file.original_filename }}
                            </a>
                            <small class="d-block text-muted">({{ (post.file.size / 1024 / 1024) | round(2) if post.file.size else '0' }} MB)</small>
                        </div>
                    </div>
                {% endif %}
            </div>
        {% endif %}
    </div>

    <div class="card-footer bg-transparent pt-2 pb-2">
        <div class="d-flex justify-content-start align-items-center post-actions">
            {% if club.feed and club.feed.allow_reactions %}
                <button class="btn btn-sm btn-outline-secondary tc-reaction-btn me-2" data-post-id="{{ post.id }}" data-reaction-emoji="👍" title="Like">
                    <i class="bi bi-hand-thumbs-up"></i> <span class="reaction-count" data-emoji="👍">{{ post.reactions.filter_by(emoji="👍").count() }}</span>
                </button>
                <button class="btn btn-sm btn-outline-secondary tc-reaction-btn me-2" data-post-id="{{ post.id }}" data-reaction-emoji="❤️" title="Love">
                    <i class="bi bi-heart"></i> <span class="reaction-count" data-emoji="❤️">{{ post.reactions.filter_by(emoji="❤️").count() }}</span>
                </button>
                {# Add more reaction buttons if desired #}
            {% endif %}

            {% if club.feed and club.feed.allow_comments %}
            <button class="btn btn-sm btn-outline-secondary comment-toggle-btn ms-auto" data-bs-toggle="collapse" href="#tcCommentsCollapse-{{ post.id }}" role="button" aria-expanded="false" aria-controls="tcCommentsCollapse-{{ post.id }}">
                <i class="bi bi-chat-square-text me-1"></i> Comments <span class="badge bg-secondary-subtle text-secondary-emphasis rounded-pill">{{ post.comments | length if post.comments else 0 }}</span>
            </button>
            {% endif %}
        </div>
    </div>

    {# Collapsible Comments Section for TC Feed Posts #}
    {% if club.feed and club.feed.allow_comments %}
    <div class="collapse comments-section border-top" id="tcCommentsCollapse-{{ post.id }}">
        <div class="p-3">
            <div class="existing-comments mb-3" id="tc-comments-list-{{ post.id }}" style="max-height: 300px; overflow-y: auto;">
                {% if post.comments and post.comments | length > 0 %}
                    {% for comment in post.comments | sort(attribute='timestamp') %}
                        {# Reusing _social_comment_item.html, ensure it adapts or create _tc_comment_item.html #}
                        {% include 'partials/_social_comment_item.html' with {'comment': comment, 'current_user': current_user, 'post': post, 'context_type': 'tc_feed'} %}
                    {% endfor %}
                {% else %}
                    <p class="text-muted small text-center no-comments-yet">No comments yet. Be the first!</p>
                {% endif %}
            </div>
            <form class="tc-comment-form" data-post-id="{{ post.id }}" method="POST"> {# Action handled by JS #}
                <div class="input-group">
                    <textarea class="form-control form-control-sm comment-input" name="content" rows="1" placeholder="Write a comment..." aria-label="Write a comment"></textarea>
                    <button class="btn btn-sm btn-primary tc-comment-submit-btn" type="submit">
                        <i class="bi bi-send"></i>
                    </button>
                </div>
            </form>
        </div>
    </div>
    {% endif %}
</div>{# templates/partials/_social_content_form.html #}

<div class="card social-content-form-card mb-3 shadow-sm">
    <div class="card-body p-3">
        {# This form tag now correctly receives its ID from the parent template #}
        <form 
            method="POST" 
            action="{{ submit_url }}" 
            id="{{ form_id }}" 
            class="social-content-submission-form" 
            enctype="multipart/form-data"
            data-form-type="global_post_create"
        >
            
            {# This is the most reliable way to include the CSRF token for WTForms #}
            {{ form.csrf_token }}

            <div class="d-flex align-items-start">
                <div class="flex-shrink-0 me-3">
                    <img 
                        src="{{ current_user.profile_photo_url or url_for('static', filename='img/placeholders/user_avatar_default.png') }}" 
                        alt="{{ current_user.full_name }}'s avatar" 
                        class="rounded-circle" 
                        width="40" 
                        height="40" 
                        style="object-fit: cover;"
                    >
                </div>
                <div class="flex-grow-1">
                    {# Render the textarea manually to ensure all attributes are correct #}
                    <textarea 
                        name="content"
                        class="form-control post-content-textarea border-0 shadow-none bg-light" 
                        rows="2" 
                        placeholder="{{ placeholder_text | default('Share something...') }}" 
                        aria-label="Post content"
                        id="{{ textarea_id | default('post-content-textarea') }}"
                        autocomplete="off"
                    ></textarea>
                </div>
            </div>

            <div class="d-flex justify-content-between align-items-center mt-2 pt-2 border-top">
                <div>
                    {# Manually render file input for better FilePond compatibility #}
                    <div class="filepond-container-wrapper">
                        <input 
                            type="file" 
                            class="filepond-input" 
                            name="{{ file_input_name | default('attached_file') }}" 
                            id="filepond-{{ form_id }}"
                        >
                    </div>
                </div>
                <button type="submit" class="btn btn-primary post-submit-btn">
                    <span class="spinner-border spinner-border-sm d-none me-1" role="status" aria-hidden="true"></span>
                    {{ submit_button_text | default('Post') }}
                </button>
            </div>
        </form>
    </div>
</div>{# templates/partials/_contact_list_item.html - Nexus School Management System #}
{# Gemini 3 Pro Preview - Phase D.2 #}
{#
    Reusable item for displaying a contact in a list.
    Expects a `contact` object (User instance) and `current_user_id` in the context.
    Optionally `unread_count` for this contact.
#}
{% set contact_avatar = url_for('static', filename=(contact.profile_photo_url if contact.profile_photo_url else 'img/placeholders/user_avatar_default.png')) %}
{% set target_url = url_for(target_route | default('universal_chat'), target_user_id=contact.id) %} {# target_route can be 'universal_chat' or 'send_notification_to_user' #}

<a href="{{ target_url }}"
   class="list-group-item list-group-item-action contact-list-item-clickable p-3">
    <div class="d-flex align-items-center">
        <div class="position-relative me-3">
            <img src="{{ contact_avatar }}" alt="{{ contact.full_name or contact.username }}" class="rounded-circle shadow-sm" style="width: 50px; height: 50px; object-fit: cover;">
            {# Online status indicator (placeholder logic) - Future enhancement #}
            {# {% if contact.is_online %}
            <span class="position-absolute bottom-0 end-0 p-1 bg-success border border-light rounded-circle" title="Online">
                <span class="visually-hidden">Online</span>
            </span>
            {% endif %} #}
        </div>
        <div class="flex-grow-1">
            <div class="d-flex justify-content-between align-items-center">
                <h6 class="mb-0 font-heading contact-name">{{ contact.full_name or contact.username }}</h6>
                {# Placeholder for last message timestamp - Future enhancement #}
                {# <small class="text-muted contact-last-active">10m ago</small> #}
            </div>
            <small class="text-muted d-block contact-role">
                {{ contact.role.name.replace('_', ' ') | title if contact.role else 'N/A' }}
                {% if contact.grade and contact.section %} (G:{{ contact.grade }}-S:{{ contact.section }}){% endif %}
            </small>
            {# Placeholder for last message snippet - Future enhancement #}
            {# <p class="text-muted small mb-0 contact-last-message-snippet text-truncate">
                You: Ok, see you then!
            </p> #}
        </div>
        {% if unread_count and unread_count > 0 %}
            <span class="badge bg-danger rounded-pill ms-2">{{ unread_count }}</span>
        {% endif %}
         <i class="bi {{ 'bi-chat-dots-fill' if target_route == 'universal_chat' else 'bi-send-plus-fill' }} fs-4 text-primary opacity-50 ms-2 contact-action-icon"></i>
    </div>
</a>{# templates/partials/_dashboard_quick_links.html - Nexus School Management System #}
{# Gemini 3 Pro Preview - Phase B.1 #}
{#
    Reusable dashboard quick links section.
    Expects `quick_links` in the context: a list of dictionaries, where each dict has:
    - 'url': (String) The URL for the link.
    - 'text': (String) The display text for the link.
    - 'icon': (String) Bootstrap Icon class (e.g., "bi-calendar-event").
    - 'color_class': (String, optional) Bootstrap text color class for the icon (e.g., "text-success").
#}
{% if quick_links and quick_links | length > 0 %}
<div class="card shadow-sm dashboard-quick-links-card">
    <div class="card-header">
        <h5 class="mb-0 font-heading"><i class="bi bi-lightning-charge-fill me-2"></i>Quick Actions</h5>
    </div>
    <div class="list-group list-group-flush">
        {% for link in quick_links %}
            <a href="{{ link.url | default('#') }}" class="list-group-item list-group-item-action d-flex align-items-center py-3">
                <i class="bi {{ link.icon | default('bi-link-45deg') }} fs-5 me-3 {{ link.color_class | default('text-primary') }}" style="min-width: 24px;"></i>
                <span class="fw-medium">{{ link.text | default('Link') }}</span>
                <i class="bi bi-chevron-right ms-auto text-muted small"></i>
            </a>
        {% endfor %}
    </div>
</div>
{% else %}
<!-- Optional: Placeholder if no quick links are provided -->
<!-- <p class="text-muted">No quick actions available at this time.</p> -->
{% endif %}{# templates/partials/social_actions/_comment_button.html #}
{% set post_dom_id = 'global_post-' ~ post.id %}
<button class="btn btn-subtle btn-sm comment-toggle-btn" data-bs-toggle="collapse" href="#commentsCollapse-{{ post_dom_id }}" role="button" aria-expanded="false" aria-controls="commentsCollapse-{{ post_dom_id }}">
    <i class="bi bi-chat-dots"></i> Comment 
    (<span class="comment-count">{{ post.comment_count or 0 }}</span>)
</button>{# templates/partials/social_actions/_save_button.html #}
{# The 'active' class will be managed by JavaScript after checking the user's saved items. #}
<button class="btn btn-subtle btn-sm save-item-btn" data-item-id="{{ post.id }}" data-item-type="GlobalPost">
    <i class="bi bi-bookmark"></i> <span class="save-text">Save</span>
</button> {# templates/partials/social_actions/_like_button.html #}
<button class="btn btn-subtle btn-sm reaction-btn like-post-btn {% if post.current_user_liked %}active{% endif %}" 
        data-post-id="{{ post.id }}" data-post-type="global" aria-pressed="{{ post.current_user_liked | lower }}">
    <i class="bi {% if post.current_user_liked %}bi-heart-fill text-danger{% else %}bi-heart{% endif %}"></i> 
    <span class="like-text">{% if post.current_user_liked %}Liked{% else %}Like{% endif %}</span>
    (<span class="like-count">{{ post.like_count or 0 }}</span>)
</button>{# templates/partials/social_actions/_share_button.html #}
<button class="btn btn-subtle btn-sm share-post-btn" data-post-id="{{ post.id }}" data-post-type="global" data-share-url="{{ post.get_share_url() or '#' }}">
    <i class="bi bi-share"></i> Share
</button>{# templates/partials/_channel_card_item.html - Nexus School Management System #}
{#
    Reusable card for displaying a single channel in a list or discovery view.
    Expects a `channel` object (Channel instance) and `current_user` in the context.
    Optionally, `is_subscribed` boolean can be passed for explicit button states.
#}

{% set channel_avatar = url_for('static', filename=(channel.profile_photo_url or 'img/placeholders/channel_default_avatar.png')) %}
{% set subscriber_count = channel.subscribers|length %} {# Use Jinja length filter for efficiency #}

<div class="col"> {# Bootstrap column class to be applied by parent template #}
    <div class="card channel-card h-100 shadow-sm">
        <a href="{{ url_for('view_social_channel', channel_id=channel.id) }}" class="text-decoration-none d-block channel-card-image-link">
            <div class="channel-card-img-placeholder bg-primary-subtle d-flex align-items-center justify-content-center" style="height: 120px;">
                {% if channel.profile_photo_url %}
                    <img src="{{ channel_avatar }}" alt="{{ channel.name }} Cover" class="w-100 h-100" style="object-fit: cover;">
                {% else %}
                    <i class="bi {{ channel.social_category.icon_class or 'bi-broadcast' }} display-3 text-primary opacity-75"></i>
                {% endif %}
            </div>
        </a>
        <div class="card-body d-flex flex-column">
            <h5 class="card-title font-heading mb-1">
                <a href="{{ url_for('view_social_channel', channel_id=channel.id) }}" class="text-decoration-none stretched-link text-body">
                    {{ channel.name | truncate(40) }}
                </a>
            </h5>
            <small class="text-muted mb-2">
                <i class="bi bi-tag-fill me-1" title="Category"></i>{{ channel.social_category.name or 'Uncategorized' }}
                <span class="mx-1">•</span>
                <i class="bi bi-people-fill me-1" title="Subscribers"></i>{{ subscriber_count }} Subscriber{{ 's' if subscriber_count != 1 else '' }}
            </small>
            <p class="card-text text-muted small mb-3 flex-grow-1">
                {{ channel.bio | truncate(70) if channel.bio else 'No description available.' }}
            </p>
            <div class="mt-auto">
                <small class="badge bg-secondary-subtle text-secondary-emphasis fw-normal">{{ channel.type | title }} Channel</small>
            </div>
        </div>
        <div class="card-footer bg-light-subtle d-flex justify-content-between align-items-center py-2">
            <small class="text-muted text-truncate" title="Channel Owner">
                <i class="bi bi-person-circle me-1"></i>
                {% if channel.owner %}
                    {{ channel.owner.full_name or channel.owner.username }}
                {% else %}
                    N/A
                {% endif %}
            </small>

            {# Subscription button logic - depends on context (e.g., discover vs. my_channels) #}
            {% if is_subscribed is defined %}
                {% if is_subscribed %}
                     <button class="btn btn-sm btn-outline-secondary channel-action-btn" data-action="unsubscribe" data-channel-id="{{ channel.id }}" title="Unsubscribe from this channel">
                        <i class="bi bi-bell-slash-fill"></i>
                    </button>
                {% elif channel.type == 'public' %}
                    <button class="btn btn-sm btn-primary channel-action-btn" data-action="subscribe" data-channel-id="{{ channel.id }}" title="Subscribe to this channel">
                        <i class="bi bi-bell-fill"></i>
                    </button>
                {% elif channel.type == 'private' %}
                     <button class="btn btn-sm btn-outline-secondary" disabled title="This is a private channel">
                        <i class="bi bi-lock-fill"></i>
                    </button>
                {% endif %}
            {% endif %}
        </div>
    </div>
</div>{# templates/partials/_dashboard_recent_activity.html - Nexus School Management System #}
{# Gemini 3 Pro Preview - Phase B.1 (Placeholder) #}
{#
    Reusable dashboard recent activity feed.
    Expects `recent_activities` in the context: a list of activity items.
    Each item could be a dictionary with keys like 'icon', 'text', 'timestamp', 'url'.
#}

<div class="card shadow-sm recent-activity-card">
    <div class="card-header">
        <h5 class="mb-0 font-heading"><i class="bi bi-clock-history me-2"></i>Recent Activity</h5>
    </div>
    <div class="card-body" style="max-height: 400px; overflow-y: auto;">
        {% if recent_activities and recent_activities | length > 0 %}
            <ul class="list-unstyled">
                {% for activity in recent_activities %}
                    <li class="d-flex align-items-start mb-3 pb-3 border-bottom">
                        <div class="activity-icon me-3">
                            <span class="badge bg-{{ activity.badge_color | default('secondary') }} p-2 rounded-circle">
                                <i class="bi {{ activity.icon | default('bi-bell') }} fs-5 text-white"></i>
                            </span>
                        </div>
                        <div class="activity-content">
                            <p class="mb-1 text-dark">{{ activity.text | safe }}</p> {# Use safe if text contains HTML like links #}
                            <small class="text-muted">
                                <i class="bi bi-calendar3 me-1"></i>
                                {{ activity.timestamp | datetimeformat('%b %d, %Y %I:%M %p') if activity.timestamp else 'Just now' }}
                            </small>
                            {% if activity.url %}
                                <a href="{{ activity.url }}" class="ms-2 small text-decoration-none">View <i class="bi bi-arrow-up-right-square"></i></a>
                            {% endif %}
                        </div>
                    </li>
                {% endfor %}
            </ul>
        {% else %}
            <div class="text-center text-muted p-3">
                <i class="bi bi-moon-stars fs-1 mb-2"></i>
                <p>No recent activity to display.</p>
            </div>
        {% endif %}
    </div>
    {% if recent_activities and recent_activities | length > 5 %} {# Example: Show 'View All' if more than 5 #}
    <a href="{{ url_for('view_notifications') }}" class="card-footer text-center text-decoration-none text-muted bg-light-subtle hover-bg-light">
        <small>View All Activity <i class="bi bi-arrow-right-short ms-1"></i></small>
    </a>
    {% endif %}
</div>

{# SCSS for .recent-activity-card can be added to style.scss #}{# templates/partials/_tc_proposal_item.html - Nexus School Management System #}
{# Gemini 3 Pro Preview - Phase F.3 #}
{#
    Reusable item for displaying a Talent Club proposal in a list.
    Expects a `proposal` object (TalentClubProposal instance) and `current_user`.
    Optionally `accepted_count` for this proposal.
#}

<div class="list-group-item list-group-item-action flex-column align-items-start tc-proposal-item py-3 px-3 mb-2 shadow-sm border rounded
    {% if proposal.status == 'pending_leader_review' %} border-info-subtle border-start-info border-start-3
    {% elif proposal.status == 'pending_members_accept' %} border-warning-subtle border-start-warning border-start-3
    {% elif proposal.status == 'accepted' %} border-success-subtle border-start-success border-start-3
    {% elif proposal.status == 'rejected' %} border-danger-subtle border-start-danger border-start-3
    {% else %} border-light-subtle {% endif %}">

    <div class="d-flex w-100 justify-content-between mb-2">
        <h6 class="mb-1 font-heading">
            <i class="bi {{ 'bi-lightbulb-fill text-primary' if proposal.status.startswith('pending') else ('bi-check-circle-fill text-success' if proposal.status == 'accepted' else 'bi-x-circle-fill text-danger') }} me-2"></i>
            Proposal: {{ proposal.name | truncate(50) }}
            {% if current_user.id == proposal.creator_id %}
                <a href="{{ url_for('view_tc_proposal', proposal_id=proposal.id) }}" class="btn btn-sm btn-outline-secondary p-0 px-1 ms-2" style="font-size: 0.7rem;">View/Edit</a>
            {% elif current_user.is_tc_leader %}
                 <a href="{{ url_for('review_tc_proposal', proposal_id=proposal.id) }}" class="btn btn-sm btn-outline-primary p-0 px-1 ms-2" style="font-size: 0.7rem;">Review</a>
            {% endif %}
        </h6>
        <small class="text-muted" title="{{ proposal.created_at | datetimeformat('%Y-%m-%d %H:%M:%S UTC') }}">
            {{ proposal.created_at | humanize_time_diff }}
        </small>
    </div>

    <p class="mb-2 text-muted- GGGGGGGGGGG">
        <strong class="text-dark">Category:</strong> {{ proposal.social_category.name if proposal.social_category else 'N/A' }}
    </p>
    <p class="mb-2 text-muted- GGGGGGGGGGG small">
        {{ proposal.description | truncate(150) }}
    </p>

    <div class="row gx-3 gy-1 small text-muted align-items-center">
        <div class="col-auto">
            <strong>Status:</strong>
            {% if proposal.status == 'pending_leader_review' %}
                <span class="badge bg-info-subtle text-info-emphasis rounded-pill px-2 py-1">Pending Leader Review</span>
            {% elif proposal.status == 'pending_members_accept' %}
                <span class="badge bg-warning-subtle text-warning-emphasis rounded-pill px-2 py-1">Pending Member Acceptance ({{ accepted_count | default(0) }}/5)</span>
            {% elif proposal.status == 'accepted' %}
                <span class="badge bg-success-subtle text-success-emphasis rounded-pill px-2 py-1">Accepted & Club Created</span>
            {% elif proposal.status == 'rejected' %}
                 <span class="badge bg-danger-subtle text-danger-emphasis rounded-pill px-2 py-1">Rejected</span>
            {% else %}
                <span class="badge bg-secondary-subtle text-secondary-emphasis rounded-pill px-2 py-1">{{ proposal.status | title }}</span>
            {% endif %}
        </div>
        <div class="col-auto">
            <strong>Creator:</strong> {{ proposal.creator.full_name or proposal.creator.username if proposal.creator else 'N/A' }}
        </div>
        {% if proposal.reviewed_by %}
        <div class="col-auto">
            <strong>Reviewed By:</strong> {{ proposal.reviewed_by.full_name or proposal.reviewed_by.username }}
        </div>
         {% if proposal.reviewed_at %}
            <div class="col-auto"><strong>On:</strong> {{ proposal.reviewed_at | dateformat }}</div>
        {% endif %}
        {% endif %}
    </div>

    {% if proposal.leader_review_notes and (current_user.id == proposal.creator_id or current_user.is_tc_leader) %}
        <div class="mt-2 p-2 bg-light-subtle border rounded small">
            <strong class="d-block mb-1">Leader's Review Notes:</strong>
            <p class="mb-0 fst-italic">{{ proposal.leader_review_notes }}</p>
        </div>
    {% endif %}
</div>{# templates/partials/_asset_report_item.html - Nexus School Management System #}
{# Gemini 3 Pro Preview - Phase C.2 #}
{#
    Reusable item for displaying an asset report in a list.
    Expects a `report` object (AssetReport instance) in the context.
    - report.asset (related Asset object, can be None for general reports)
    - report.reporter (User object)
    - report.resolver (User object, can be None)
#}
<div class="list-group-item list-group-item-action flex-column align-items-start asset-report-item py-3 px-3 mb-2 shadow-sm border rounded">
    <div class="d-flex w-100 justify-content-between mb-2">
        <h6 class="mb-1 font-heading">
            <i class="bi {{ 'bi-tools text-danger' if report.status in ['Pending', 'In Progress'] else ('bi-check2-circle text-success' if report.status == 'Resolved' else 'bi-slash-circle text-secondary') }} me-2"></i>
            Report ID: {{ report.id }}
            {% if report.asset %}
                - For Asset: <a href="{{ url_for('edit_asset', asset_id=report.asset.id) if current_user.role.name in ['hr_ceo', 'system_admin'] else '#' }}"
                                class="text-decoration-none {% if not (current_user.role.name in ['hr_ceo', 'system_admin']) %} pe-none text-dark {% endif %}">
                                {{ report.asset.name }} (ID: {{ report.asset.id }})
                              </a>
            {% else %}
                <span class="fst-italic text-muted">- General Report</span>
            {% endif %}
        </h6>
        <small class="text-muted" title="{{ report.report_date | datetimeformat('%Y-%m-%d %H:%M:%S UTC') }}">
            {{ report.report_date | datetimeformat('%b %d, %Y') }}
        </small>
    </div>

    <p class="mb-2 text-muted- GGGGGGGGGGG">
        <strong class="text-dark">Issue:</strong> {{ report.damage_description | truncate(200) }}
    </p>

    <div class="row gx-3 gy-2 small text-muted align-items-center">
        <div class="col-auto">
            <strong>Status:</strong>
            {% if report.status == 'Pending' %}
                <span class="badge bg-warning-subtle text-warning-emphasis rounded-pill px-2 py-1">{{ report.status }}</span>
            {% elif report.status == 'In Progress' %}
                <span class="badge bg-info-subtle text-info-emphasis rounded-pill px-2 py-1">{{ report.status }}</span>
            {% elif report.status == 'Resolved' %}
                <span class="badge bg-success-subtle text-success-emphasis rounded-pill px-2 py-1">{{ report.status }}</span>
            {% elif report.status == 'Rejected' %}
                <span class="badge bg-danger-subtle text-danger-emphasis rounded-pill px-2 py-1">{{ report.status }}</span>
            {% else %}
                <span class="badge bg-secondary-subtle text-secondary-emphasis rounded-pill px-2 py-1">{{ report.status }}</span>
            {% endif %}
        </div>
        <div class="col-auto">
            <strong>Reported by:</strong> {{ report.reporter.full_name or report.reporter.username if report.reporter else 'N/A' }}
        </div>
        {% if report.date_of_damage %}
        <div class="col-auto">
            <strong>Damage Date:</strong> {{ report.date_of_damage | dateformat }}
        </div>
        {% endif %}
        <div class="col-auto">
            <strong>Qty Damaged:</strong> {{ report.quantity_damaged }}
        </div>
        {% if report.status == 'Resolved' or report.status == 'Rejected' %}
            {% if report.resolver %}
            <div class="col-auto">
                <strong>{{ report.status }} by:</strong> {{ report.resolver.full_name or report.resolver.username }}
            </div>
            {% endif %}
            {% if report.resolved_date %}
            <div class="col-auto">
                 <strong>{{ report.status }} on:</strong> {{ report.resolved_date | dateformat }}
            </div>
            {% endif %}
        {% endif %}
    </div>

    {% if report.resolution_notes and (report.status == 'Resolved' or report.status == 'Rejected') %}
        <div class="mt-2 p-2 bg-light-subtle border rounded small">
            <strong class="d-block mb-1">Resolution Notes:</strong>
            <p class="mb-0 fst-italic">{{ report.resolution_notes }}</p>
        </div>
    {% endif %}

    {# Action button for HR/CEO to resolve/view details #}
    {% if current_user.role.name in ['hr_ceo', 'system_admin'] and report.status not in ['Resolved', 'Rejected'] %}
        <div class="mt-3">
            <a href="{{ url_for('resolve_asset_report', report_id=report.id) }}" class="btn btn-sm btn-outline-primary">
                <i class="bi bi-pencil-fill me-1"></i> Review/Resolve Report
            </a>
        </div>
    {% elif current_user.role.name in ['hr_ceo', 'system_admin'] %}
         <div class="mt-3">
            <a href="{{ url_for('resolve_asset_report', report_id=report.id) }}" class="btn btn-sm btn-outline-secondary">
                <i class="bi bi-eye-fill me-1"></i> View Resolved Details
            </a>
        </div>
    {% endif %}
</div>{% extends "layout/base.html" %}

{% block page_title %}Report General Issue{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-tools text-danger me-2"></i>Report General Asset Issue
        </h1>
        <a href="javascript:history.back()" class="btn btn-sm btn-outline-secondary">
            <i class="bi bi-arrow-left-circle me-1"></i> Cancel & Go Back
        </a>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    <div class="row justify-content-center">
        <div class="col-lg-8 col-md-10">
            <div class="card shadow-sm">
                 <div class="card-header bg-danger-subtle text-danger-emphasis">
                    <h5 class="mb-0 font-heading">General Issue Report Form</h5>
                </div>
                <div class="card-body p-4">
                    <p class="text-muted">
                        Use this form if you are reporting an issue that isn't tied to a specific asset in the inventory,
                        or if you cannot find the asset. Please be as descriptive as possible.
                    </p>

                    {% include 'layout/_flash_messages.html' %}

                    <form method="POST" action="{{ url_for('report_asset_general') }}" novalidate>
                        {{ form.hidden_tag() if form.hidden_tag }} {# CSRF Token #}

                        {# Optional: Add a field for user to describe the asset if known #}
                        <div class="mb-3">
                            <label for="assetNameDescription" class="form-label fw-medium">Asset Name/Identifier (if known)</label>
                            <input type="text" id="assetNameDescription" name="asset_name_description" class="form-control" placeholder="e.g., 'Broken chair in Room 102', 'Projector in main hall not working'">
                            <small class="form-text text-muted">Help us identify the item or location if this is not a cataloged asset.</small>
                        </div>

                        <div class="mb-3">
                            {{ form.damage_description.label(class="form-label fw-medium") }}
                            {{ form.damage_description(class="form-control" + (" is-invalid" if form.damage_description.errors else ""), rows="5", placeholder="Describe the issue in detail...") }}
                            {% if form.damage_description.errors %}
                                <div class="invalid-feedback">
                                    {% for error in form.damage_description.errors %}<span>{{ error }}</span>{% endfor %}
                                </div>
                            {% endif %}
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                {{ form.date_of_damage.label(class="form-label fw-medium") }}
                                {{ form.date_of_damage(class="form-control flatpickr-date" + (" is-invalid" if form.date_of_damage.errors else ""), placeholder="YYYY-MM-DD (Optional)") }}
                                {% if form.date_of_damage.errors %}
                                    <div class="invalid-feedback">
                                        {% for error in form.date_of_damage.errors %}<span>{{ error }}</span>{% endfor %}
                                    </div>
                                {% endif %}
                            </div>
                            <div class="col-md-6 mb-3">
                                {{ form.quantity_damaged.label(class="form-label fw-medium") }}
                                {{ form.quantity_damaged(class="form-control" + (" is-invalid" if form.quantity_damaged.errors else ""), type="number", min="1") }}
                                 <small class="form-text text-muted">Quantity of items affected.</small>
                                {% if form.quantity_damaged.errors %}
                                    <div class="invalid-feedback">
                                        {% for error in form.quantity_damaged.errors %}<span>{{ error }}</span>{% endfor %}
                                    </div>
                                {% endif %}
                            </div>
                        </div>

                        <hr class="my-4">

                        <div class="d-flex justify-content-end">
                            <a href="javascript:history.back()" class="btn btn-outline-secondary me-2">Cancel</a>
                            {{ form.submit(class="btn btn-danger px-4", value="Submit General Report") }}
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}{# templates/partials/_comment_item.html (Unified & Enhanced) #}
{#
    Context:
    - comment: The comment object (e.g., GlobalComment, ChannelComment)
               Expected attributes: id, content, timestamp, is_edited,
                                  author (User object with id, full_name, username, profile_photo_url),
                                  post_id (or parent_post_id if more generic)
    - current_user: The logged-in user.
    - post_type: 'global', 'channel', 'tc_feed' etc. (used for data attributes)
    - parent_post_author_id: ID of the author of the parent post
    - can_current_user_manage_parent_content: Boolean (e.g., is channel owner/admin)
#}
{% set post_type = post_type | default('global') %}
{% set commenter_name = comment.author.full_name or comment.author.username if comment.author else "Anonymous" %}
{% set commenter_avatar = comment.author.profile_photo_url or url_for('static', filename='img/placeholders/user_avatar_default.png') if comment.author else url_for('static', filename='img/placeholders/user_avatar_default.png') %}
{% set comment_dom_id = "comment-" ~ post_type ~ "-" ~ comment.id %}

<div class="social-comment-item d-flex mb-2 pt-2 {% if not loop or not loop.last %}pb-2 border-bottom border-light-subtle{% endif %}" id="{{ comment_dom_id }}" data-comment-id="{{ comment.id }}">
    <a href="{{ url_for('user_profile_view', user_id=comment.author.id) if comment.author else '#' }}" class="me-2 flex-shrink-0" aria-label="{{ commenter_name }}'s profile">
        <img src="{{ commenter_avatar }}" alt="{{ commenter_name }}" class="rounded-circle" width="32" height="32" style="object-fit: cover;">
    </a>
    <div class="flex-grow-1">
        <div class="comment-bubble bg-light-subtle p-2 rounded-3"> {# Added rounded-3 #}
            <div class="d-flex justify-content-between align-items-center mb-1">
                <a href="{{ url_for('user_profile_view', user_id=comment.author.id) if comment.author else '#' }}" class="text-decoration-none">
                    <small class="fw-bold text-dark font-heading">{{ commenter_name }}</small>
                </a>
                {# Comment Actions: Edit/Delete. Permissions refined. #}
                {% set can_edit = comment.author and comment.author.id == current_user.id %}
                {% set can_delete_own = can_edit %}
                {% set can_admin_delete = (parent_post_author_id and parent_post_author_id == current_user.id) or 
                                          can_current_user_manage_parent_content or 
                                          (current_user.role and current_user.role.name in ['system_admin', 'hr_ceo']) %}
                
                {% if can_edit or can_delete_own or can_admin_delete %}
                <div class="dropdown comment-actions ms-auto">
                    <button class="btn btn-sm btn-link text-muted py-0 px-1" type="button" data-bs-toggle="dropdown" aria-expanded="false" aria-label="Comment options">
                        <i class="bi bi-three-dots"></i>
                    </button>
                    <ul class="dropdown-menu dropdown-menu-end">
                        {% if can_edit %}
                        <li><a class="dropdown-item edit-comment-btn" href="#" data-comment-id="{{ comment.id }}" data-post-id="{{ comment.post_id }}" data-post-type="{{ post_type }}"><i class="bi bi-pencil me-2"></i>Edit</a></li>
                        {% endif %}
                        {% if can_delete_own or can_admin_delete %}
                        <li>
                            <button class="dropdown-item text-danger delete-comment-btn" data-comment-id="{{ comment.id }}" data-post-id="{{ comment.post_id }}" data-post-type="{{ post_type }}">
                                <i class="bi bi-trash me-2"></i>Delete
                            </button>
                        </li>
                        {% endif %}
                    </ul>
                </div>
                {% endif %}
            </div>
            <p class="mb-0 comment-content-text text-dark-emphasis small" id="comment-content-{{ comment_dom_id }}">{{ comment.content | nl2br | safe }}</p>
        </div>
        <div class="d-flex justify-content-between align-items-center mt-1">
            <small class="text-muted ms-1 comment-timestamp" title="{{ comment.timestamp | datetimeformat('%Y-%m-%d %H:%M:%S UTC') }}">
                {{ comment.timestamp | humanize_time_diff }}
                {% if comment.is_edited %} <span class="fst-italic ms-1">(edited)</span>{% endif %}
            </small>
            <div>
                {# Save Comment Button (Phase 2) #}
                <button class="btn btn-sm btn-link text-muted p-0 save-item-btn d-none" {# Hidden until Phase 2 #}
                        data-item-id="{{ comment.id }}" 
                        data-item-type="{{ post_type }}_comment" 
                        aria-label="Save comment">
                    <i class="bi bi-bookmark small"></i>
                </button>
                {# Reply to Comment (Future) #}
                {# <button class="btn btn-sm btn-link text-muted p-0 ms-2 reply-to-comment-btn" data-comment-id="{{ comment.id }}">
                    <i class="bi bi-reply small"></i> Reply
                </button> #}
            </div>
        </div>
    </div>
</div>{# templates/partials/_request_history_log_item.html - Nexus School Management System #}
{# Gemini 3 Pro Preview - Phase H.1 #}
{#
    Reusable item for displaying a single request history entry.
    Expects a `history_item` object (RequestHistory instance) in the context.
    - history_item.changed_by (User object)
    - history_item.timestamp
    - history_item.action
    - history_item.old_status
    - history_item.new_status
    - history_item.notes
#}
<li class="list-group-item request-history-item py-2 px-3">
    <div class="d-flex w-100 justify-content-between">
        <small class="text-muted history-timestamp" title="{{ history_item.timestamp | datetimeformat('%Y-%m-%d %H:%M:%S UTC') }}">
            <i class="bi bi-stopwatch-fill me-1"></i>{{ history_item.timestamp | humanize_time_diff }}
        </small>
        <small class="text-muted history-actor">
            By: {{ history_item.changed_by.full_name or history_item.changed_by.username if history_item.changed_by else 'System' }}
        </small>
    </div>
    <p class="mb-1 history-action- GGGGGGGGGGG">
        <strong class="font-heading">{{ history_item.action | title }}:</strong>
        {% if history_item.action == 'Submitted' %}
            Request submitted and status set to <span class="badge bg-warning-subtle text-warning-emphasis rounded-pill px-1">{{ history_item.new_status }}</span>.
        {% elif history_item.old_status %}
            Status changed from <span class="badge bg-secondary-subtle text-secondary-emphasis rounded-pill px-1">{{ history_item.old_status }}</span>
            to <span class="badge bg-primary-subtle text-primary-emphasis rounded-pill px-1">{{ history_item.new_status }}</span>.
        {% else %}
            Status set to <span class="badge bg-primary-subtle text-primary-emphasis rounded-pill px-1">{{ history_item.new_status }}</span>.
        {% endif %}
    </p>
    {% if history_item.notes %}
        <small class="d-block text-muted fst-italic history-notes ps-3 border-start border-secondary border-2" style="white-space: pre-wrap;">
            <i class="bi bi-blockquote-left me-1"></i> {{ history_item.notes | safe }} {# Safe if notes can contain simple HTML for formatting #}
        </small>
    {% endif %}
</li>{# templates/partials/_task_list_item.html - Nexus School Management System #}
{# Gemini 3 Pro Preview - Phase G.2 #}
{#
    Reusable item for displaying a task in a list (e.g., My Tasks, Tasks I Assigned).
    Expects a `user_task` object (UserTask instance) for 'My Tasks' view,
    OR a `task` object (Task instance) for 'Tasks I Assigned' view.
    Also `current_user`.
    If `user_task` is provided, it represents the current user's specific assignment.
    If only `task` is provided, it's a general view of the task itself (e.g., for a creator).
#}

{% set t = user_task.task if user_task else task %}
{% set assignment_status = user_task.status if user_task else 'N/A' %}
{% set user_task_id_for_link = user_task.id if user_task else None %}

{# Determine link: if user_task, link to user_task_detail. If task (creator view), link to my_assigned_tasks_detail. #}
{% set detail_url = url_for('view_user_task', user_task_id=user_task_id_for_link) if user_task_id_for_link else url_for('view_assigned_task_detail', task_id=t.id) %}

<a href="{{ detail_url }}" class="list-group-item list-group-item-action task-list-item flex-column align-items-start py-3 px-3 mb-2 shadow-sm border rounded
    {% if assignment_status == 'Open' %} border-info-subtle border-start-info border-start-3
    {% elif assignment_status == 'In Progress' %} border-primary-subtle border-start-primary border-start-3
    {% elif assignment_status in ['Completed (Pending Review)', 'Delayed (Pending Review)', 'Rejected (Pending Review)'] %} border-warning-subtle border-start-warning border-start-3
    {% elif assignment_status == 'Accepted' %} border-success-subtle border-start-success border-start-3
    {% elif assignment_status == 'Review Rejected' %} border-danger-subtle border-start-danger border-start-3
    {% else %} border-light-subtle {% endif %}">

    <div class="d-flex w-100 justify-content-between mb-1">
        <h6 class="mb-1 font-heading task-title">
            <i class="bi bi-check2-square me-1"></i> {{ t.title | truncate(60) }}
        </h6>
        <small class="text-muted task-due-date" title="Due Date">
            {% if t.due_date %}
                <i class="bi bi-calendar-event me-1"></i> {{ t.due_date | dateformat }}
                {% if t.due_date < now.date() and assignment_status not in ['Accepted', 'Resolved'] %}
                    <span class="badge bg-danger-subtle text-danger-emphasis ms-1 rounded-pill">OVERDUE</span>
                {% elif (t.due_date - now.date()).days <= 2 and assignment_status not in ['Accepted', 'Resolved'] %}
                     <span class="badge bg-warning-subtle text-warning-emphasis ms-1 rounded-pill">DUE SOON</span>
                {% endif %}
            {% else %}
                No Due Date
            {% endif %}
        </small>
    </div>

    <p class="mb-2 text-muted- GGGGGGGGGGG small task-description">
        {{ t.description | truncate(120) }}
    </p>

    <div class="d-flex w-100 justify-content-between align-items-center small">
        <div>
            <span class="me-3" title="Urgency">
                <strong>Urgency:</strong>
                {% if t.urgency == 'Critical' %}<span class="badge bg-danger text-white rounded-pill px-2">{{ t.urgency }}</span>
                {% elif t.urgency == 'High' %}<span class="badge bg-warning text-dark rounded-pill px-2">{{ t.urgency }}</span>
                {% elif t.urgency == 'Medium' %}<span class="badge bg-info text-white rounded-pill px-2">{{ t.urgency }}</span>
                {% else %}<span class="badge bg-secondary-subtle text-secondary-emphasis rounded-pill px-2">{{ t.urgency }}</span>
                {% endif %}
            </span>
            {% if user_task %} {# Display current user's assignment status #}
            <span title="Your Status">
                <strong>My Status:</strong>
                {% if assignment_status == 'Open' %} <span class="badge bg-info-subtle text-info-emphasis rounded-pill px-2">{{ assignment_status }}</span>
                {% elif assignment_status == 'In Progress' %} <span class="badge bg-primary-subtle text-primary-emphasis rounded-pill px-2">{{ assignment_status }}</span>
                {% elif assignment_status.endswith('(Pending Review)') %} <span class="badge bg-warning-subtle text-warning-emphasis rounded-pill px-2">{{ assignment_status }}</span>
                {% elif assignment_status == 'Accepted' %} <span class="badge bg-success-subtle text-success-emphasis rounded-pill px-2">{{ assignment_status }}</span>
                {% elif assignment_status == 'Review Rejected' %} <span class="badge bg-danger-subtle text-danger-emphasis rounded-pill px-2">Rejected by Reviewer</span>
                {% else %} <span class="badge bg-secondary-subtle text-secondary-emphasis rounded-pill px-2">{{ assignment_status }}</span>
                {% endif %}
            </span>
            {% endif %}
        </div>
        <small class="text-muted task-creator">
            Created by: {{ t.created_by.full_name or t.created_by.username if t.created_by else 'N/A' }}
        </small>
    </div>
</a>{# templates/files/view_file_modal_content.html (Conceptual) #}
{# Expects `file_to_preview` (File object) #}
<div class="modal-header">
    <h5 class="modal-title font-heading" id="filePreviewModalLabel">{{ file_to_preview.original_filename }}</h5>
    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
</div>
<div class="modal-body text-center">
    {% if file_to_preview.mimetype and file_to_preview.mimetype.startswith('image/') %}
        <img src="{{ url_for('download_social_file', file_id=file_to_preview.id) }}" class="img-fluid rounded" alt="Preview">
    {% elif file_to_preview.mimetype and file_to_preview.mimetype.startswith('video/') %}
        <video controls class="img-fluid rounded" style="max-height: 70vh;">
            <source src="{{ url_for('download_social_file', file_id=file_to_preview.id) }}" type="{{ file_to_preview.mimetype }}">
            Your browser does not support the video tag.
        </video>
    {% elif file_to_preview.mimetype == 'application/pdf' %}
        <object data="{{ url_for('download_social_file', file_id=file_to_preview.id) }}" type="application/pdf" width="100%" height="500px">
            <p>PDF preview not available. <a href="{{ url_for('download_social_file', file_id=file_to_preview.id) }}">Download PDF</a>.</p>
        </object>
    {% else %}
        <i class="bi bi-file-earmark-text-fill display-1 text-secondary mb-3"></i>
        <p>No preview available for this file type.</p>
    {% endif %}
</div>
<div class="modal-footer">
    <a href="{{ url_for('download_social_file', file_id=file_to_preview.id) }}" class="btn btn-primary" download="{{ file_to_preview.original_filename }}">
        <i class="bi bi-download me-2"></i>Download ({{ (file_to_preview.size / 1024 / 1024) | round(2) }} MB)
    </a>
    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Close</button>
</div>{% extends "layout/base.html" %}
{% block page_title %}My Borrowed Books{% endblock %}
{% block content_header %}
    <div class="d-flex justify-content-between align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0"><i class="bi bi-book-half me-2 text-primary"></i>My Borrowed Books</h1>
        <a href="{{ url_for('student_dashboard') }}" class="btn btn-sm btn-outline-secondary">
            <i class="bi bi-arrow-left-circle me-1"></i> Back to Dashboard
        </a>
    </div>
{% endblock %}
{% block content %}
<div class="container-fluid px-0">
    {% include 'layout/_flash_messages.html' %}
    <div class="card shadow-sm">
        <div class="card-body p-0">
            {% if checkouts and checkouts | length > 0 %}
                <div class="list-group list-group-flush">
                    {% for checkout in checkouts %}
                        {% include 'partials/_book_checkout_item.html' %}
                    {% endfor %}
                </div>
            {% else %}
                <div class="text-center text-muted p-5 content-placeholder">
                    <i class="bi bi-journal-x display-3 mb-3"></i>
                    <h4 class="font-heading">No Books Borrowed</h4>
                    <p>You currently have no books checked out. <a href="{{ url_for('list_all_assets', category='Books') }}">Browse available books?</a></p>
                </div>
            {% endif %}
        </div>
    </div>
</div>
{% endblock %}{% extends "layout/base.html" %}

{# DEFINE MACROS FIRST #}
{% macro render_stat_card(title, value, icon, color_class, url=None, url_text='View Details') %}
<div class="col">
    <div class="card dashboard-stat-card h-100 shadow-sm">
        <div class="card-body d-flex align-items-center">
            <div class="stat-icon display-4 me-3 {{ color_class or 'text-primary' }}">
                <i class="bi {{ icon or 'bi-bar-chart-line-fill' }}"></i>
            </div>
            <div>
                <h6 class="card-subtitle mb-1 text-body-secondary text-uppercase" style="font-size: 0.75rem;">{{ title }}</h6>
                <p class="card-text display-6 fw-bold mb-0 font-heading">{{ value }}</p>
            </div>
        </div>
        {% if url %}
        <a href="{{ url }}" class="card-footer text-decoration-none text-muted bg-light-subtle hover-bg-light small">
            {{ url_text }} <i class="bi bi-arrow-right-short ms-1"></i>
        </a>
        {% endif %}
    </div>
</div>
{% endmacro %}

{% macro render_quick_links(links, title="Quick Links") %}
    {% if links %}
    <div class="card shadow-sm dashboard-quick-links-card">
        <div class="card-header bg-light-subtle">
            <h5 class="mb-0 font-heading"><i class="bi bi-lightning-charge-fill me-2"></i>{{ title }}</h5>
        </div>
        <div class="list-group list-group-flush">
            {% for link in links %}
                <a href="{{ link.url | default('#') }}" class="list-group-item list-group-item-action d-flex align-items-center py-3">
                    <i class="bi {{ link.icon | default('bi-link-45deg') }} fs-5 me-3 {{ link.color_class | default('text-primary') }}" style="min-width: 24px;"></i>
                    <span class="fw-medium">{{ link.text or 'Link' }}</span>
                    <i class="bi bi-chevron-right ms-auto small"></i>
                </a>
            {% endfor %}
        </div>
    </div>
    {% endif %}
{% endmacro %}

{% macro render_recent_activity(activities) %}
<div class="card shadow-sm recent-activity-card mt-4">
    <div class="card-header bg-light-subtle">
        <h5 class="mb-0 font-heading"><i class="bi bi-clock-history me-2"></i>Recent Activity</h5>
    </div>
    <div class="card-body" style="max-height: 400px; overflow-y: auto;">
        {% if activities %}
            <ul class="list-unstyled mb-0">
                {% for activity in activities %}
                    <li class="d-flex align-items-start pb-3 {% if not loop.last %}mb-3 border-bottom{% endif %}">
                        <div class="activity-icon me-3">
                            <span class="badge bg-{{ activity.badge_color or 'secondary' }} p-2 rounded-circle d-flex">
                                <i class="bi {{ activity.icon or 'bi-bell' }} fs-5 text-white"></i>
                            </span>
                        </div>
                        <div>
                            <p class="mb-1">{{ activity.content | safe }}</p>
                            <small class="text-muted"><i class="bi bi-calendar3 me-1"></i>{{ activity.timestamp | humanize_time_diff }}</small>
                            {% if activity.link_url %}<a href="{{ activity.link_url }}" class="ms-2 small">View</a>{% endif %}
                        </div>
                    </li>
                {% endfor %}
            </ul>
        {% else %}
            <div class="text-center text-muted p-4"><i class="bi bi-moon-stars fs-1 mb-2"></i><p>No recent activity.</p></div>
        {% endif %}
    </div>
</div>
{% endmacro %}
{# END OF MACRO DEFINITIONS #}

{% block page_title %}Student Dashboard{% endblock %}

{% block content_header %}
<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2 font-heading"><i class="bi bi-mortarboard-fill me-2 text-primary"></i>Student Dashboard</h1>
    <div class="btn-toolbar mb-2 mb-md-0">
        {% if current_user.is_tc_member %}
            <a href="{{ url_for('talent_club_dashboard_member_view') }}" class="btn btn-sm btn-info me-2 shadow-sm">
                <i class="bi bi-trophy-fill me-1"></i>Talent Club
            </a>
        {% else %}
            <form action="{{ url_for('join_talent_club') }}" method="POST" class="d-inline">
                {{ csrf_token() }}
                <button type="submit" class="btn btn-sm btn-warning me-2 shadow-sm" data-bs-toggle="tooltip" title="Join the Talent Club to participate in clubs, activities, and community events.">
                    <i class="bi bi-stars me-1"></i>Join Talent Club
                </button>
            </form>
        {% endif %}
        <a href="{{ url_for('settings') }}" class="btn btn-sm btn-outline-secondary"><i class="bi bi-gear-fill me-1"></i>Settings</a>
    </div>
</div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    <div class="alert alert-primary-subtle border-primary-subtle mb-4">
        <h4 class="alert-heading font-heading">Welcome back, {{ current_user.full_name or current_user.username }}!</h4>
        <p class="mb-0">Here's a quick overview of your academic status and activities.</p>
    </div>

    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-4 g-4 mb-4">
        {{ render_stat_card("Unread Notifications", unread_notifications_count|default(0), "bi-bell-fill", "text-warning", url_for('view_notifications')) }}
        {{ render_stat_card("Unread Messages", unread_messages_count|default(0), "bi-chat-left-text-fill", "text-success", url_for('contacts_list')) }}
        {{ render_stat_card("Borrowed Books", borrowed_books|length, "bi-book-half", "text-info", url_for('view_library')) }}
        {{ render_stat_card("Assigned Tasks", my_tasks|length, "bi-list-task", "text-primary", url_for('my_tasks')) }}
    </div>

    <div class="row g-4">
        <div class="col-lg-7">
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-light-subtle"><h5 class="mb-0 font-heading"><i class="bi bi-award-fill me-2"></i>My Marks</h5></div>
                <div class="card-body p-0">
                    {% if marks_records %}
                        <div class="table-responsive">
                            <table class="table table-hover table-striped mb-0 align-middle">
                                <thead class="table-light">
                                    <tr>
                                        <th scope="col">Subject</th>
                                        <th scope="col" class="text-center">Sem 1</th>
                                        <th scope="col" class="text-center">Sem 2</th>
                                        <th scope="col" class="text-center">Total</th>
                                        <th scope="col" class="text-center">Average</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {% for mark in marks_records %}
                                    <tr>
                                        <td class="fw-medium">{{ mark.subject }}</td>
                                        <td class="text-center">{{ mark.semester_1 if mark.semester_1 is not none else '—' }}</td>
                                        <td class="text-center">{{ mark.semester_2 if mark.semester_2 is not none else '—' }}</td>
                                        <td class="text-center fw-bold">{{ mark.total if mark.total is not none else '—' }}</td>
                                        <td class="text-center fw-bold {% if mark.average and mark.average >= 75 %}text-success{% elif mark.average and mark.average >= 50 %}text-warning{% else %}text-danger{% endif %}">{{ "%.1f"|format(mark.average) if mark.average is not none else '—' }}</td>
                                    </tr>
                                    {% endfor %}
                                </tbody>
                            </table>
                        </div>
                    {% else %}
                        <div class="p-4 text-center text-muted"><i class="bi bi-journal-x fs-2 d-block mb-2"></i>No marks recorded yet.</div>
                    {% endif %}
                </div>
            </div>

            <div class="card shadow-sm">
                <div class="card-header bg-light-subtle"><h5 class="mb-0 font-heading"><i class="bi bi-calendar-check-fill me-2"></i>Recent Attendance</h5></div>
                <ul class="list-group list-group-flush">
                    {% for att in recent_attendance %}
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <div>
                                <span class="fw-medium">{{ att.date | dateformat('%A, %b %d') }}</span>
                                {% if att.notes %}<small class="d-block text-muted fst-italic">- {{ att.notes }}</small>{% endif %}
                            </div>
                            <span class="badge fs-09rem p-2 rounded-pill {% if att.status == 'Present' %}bg-success-subtle text-success-emphasis{% elif att.status == 'Late' %}bg-warning-subtle text-warning-emphasis{% elif att.status == 'Excused' %}bg-info-subtle text-info-emphasis{% else %}bg-danger-subtle text-danger-emphasis{% endif %}">{{ att.status }}</span>
                        </li>
                    {% else %}
                         <li class="list-group-item text-center text-muted p-4"><i class="bi bi-calendar-x fs-2 d-block mb-2"></i>No recent attendance found.</li>
                    {% endfor %}
                </ul>
            </div>
        </div>

        <div class="col-lg-5">
            {% set student_quick_links = [
                {'url': url_for('view_library'), 'text': 'My Borrowed Books', 'icon': 'bi-book-half', 'color_class': 'text-info'},
                {'url': url_for('my_tasks'), 'text': 'View My Tasks', 'icon': 'bi-list-task', 'color_class': 'text-primary'},
                {'url': url_for('view_student_behavior_records', user_id=current_user.id), 'text': 'My Behavior Log', 'icon': 'bi-person-vcard', 'color_class': 'text-warning'},
                {'url': url_for('contacts_list'), 'text': 'Chat with Teachers', 'icon': 'bi-chat-dots-fill', 'color_class': 'text-success'}
            ] %}
            {{ render_quick_links(student_quick_links) }}
            
            {# **FIX:** Added the Recent Activity section that was missing from the original template #}
            {{ render_recent_activity(recent_activities) }}

            {% if teachers %}
            <div class="card shadow-sm mt-4">
                <div class="card-header bg-light-subtle"><h5 class="mb-0 font-heading"><i class="bi bi-person-workspace me-2"></i>My Teachers ({{ teachers_count }})</h5></div>
                <div class="list-group list-group-flush">
                    {% for teacher in teachers %}
                        <a href="{{ url_for('universal_chat', target_user_id=teacher.id) }}" class="list-group-item list-group-item-action d-flex align-items-center">
                            <img src="{{ url_for('static', filename=(teacher.profile_photo_url or 'img/placeholders/user_avatar_default.png')) }}" alt="{{ teacher.full_name }}" class="rounded-circle me-3" style="width: 40px; height: 40px; object-fit: cover;">
                            <div>
                                <span class="fw-medium">{{ teacher.full_name }}</span>
                                <small class="d-block text-muted">{{ teacher.teacher_profiles[0].subject if teacher.teacher_profiles else 'Teacher' }}</small>
                            </div>
                            <i class="bi bi-chat-dots-fill ms-auto text-primary"></i>
                        </a>
                    {% endfor %}
                </div>
            </div>
            {% endif %}
        </div>
    </div>
</div>
{% endblock %}{% extends "layout/base.html" %}

{% block page_title %}My Settings{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-person-fill-gear me-2 text-primary"></i>Account Settings & Profile
        </h1>
        {# Optional: Button for a specific action, e.g., View Public Profile #}
        {# <div class="btn-toolbar mb-2 mb-md-0">
            <a href="#" class="btn btn-sm btn-outline-info">
                <i class="bi bi-eye-fill me-1"></i> View My Public Profile
            </a>
        </div> #}
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    <form method="POST" action="{{ url_for('settings') }}" enctype="multipart/form-data" novalidate>
        {{ form.hidden_tag() if form.hidden_tag }} {# CSRF token and other hidden fields #}

        <div class="row g-4">
            {# Left Column: Profile Picture and Basic Info #}
            <div class="col-lg-4 col-xl-3">
                <div class="card shadow-sm mb-4">
                    <div class="card-header">
                        <h5 class="mb-0 font-heading"><i class="bi bi-person-badge me-2"></i>Profile Picture</h5>
                    </div>
                    <div class="card-body text-center">
                        {% if current_user.profile_photo_url %}
                            <img src="{{ url_for('static', filename=current_user.profile_photo_url) }}"
                                 alt="{{ current_user.username }}'s profile photo"
                                 class="img-fluid rounded-circle mb-3 shadow-sm"
                                 style="width: 150px; height: 150px; object-fit: cover; border: 3px solid var(--nexus-border-color);"
                                 id="profileImagePreview">
                        {% else %}
                            <img src="{{ url_for('static', filename='img/placeholders/user_avatar_default.png') }}"
                                 alt="Default profile avatar"
                                 class="img-fluid rounded-circle mb-3 shadow-sm"
                                 style="width: 150px; height: 150px; object-fit: cover; border: 3px solid var(--nexus-border-color);"
                                 id="profileImagePreview">
                        {% endif %}

                        {# Profile Photo Upload Field - from UniversalSettingsForm #}
                        {% if form.profile_photo %}
                            <div class="mb-3">
                                {{ form.profile_photo.label(class="form-label visually-hidden") }} {# Label can be hidden if input is clear #}
                                {{ form.profile_photo(class="form-control form-control-sm" + (" is-invalid" if form.profile_photo.errors else ""), id="profilePhotoInput") }}
                                <small class="form-text text-muted d-block mt-1">Max 2MB. JPG, PNG, GIF, WEBP.</small>
                                {% if form.profile_photo.errors %}
                                    <div class="invalid-feedback d-block">
                                        {% for error in form.profile_photo.errors %}<span>{{ error }}</span>{% endfor %}
                                    </div>
                                {% endif %}
                            </div>
                        {% elif form.profile_photo_url %} {# Fallback to URL if FileField isn't on the form #}
                             <div class="mb-3">
                                {{ form.profile_photo_url.label(class="form-label") }}
                                {{ form.profile_photo_url(class="form-control" + (" is-invalid" if form.profile_photo_url.errors else ""), placeholder="http://example.com/photo.jpg (Optional)") }}
                                <small class="form-text text-muted">Direct link to an image (e.g., .jpg, .png).</small>
                                {% if form.profile_photo_url.errors %}
                                    <div class="invalid-feedback">
                                        {% for error in form.profile_photo_url.errors %}<span>{{ error }}</span>{% endfor %}
                                    </div>
                                {% endif %}
                            </div>
                        {% endif %}
                        <p class="text-muted small">Changes to profile picture may require a page refresh to update everywhere.</p>
                    </div>
                </div>

                <div class="card shadow-sm">
                    <div class="card-header">
                         <h5 class="mb-0 font-heading"><i class="bi bi-person-lines-fill me-2"></i>Role & Status</h5>
                    </div>
                    <ul class="list-group list-group-flush">
                        <li class="list-group-item"><strong>Role:</strong> {{ current_user.role.name.replace('_', ' ') | title if current_user.role else 'N/A' }}</li>
                        <li class="list-group-item"><strong>Status:</strong> <span class="badge {{ 'bg-success-subtle text-success-emphasis' if current_user.is_active else 'bg-danger-subtle text-danger-emphasis' }}">{{ 'Active' if current_user.is_active else 'Inactive' }}</span></li>
                        {% if current_user.role.name == 'student' %}
                        <li class="list-group-item"><strong>Grade:</strong> {{ current_user.grade or 'N/A' }}</li>
                        <li class="list-group-item"><strong>Section:</strong> {{ current_user.section or 'N/A' }}</li>
                        <li class="list-group-item">
                            <strong>TC Member:</strong>
                            {{ form.is_tc_member_display(class="form-check-input ms-2", disabled=True, role="switch") if form.is_tc_member_display else ('Yes' if current_user.is_tc_member else 'No') }}
                        </li>
                        {% endif %}
                    </ul>
                </div>
            </div>

            {# Right Column: Form Sections #}
            <div class="col-lg-8 col-xl-9">
                {% include 'layout/_flash_messages.html' %}

                {# Personal Information Section #}
                <div class="card shadow-sm mb-4">
                    <div class="card-header">
                        <h5 class="mb-0 font-heading"><i class="bi bi-person-vcard-fill me-2"></i>Personal Information</h5>
                    </div>
                    <div class="card-body">
                        <div class="mb-3">
                            {{ form.full_name.label(class="form-label") }}
                            {{ form.full_name(class="form-control" + (" is-invalid" if form.full_name.errors else ""), placeholder="Your Full Name") }}
                            {% if form.full_name.errors %}<div class="invalid-feedback">{% for e in form.full_name.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                {{ form.age.label(class="form-label") }}
                                {{ form.age(class="form-control" + (" is-invalid" if form.age.errors else ""), placeholder="e.g., 16") }}
                                {% if form.age.errors %}<div class="invalid-feedback">{% for e in form.age.errors %}{{e}}{% endfor %}</div>{% endif %}
                            </div>
                            <div class="col-md-6 mb-3">
                                {{ form.sex.label(class="form-label") }}
                                {{ form.sex(class="form-select" + (" is-invalid" if form.sex.errors else "")) }}
                                {% if form.sex.errors %}<div class="invalid-feedback">{% for e in form.sex.errors %}{{e}}{% endfor %}</div>{% endif %}
                            </div>
                        </div>
                        {# Additional personal fields from User model if added to form #}
                        {# e.g., form.date_of_birth, form.phone, form.address #}
                    </div>
                </div>

                {# Account Information Section #}
                <div class="card shadow-sm mb-4">
                    <div class="card-header">
                        <h5 class="mb-0 font-heading"><i class="bi bi-shield-lock me-2"></i>Account Credentials</h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                {{ form.username.label(class="form-label") }}
                                {{ form.username(class="form-control" + (" is-invalid" if form.username.errors else ""), placeholder="Your Username") }}
                                {% if form.username.errors %}<div class="invalid-feedback">{% for e in form.username.errors %}{{e}}{% endfor %}</div>{% endif %}
                            </div>
                            <div class="col-md-6 mb-3">
                                {{ form.email.label(class="form-label") }}
                                {{ form.email(class="form-control" + (" is-invalid" if form.email.errors else ""), placeholder="your.email@example.com") }}
                                {% if form.email.errors %}<div class="invalid-feedback">{% for e in form.email.errors %}{{e}}{% endfor %}</div>{% endif %}
                            </div>
                        </div>
                        <a href="{{ url_for('change_password') }}" class="btn btn-outline-secondary"><i class="bi bi-key-fill me-1"></i>Change My Password</a>
                    </div>
                </div>

                {# Notification Preferences Section (Placeholder) #}
                <div class="card shadow-sm mb-4">
                    <div class="card-header">
                        <h5 class="mb-0 font-heading"><i class="bi bi-bell-slash-fill me-2"></i>Notification Preferences</h5>
                    </div>
                    <div class="card-body">
                        <p class="text-muted">Manage how you receive notifications from Nexus.</p>
                        {# Example form fields if they exist on UniversalSettingsForm and User model #}
                        {# {% if form.email_notifications %}
                        <div class="form-check form-switch mb-2">
                            {{ form.email_notifications(class="form-check-input" + (" is-invalid" if form.email_notifications.errors else ""), role="switch", id="emailNotificationsSwitch") }}
                            {{ form.email_notifications.label(class="form-check-label", for="emailNotificationsSwitch") }}
                            {% if form.email_notifications.errors %}<div class="invalid-feedback d-block">{% for e in form.email_notifications.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>
                        {% endif %} #}
                        <div class="content-placeholder">
                            <i class="bi bi-tools fs-1 mb-2"></i>
                            <p>Notification settings will be available here soon.</p>
                        </div>
                    </div>
                </div>

                {# Other Settings Sections (Placeholders) - e.g., Appearance, Privacy #}

                <div class="mt-4 d-flex justify-content-end">
                    <button type="submit" class="btn btn-primary btn-lg px-4">
                        <i class="bi bi-save-fill me-2"></i>Save All Changes
                    </button>
                </div>
            </div>
        </div>
    </form>
</div>
{% endblock %}

{% block body_scripts %}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        console.log('Settings Page JS loaded.');

        const profilePhotoInput = document.getElementById('profilePhotoInput');
        const profileImagePreview = document.getElementById('profileImagePreview');

        if (profilePhotoInput && profileImagePreview) {
            profilePhotoInput.addEventListener('change', function(event) {
                const file = event.target.files[0];
                if (file) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        profileImagePreview.src = e.target.result;
                    }
                    reader.readAsDataURL(file);
                } else {
                    // If no file selected, or selection cancelled, revert to original or default
                    // This might need to fetch the original URL from a data attribute on the preview img
                    // For simplicity, not implemented here. The backend will handle no-change.
                }
            });
        }

        // Initialize TomSelect for any .tom-select elements if used on this page
        // (e.g., if a 'preferred_language' select field was enhanced)
        // initializeTomSelect(); // Assuming initializeTomSelect is in main.js or utils.js
    });
</script>
{% endblock %}{% extends "layout/base.html" %}

{# Macros - ideally in _macros.html and imported, but defined here as per teacher/dashboard.html pattern #}
{% macro render_stat_card(card_title, card_value, card_icon, card_color_class, card_url=None, card_url_text='View Details', card_id=None) %}
<div class="col">
    <div class="card dashboard-stat-card h-100 shadow-sm" {% if card_id %}id="{{ card_id }}"{% endif %}>
        <div class="card-body d-flex align-items-center">
            <div class="stat-icon display-4 me-3 {{ card_color_class | default('text-primary') }}">
                <i class="bi {{ card_icon | default('bi-bar-chart-line-fill') }}"></i>
            </div>
            <div class="stat-content">
                <h6 class="card-subtitle mb-1 text-muted text-uppercase font-body" style="font-size: 0.8rem;">{{ card_title }}</h6>
                <p class="card-text display-6 fw-bold mb-0 font-heading">{{ card_value }}</p>
            </div>
        </div>
        {% if card_url %}
        <a href="{{ card_url }}" class="card-footer text-decoration-none text-muted bg-light-subtle hover-bg-light">
            <small>{{ card_url_text }} <i class="bi bi-arrow-right-short ms-1"></i></small>
        </a>
        {% endif %}
    </div>
</div>
{% endmacro %}

{% macro render_quick_links(links) %} {# Example if parent quick links were needed #}
    {% if links and links | length > 0 %}
    <div class="card shadow-sm dashboard-quick-links-card">
        <div class="card-header">
            <h5 class="mb-0 font-heading"><i class="bi bi-link-45deg me-2"></i>Useful Links</h5>
        </div>
        <div class="list-group list-group-flush">
            {% for link in links %}
                 {# Check if the link should be displayed based on its 'condition' attribute (same as teacher dashboard) #}
                {% if link.condition is not defined or link.condition %}
                    <a href="{{ link.url | default('#') }}" class="list-group-item list-group-item-action d-flex align-items-center py-3">
                        <i class="bi {{ link.icon | default('bi-box-arrow-up-right') }} fs-5 me-3 {{ link.color_class | default('text-primary') }}" style="min-width: 24px;"></i>
                        <span class="fw-medium">{{ link.text | default('Link') }}</span>
                        <i class="bi bi-chevron-right ms-auto text-muted small"></i>
                    </a>
                {% endif %}
            {% endfor %}
        </div>
    </div>
    {% endif %}
{% endmacro %}


{% block page_title %}Parent Dashboard{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-person-bounding-box me-2 text-primary"></i>Parent Dashboard
        </h1>
        <div class="btn-toolbar mb-2 mb-md-0">
            <a href="{{ url_for('settings') }}" class="btn btn-sm btn-outline-secondary">
                <i class="bi bi-gear-fill me-1"></i> Account Settings
            </a>
        </div>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">

    {# Welcome Message #}
    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow-sm welcome-card bg-success text-white"> {# Unique color #}
                <div class="card-body">
                    <h4 class="card-title font-heading">Welcome, {{ current_user.full_name or current_user.username }}!</h4>
                    <p class="mb-0">Stay connected with your child's academic journey and school activities.</p>
                </div>
            </div>
        </div>
    </div>

    {# Main Stats Cards Row - Focused on Parent's perspective #}
    <div class="row row-cols-1 row-cols-sm-2 row-cols-lg-3 g-4 mb-4">
        {% set unread_notif_val = unread_notifications_count if unread_notifications_count != "N/A" else 0 %}
        {{ render_stat_card(card_title="School Notifications", card_value=unread_notif_val, card_icon="bi-bell-fill", card_color_class="text-warning", card_url=url_for('view_notifications')) }}

        {% set unread_msg_val = unread_messages_count if unread_messages_count != "N/A" else 0 %}
        {{ render_stat_card(card_title="Messages from School", card_value=unread_msg_val, card_icon="bi-envelope-paper-heart-fill", card_color_class="text-info", card_url=url_for('contacts_list')) }}

        {{ render_stat_card(card_title="My Children", card_value=children | length if children else 0, card_icon="bi-people-fill", card_color_class="text-primary", card_url="#childrenList") }}
    </div>

    {# Children's Information Section #}
    <div class="row g-4" id="childrenList">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-header">
                    <h5 class="mb-0 font-heading"><i class="bi bi-person-hearts me-2"></i>My Children</h5>
                </div>
                <div class="card-body">
                    {% if children and children | length > 0 %}
                        <div class="row row-cols-1 row-cols-md-2 g-4">
                            {% for child in children %}
                                <div class="col">
                                    <div class="card h-100 child-info-card">
                                        <div class="card-body d-flex align-items-center">
                                            {% if child.profile_photo_url %}
                                                <img src="{{ url_for('static', filename=child.profile_photo_url) }}" alt="{{ child.full_name }}" class="rounded-circle me-3 shadow-sm" style="width: 60px; height: 60px; object-fit: cover;">
                                            {% else %}
                                                <i class="bi bi-person-circle fs-1 me-3 text-muted"></i>
                                            {% endif %}
                                            <div>
                                                <h6 class="card-title font-heading mb-1">{{ child.full_name or child.username }}</h6>
                                                <p class="card-text text-muted mb-1 small">
                                                    Grade: {{ child.grade or 'N/A' }} - Section: {{ child.section or 'N/A' }}
                                                </p>
                                                {# Add quick link to child's detailed view if available later #}
                                                <a href="{{ url_for('view_student_behavior_records', user_id=child.id) }}" class="btn btn-sm btn-outline-primary mt-2">
                                                    <i class="bi bi-clipboard2-pulse-fill me-1"></i> View Behavior
                                                </a>
                                                 {# Add link to view marks, attendance if parent has access #}
                                                 {# <a href="#" class="btn btn-sm btn-outline-info mt-2 ms-2"><i class="bi bi-graph-up me-1"></i> View Marks</a> #}
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            {% endfor %}
                        </div>
                    {% else %}
                        <div class="text-center text-muted p-4">
                            <i class="bi bi-person-x-fill fs-1 mb-2"></i>
                            <p>No children are currently linked to your account, or verification is pending.</p>
                            <p><small>If this is incorrect, please contact school administration.</small></p>
                        </div>
                    {% endif %}
                </div>
            </div>
        </div>
    </div>


    {# Recent Behavior Records for Children (if any) #}
    {% if recent_behavior_records and recent_behavior_records | length > 0 %}
    <div class="row mt-4">
        <div class="col-12">
            <div class="card shadow-sm">
                 <div class="card-header">
                    <h5 class="mb-0 font-heading"><i class="bi bi-journal-richtext me-2"></i>Recent Behavior Records (Children)</h5>
                </div>
                <ul class="list-group list-group-flush">
                    {% for record in recent_behavior_records %}
                    <li class="list-group-item">
                        <div class="d-flex w-100 justify-content-between">
                            <h6 class="mb-1 font-heading">
                                {{ record.student.full_name or record.student.username }} -
                                <span class="fw-normal">{{ record.behavior_type }}</span>
                            </h6>
                            <small class="text-muted">{{ record.date | dateformat }}</small>
                        </div>
                        <p class="mb-1 text-small text-muted">{{ record.description | truncate(150) }}</p>
                        <small class="text-muted">Severity: {{ record.severity }}
                            | Resolved: <i class="bi {{ 'bi-check-circle-fill text-success' if record.is_resolved else 'bi-x-circle-fill text-danger' }}"></i>
                        </small>
                        {# <a href="{{ url_for('view_student_behavior_records', user_id=record.student_id) }}#record-{{record.id}}" class="float-end small">Details</a> #}
                    </li>
                    {% endfor %}
                </ul>
                {% if children and children | length == 1 %}
                 <a href="{{ url_for('view_student_behavior_records', user_id=children[0].id) }}" class="card-footer text-center text-decoration-none text-muted bg-light-subtle hover-bg-light">
                    <small>View All Behavior Records for {{children[0].full_name}} <i class="bi bi-arrow-right-short ms-1"></i></small>
                </a>
                {% elif children and children | length > 1 %}
                 <div class="card-footer text-center text-muted bg-light-subtle">
                    <small>View individual child profiles for all behavior records.</small>
                 </div>
                {% endif %}
            </div>
        </div>
    </div>
    {% endif %}

    {# Quick Links - if any specific to parents #}
    {# {% set parent_quick_links = [
        {'url': "#", 'text': 'School Calendar', 'icon': 'bi-calendar-event-fill', 'color_class': 'text-info'},
        {'url': "#", 'text': 'Contact Teachers', 'icon': 'bi-envelope-at-fill', 'color_class': 'text-success'}
    ] %}
    <div class="row mt-4">
        <div class="col-md-6">
            {{ render_quick_links(parent_quick_links) }}
        </div>
    </div> #}

</div>
{% endblock %}

{% block body_scripts %}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Placeholder for any Parent dashboard specific JS
        console.log('Parent Dashboard JS loaded.');
    });
</script>
{% endblock %}
{% extends "layout/base.html" %}

{% block page_title %}My Submitted Requests{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-folder-check me-2 text-primary"></i>My Submitted Requests
        </h1>
        {% if permissions and permissions.can_create_request %} {# Check if user can create more #}
        <a href="{{ url_for('submit_request') }}" class="btn btn-sm btn-success">
            <i class="bi bi-plus-circle-fill me-1"></i> Submit New Request
        </a>
        {% endif %}
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    {% include 'layout/_flash_messages.html' %}

    <div class="card shadow-sm">
        <div class="card-header">
            <h5 class="mb-0 font-heading">Requests You Have Submitted</h5>
            {# Optional: Filters for status, type, date range #}
        </div>
        <div class="card-body p-0">
            {% if requests and requests | length > 0 %}
                <div class="list-group list-group-flush">
                    {% for request_obj in requests %}
                        {% include 'partials/_request_list_item.html' %}
                    {% endfor %}
                </div>
            {% else %}
                <div class="text-center text-muted p-5 content-placeholder">
                    <i class="bi bi-journal-richtext display-3 mb-3"></i>
                    <h4 class="font-heading">No Requests Submitted Yet</h4>
                    {% if permissions and permissions.can_create_request %}
                    <p>You haven't submitted any requests. <a href="{{ url_for('submit_request') }}">Need to request something?</a></p>
                    {% else %}
                    <p>You haven't submitted any requests.</p>
                    {% endif %}
                </div>
            {% endif %}
        </div>
        {# Optional: Pagination #}
    </div>
</div>
{% endblock %}{% extends "layout/base.html" %}

{% block page_title %}Initiate Request to School Executive{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-send-plus-fill me-2 text-primary"></i>Initiate Request to School Executive (Tier 2)
        </h1>
        <a href="{{ url_for('hr_ceo_dashboard') }}" class="btn btn-sm btn-outline-secondary">
            <i class="bi bi-arrow-left-circle me-1"></i> Back to HR Dashboard
        </a>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    <div class="row justify-content-center">
        <div class="col-lg-9 col-md-11">
            <div class="card shadow-sm">
                <div class="card-header bg-primary-subtle text-primary-emphasis">
                    <h5 class="mb-0 font-heading">New Request Details (For School Executive Review)</h5>
                </div>
                <div class="card-body p-4">
                    {% include 'layout/_flash_messages.html' %}

                    <p class="text-muted mb-4">
                        As HR/CEO, you are initiating this request directly to the School Executive (Tier 2) for their review and action.
                        Please provide all necessary details.
                    </p>

                    {# Reusing the CreateRequestForm structure #}
                    <form method="POST" action="{{ url_for('hr_ceo_initiate_request') }}" novalidate>
                        {{ form.hidden_tag() if form.hidden_tag }} {# CSRF Token #}

                        <div class="mb-3">
                            {{ form.title.label(class="form-label fw-medium") }}
                            {{ form.title(class="form-control form-control-lg" + (" is-invalid" if form.title.errors else ""), placeholder="Concise title for the request") }}
                            {% if form.title.errors %}<div class="invalid-feedback">{% for e in form.title.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>

                        <div class="mb-3">
                            {{ form.description.label(class="form-label fw-medium") }}
                            {{ form.description(class="form-control" + (" is-invalid" if form.description.errors else ""), rows="6", placeholder="Detailed description, justification, and any supporting information for the School Executive...") }}
                            {% if form.description.errors %}<div class="invalid-feedback">{% for e in form.description.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                {{ form.request_type.label(class="form-label fw-medium") }}
                                {{ form.request_type(class="form-select" + (" is-invalid" if form.request_type.errors else "")) }}
                                {% if form.request_type.errors %}<div class="invalid-feedback">{% for e in form.request_type.errors %}{{e}}{% endfor %}</div>{% endif %}
                            </div>
                            <div class="col-md-6 mb-3">
                                {{ form.urgency.label(class="form-label fw-medium") }}
                                {{ form.urgency(class="form-select" + (" is-invalid" if form.urgency.errors else "")) }}
                                {% if form.urgency.errors %}<div class="invalid-feedback">{% for e in form.urgency.errors %}{{e}}{% endfor %}</div>{% endif %}
                            </div>
                        </div>

                        <div class="alert alert-info small p-2 mt-3">
                            <i class="bi bi-info-circle-fill me-1"></i>
                            This request will be directly assigned to a School Executive for Tier 2 processing.
                        </div>

                        <div class="d-flex justify-content-end mt-4">
                            <a href="{{ url_for('hr_ceo_dashboard') }}" class="btn btn-outline-secondary me-2">Cancel</a>
                            {{ form.submit(class="btn btn-primary px-4 btn-lg", value="Submit to School Executive") }}
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}{% extends "layout/base.html" %}

{% block page_title %}Initiate Request to Government{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-send-check-fill me-2 text-primary"></i>Initiate Request to Government (Tier 3)
        </h1>
        <a href="{{ url_for('school_exec_dashboard') }}" class="btn btn-sm btn-outline-secondary">
            <i class="bi bi-arrow-left-circle me-1"></i> Back to School Exec Dashboard
        </a>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    <div class="row justify-content-center">
        <div class="col-lg-9 col-md-11">
            <div class="card shadow-sm">
                <div class="card-header bg-primary-subtle text-primary-emphasis">
                    <h5 class="mb-0 font-heading">New Request Details (For Government Review)</h5>
                </div>
                <div class="card-body p-4">
                    {% include 'layout/_flash_messages.html' %}

                    <p class="text-muted mb-4">
                        As a School Executive, you are initiating this request directly to the designated Government contact (Tier 3) for their review and final approval/action.
                    </p>

                    {# Reusing the CreateRequestForm structure #}
                    <form method="POST" action="{{ url_for('school_exec_initiate_request') }}" novalidate>
                        {{ form.hidden_tag() if form.hidden_tag }} {# CSRF Token #}

                        <div class="mb-3">
                            {{ form.title.label(class="form-label fw-medium") }}
                            {{ form.title(class="form-control form-control-lg" + (" is-invalid" if form.title.errors else ""), placeholder="Concise title for the official request") }}
                            {% if form.title.errors %}<div class="invalid-feedback">{% for e in form.title.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>

                        <div class="mb-3">
                            {{ form.description.label(class="form-label fw-medium") }}
                            {{ form.description(class="form-control" + (" is-invalid" if form.description.errors else ""), rows="6", placeholder="Detailed description, justification, compliance details, and any supporting information for the Government contact...") }}
                            {% if form.description.errors %}<div class="invalid-feedback">{% for e in form.description.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                {{ form.request_type.label(class="form-label fw-medium") }}
                                {{ form.request_type(class="form-select" + (" is-invalid" if form.request_type.errors else "")) }}
                                {% if form.request_type.errors %}<div class="invalid-feedback">{% for e in form.request_type.errors %}{{e}}{% endfor %}</div>{% endif %}
                            </div>
                            <div class="col-md-6 mb-3">
                                {{ form.urgency.label(class="form-label fw-medium") }}
                                {{ form.urgency(class="form-select" + (" is-invalid" if form.urgency.errors else "")) }}
                                {% if form.urgency.errors %}<div class="invalid-feedback">{% for e in form.urgency.errors %}{{e}}{% endfor %}</div>{% endif %}
                            </div>
                        </div>

                        <div class="alert alert-info small p-2 mt-3">
                            <i class="bi bi-info-circle-fill me-1"></i>
                            This request will be directly assigned to a Government contact for Tier 3 processing and final disposition.
                        </div>

                        <div class="d-flex justify-content-end mt-4">
                            <a href="{{ url_for('school_exec_dashboard') }}" class="btn btn-outline-secondary me-2">Cancel</a>
                            {{ form.submit(class="btn btn-primary px-4 btn-lg", value="Submit to Government") }}
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}{% extends "layout/base.html" %}

{% set page_title = "Request Details: " + (request_obj.title[:30] + '...' if request_obj.title and request_obj.title|length > 30 else request_obj.title or "N/A") %}
{% block page_title %}{{ page_title }}{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0 text-truncate" style="max-width: 70%;">
            <i class="bi bi-file-earmark-medical-fill me-2 text-primary"></i>Request Details (ID: {{ request_obj.id }})
        </h1>
        {% if permissions.is_handler_for_request and request_obj.status not in ['Resolved', 'Denied'] %}
            <a href="{{ url_for('review_request', request_id=request_obj.id) }}" class="btn btn-sm btn-warning">
                <i class="bi bi-pencil-square me-1"></i> Review This Request
            </a>
        {% elif permissions.is_requester_of_request %}
             <a href="{{ url_for('my_requests') }}" class="btn btn-sm btn-outline-secondary">
                <i class="bi bi-arrow-left-circle me-1"></i> Back to My Requests
            </a>
        {% else %} {# Admin or other viewer #}
            <a href="{{ url_for('requests_inbox') if permissions.can_review else (request.referrer or url_for('hr_ceo_dashboard')) }}" class="btn btn-sm btn-outline-secondary">
                <i class="bi bi-arrow-left-circle me-1"></i> Back
            </a>
        {% endif %}
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    {% include 'layout/_flash_messages.html' %}

    <div class="row g-4">
        {# Left Column: Request Information #}
        <div class="col-lg-7 col-xl-8">
            <div class="card shadow-sm mb-4">
                <div class="card-header">
                    <h5 class="mb-0 font-heading">Request Information</h5>
                </div>
                <div class="card-body">
                    <h4 class="font-heading mb-3">{{ request_obj.title }}</h4>
                    <dl class="row">
                        <dt class="col-sm-3">Request ID:</dt>
                        <dd class="col-sm-9">{{ request_obj.id }}</dd>

                        <dt class="col-sm-3">Type:</dt>
                        <dd class="col-sm-9">{{ request_obj.request_type }}</dd>

                        <dt class="col-sm-3">Urgency:</dt>
                        <dd class="col-sm-9">
                            {% if request_obj.urgency == 'Critical' %}<span class="badge fs-09rem bg-danger text-white rounded-pill px-2 py-1">{{ request_obj.urgency }}</span>
                            {% elif request_obj.urgency == 'High' %}<span class="badge fs-09rem bg-warning text-dark rounded-pill px-2 py-1">{{ request_obj.urgency }}</span>
                            {% elif request_obj.urgency == 'Medium' %}<span class="badge fs-09rem bg-info text-white rounded-pill px-2 py-1">{{ request_obj.urgency }}</span>
                            {% else %}<span class="badge fs-09rem bg-secondary-subtle text-secondary-emphasis rounded-pill px-2 py-1">{{ request_obj.urgency }}</span>
                            {% endif %}
                        </dd>

                        <dt class="col-sm-3">Submitted By:</dt>
                        <dd class="col-sm-9">{{ request_obj.requester.full_name or request_obj.requester.username if request_obj.requester else 'N/A' }}</dd>

                        <dt class="col-sm-3">Submitted On:</dt>
                        <dd class="col-sm-9">{{ request_obj.created_at | datetimeformat }}</dd>

                        <dt class="col-sm-3">Last Updated:</dt>
                        <dd class="col-sm-9">{{ request_obj.last_updated_at | datetimeformat }}</dd>

                        <dt class="col-sm-3">Current Status:</dt>
                        <dd class="col-sm-9">
                            {% set status_badge_class = 'bg-secondary-subtle text-secondary-emphasis' %}
                            {% if request_obj.status == 'Pending' %}{% set status_badge_class = 'bg-warning-subtle text-warning-emphasis' %}
                            {% elif request_obj.status == 'Approved' or request_obj.status == 'On Progress' %}{% set status_badge_class = 'bg-primary-subtle text-primary-emphasis' %}
                            {% elif request_obj.status == 'Resolved' %}{% set status_badge_class = 'bg-success-subtle text-success-emphasis' %}
                            {% elif request_obj.status == 'Denied' %}{% set status_badge_class = 'bg-danger-subtle text-danger-emphasis' %}{% endif %}
                            <span class="badge fs-09rem px-2 py-1 rounded-pill {{ status_badge_class }}">{{ request_obj.status }}</span>
                        </dd>

                        <dt class="col-sm-3">Current Tier:</dt>
                        <dd class="col-sm-9">Tier {{ request_obj.tier }}</dd>

                        <dt class="col-sm-3">Current Handler:</dt>
                        <dd class="col-sm-9">
                            {{ request_obj.current_handler.full_name or request_obj.current_handler.username if request_obj.current_handler else 'None (Finalized or Awaiting System)' }}
                            {% if request_obj.current_handler %}
                                <small class="text-muted">({{ request_obj.current_handler.role.name.replace('_',' ') | title if request_obj.current_handler.role }})</small>
                            {% endif %}
                        </dd>

                        {% if request_obj.last_forwarded_by %}
                        <dt class="col-sm-3">Last Forwarded By:</dt>
                        <dd class="col-sm-9">{{ request_obj.last_forwarded_by.full_name or request_obj.last_forwarded_by.username }}</dd>
                        {% endif %}
                    </dl>
                    <hr>
                    <h5 class="font-heading mt-3">Full Description:</h5>
                    <div class="p-3 bg-light-subtle border rounded" style="white-space: pre-wrap;">
                        {{ request_obj.description }}
                    </div>

                     {% if request_obj.status == 'Denied' and request_obj.denial_reason %}
                        <h5 class="font-heading mt-3 text-danger">Denial Reason:</h5>
                        <div class="p-3 bg-danger-subtle border border-danger- GGGGGGGGGGG rounded" style="white-space: pre-wrap;">
                            {{ request_obj.denial_reason }}
                        </div>
                    {% endif %}

                    {% if request_obj.status == 'Resolved' and request_obj.resolution_notes %}
                        <h5 class="font-heading mt-3 text-success">Resolution Notes:</h5>
                        <div class="p-3 bg-success-subtle border border-success- GGGGGGGGGGG rounded" style="white-space: pre-wrap;">
                            {{ request_obj.resolution_notes }}
                        </div>
                    {% endif %}
                </div>
            </div>
        </div>

        {# Right Column: Request History Log #}
        <div class="col-lg-5 col-xl-4">
            <div class="card shadow-sm">
                <div class="card-header">
                    <h5 class="mb-0 font-heading"><i class="bi bi-list-ol me-2"></i>Request History & Audit Trail</h5>
                </div>
                <div class="card-body p-0" style="max-height: 70vh; overflow-y: auto;"> {# Max height and scroll for long histories #}
                    {% if history_records and history_records | length > 0 %}
                        <ul class="list-group list-group-flush">
                            {% for history_item in history_records %}
                                {% include 'partials/_request_history_log_item.html' %}
                            {% endfor %}
                        </ul>
                    {% else %}
                        <div class="p-3 text-muted text-center">
                            <i class="bi bi-archive fs-2 mb-2 d-block"></i>
                            No history recorded for this request yet.
                        </div>
                    {% endif %}
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}{% extends "layout/base.html" %}

{% set page_title = "Review Request ID: " + (request_obj.id | string) %}
{% block page_title %}{{ page_title }}{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0 text-truncate" style="max-width: 70%;">
            <i class="bi bi-card-heading me-2 text-primary"></i>{{ page_title }} - {{ request_obj.title | truncate(40) }}
        </h1>
        <a href="{{ url_for('requests_inbox') }}" class="btn btn-sm btn-outline-secondary">
            <i class="bi bi-arrow-left-circle me-1"></i> Back to Inbox
        </a>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    <div class="row g-4">
        {# Left Column: Request Details Summary #}
        <div class="col-lg-5 col-xl-4">
            <div class="card shadow-sm mb-4 sticky-lg-top" style="top: 70px;"> {# Sticky summary #}
                <div class="card-header">
                    <h5 class="mb-0 font-heading">Request Summary</h5>
                </div>
                <div class="card-body small">
                    <p><strong>Title:</strong> {{ request_obj.title }}</p>
                    <p><strong>Type:</strong> {{ request_obj.request_type }}</p>
                    <p><strong>Urgency:</strong>
                        {% if request_obj.urgency == 'Critical' %}<span class="badge bg-danger text-white rounded-pill">{{ request_obj.urgency }}</span>
                        {% elif request_obj.urgency == 'High' %}<span class="badge bg-warning text-dark rounded-pill">{{ request_obj.urgency }}</span>
                        {% else %}<span class="badge bg-info text-white rounded-pill">{{ request_obj.urgency }}</span>{% endif %}
                    </p>
                    <p><strong>Submitted By:</strong> {{ request_obj.requester.full_name or request_obj.requester.username if request_obj.requester else 'N/A' }}</p>
                    <p><strong>Submitted On:</strong> {{ request_obj.created_at | datetimeformat }}</p>
                    <p><strong>Current Status:</strong> <span class="badge fs-08rem px-2 py-1 rounded-pill {{ status_badge_class }}">{{ request_obj.status }}</span></p>
                    <p><strong>Current Tier:</strong> Tier {{ request_obj.tier }}</p>
                    <hr>
                    <h6 class="font-heading">Full Description:</h6>
                    <div class="p-2 bg-light-subtle border rounded" style="white-space: pre-wrap; max-height: 200px; overflow-y: auto;">
                        {{ request_obj.description }}
                    </div>
                    {% if request_obj.last_forwarded_by %}
                        <p class="mt-2 text-muted"><small>Last Forwarded By: {{ request_obj.last_forwarded_by.full_name or request_obj.last_forwarded_by.username }}</small></p>
                    {% endif %}
                </div>
                 <a href="{{ url_for('view_request_detail', request_id=request_obj.id) }}" class="card-footer text-center text-decoration-none text-primary fw-medium hover-bg-light">
                    View Full Details & History <i class="bi bi-box-arrow-up-right ms-1"></i>
                </a>
            </div>
        </div>

        {# Right Column: Review Form & Actions #}
        <div class="col-lg-7 col-xl-8">
            <div class="card shadow-sm">
                <div class="card-header bg-primary-subtle text-primary-emphasis">
                    <h5 class="mb-0 font-heading"><i class="bi bi-pencil-square me-2"></i>Process This Request</h5>
                </div>
                <div class="card-body p-4">
                    {% include 'layout/_flash_messages.html' %}

                    <form method="POST" action="{{ url_for('review_request', request_id=request_obj.id) }}" id="reviewRequestForm" novalidate>
                        {{ form.hidden_tag() if form.hidden_tag }} {# CSRF Token for ReviewRequestForm #}

                        <div class="mb-3">
                            {{ form.status.label(text="Select Action / New Status:", class="form-label fw-medium") }}
                            {{ form.status(class="form-select form-select-lg" + (" is-invalid" if form.status.errors else ""), id="requestActionStatusSelect") }}
                            {% if form.status.errors %}<div class="invalid-feedback">{% for e in form.status.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>

                        {# Denial Reason - Shown/Hidden by JS #}
                        <div id="denialReasonGroup" class="mb-3 assignment-section-sub" style="display:none;"> {# Using assignment-section-sub for potential shared styling #}
                            {{ form.denial_reason.label(class="form-label fw-medium") }}
                            {{ form.denial_reason(class="form-control" + (" is-invalid" if form.denial_reason.errors else ""), rows="3", placeholder="Provide a clear reason for denial...") }}
                            {% if form.denial_reason.errors %}<div class="invalid-feedback">{% for e in form.denial_reason.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>

                        {# Forward To User - Shown/Hidden by JS #}
                        <div id="forwardToUserGroup" class="mb-3 assignment-section-sub" style="display:none;">
                            {{ form.forward_to_user_id.label(text="Forward To (Next Tier Handler):", class="form-label fw-medium") }}
                            {% if form.forward_to_user_id.choices and form.forward_to_user_id.choices|length > 1 %} {# Check if choices beyond default exist #}
                                {{ form.forward_to_user_id(class="form-select tom-select-user" + (" is-invalid" if form.forward_to_user_id.errors else "")) }}
                            {% else %}
                                <p class="text-muted"><em>No eligible users found in the next tier, or this is the final tier. Forwarding not available.</em></p>
                            {% endif %}
                            {% if form.forward_to_user_id.errors %}<div class="invalid-feedback">{% for e in form.forward_to_user_id.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>

                        <div class="mb-3">
                            {{ form.resolution_notes.label(text="Handler Notes / Comments:", class="form-label fw-medium") }}
                            {{ form.resolution_notes(class="form-control" + (" is-invalid" if form.resolution_notes.errors else ""), rows="4", placeholder="Add any comments, progress updates, or details related to your action...") }}
                            {% if form.resolution_notes.errors %}<div class="invalid-feedback">{% for e in form.resolution_notes.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>

                        <div class="alert alert-info small p-2">
                            <i class="bi bi-info-circle-fill me-1"></i>
                            Select an action. If denying, provide a reason. If forwarding, select a user. Notes are optional but recommended.
                        </div>

                        <div class="d-flex justify-content-end mt-4">
                            <a href="{{ url_for('requests_inbox') }}" class="btn btn-outline-secondary me-2">Cancel</a>
                            {{ form.submit(class="btn btn-primary px-4 btn-lg", value="Update Request Status") }}
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block body_scripts %}
<script src="{{ url_for('static', filename='js/requests.js') }}?v={{ range(1, 100000) | random }}"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Initialize dynamic form field visibility in requests.js
        // initializeReviewRequestForm() // This will be called from requests.js based on IDs

        // Initialize TomSelect for the forward_to_user_id dropdown
        const forwardUserSelect = document.getElementById('{{ form.forward_to_user_id.id }}');
        if (forwardUserSelect && typeof TomSelect !== 'undefined' && forwardUserSelect.options.length > 1) {
             new TomSelect(forwardUserSelect, {
                create: false,
                placeholder: 'Select a user to forward to...'
            });
        }
        console.log('Review Request page JS loaded.');
    });
</script>
{% endblock %}{% extends "layout/base.html" %}

{% block page_title %}Submit New Request{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-file-earmark-plus-fill me-2 text-primary"></i>Submit New Request
        </h1>
        <a href="{{ request.referrer or url_for('my_requests') if current_user.is_authenticated else url_for('home') }}" class="btn btn-sm btn-outline-secondary">
            <i class="bi bi-arrow-left-circle me-1"></i> Cancel & Go Back
        </a>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    <div class="row justify-content-center">
        <div class="col-lg-9 col-md-11">
            <div class="card shadow-sm">
                <div class="card-header bg-primary-subtle text-primary-emphasis">
                    <h5 class="mb-0 font-heading">Request Details</h5>
                </div>
                <div class="card-body p-4">
                    {% include 'layout/_flash_messages.html' %}

                    <p class="text-muted mb-4">
                        Please fill out the form below to submit your request. It will be routed to the appropriate department for review.
                    </p>

                    <form method="POST" action="{{ url_for('submit_request') }}" novalidate>
                        {{ form.hidden_tag() if form.hidden_tag }} {# CSRF Token #}

                        <div class="mb-3">
                            {{ form.title.label(class="form-label fw-medium") }}
                            {{ form.title(class="form-control form-control-lg" + (" is-invalid" if form.title.errors else ""), placeholder="E.g., New Projector for Room 101, Repair Leaky Faucet in Staff Lounge") }}
                            {% if form.title.errors %}<div class="invalid-feedback">{% for e in form.title.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>

                        <div class="mb-3">
                            {{ form.description.label(class="form-label fw-medium") }}
                            {{ form.description(class="form-control" + (" is-invalid" if form.description.errors else ""), rows="6", placeholder="Provide a detailed description of your request, including justification, specific needs, location (if applicable), and any other relevant information.") }}
                            {% if form.description.errors %}<div class="invalid-feedback">{% for e in form.description.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                {{ form.request_type.label(class="form-label fw-medium") }}
                                {{ form.request_type(class="form-select" + (" is-invalid" if form.request_type.errors else "")) }}
                                {% if form.request_type.errors %}<div class="invalid-feedback">{% for e in form.request_type.errors %}{{e}}{% endfor %}</div>{% endif %}
                            </div>
                            <div class="col-md-6 mb-3">
                                {{ form.urgency.label(class="form-label fw-medium") }}
                                {{ form.urgency(class="form-select" + (" is-invalid" if form.urgency.errors else "")) }}
                                {% if form.urgency.errors %}<div class="invalid-feedback">{% for e in form.urgency.errors %}{{e}}{% endfor %}</div>{% endif %}
                            </div>
                        </div>

                        <div class="d-flex justify-content-end mt-4">
                            <a href="{{ request.referrer or url_for('my_requests') if current_user.is_authenticated else url_for('home') }}" class="btn btn-outline-secondary me-2">Cancel</a>
                            {{ form.submit(class="btn btn-primary px-4 btn-lg", value="Submit Request") }}
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}{% extends "layout/base.html" %}

{% block page_title %}My Requests Inbox{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-inbox-fill me-2 text-primary"></i>Requests Awaiting My Review
        </h1>
        {% if current_user.role.name == 'hr_ceo' %}
            <a href="{{ url_for('hr_ceo_initiate_request') }}" class="btn btn-sm btn-success">
                <i class="bi bi-send-plus-fill me-1"></i> Initiate Request (Tier 2)
            </a>
        {% elif current_user.role.name == 'school_executive' %}
            <a href="{{ url_for('school_exec_initiate_request') }}" class="btn btn-sm btn-success">
                <i class="bi bi-send-plus-fill me-1"></i> Initiate Request (Tier 3)
            </a>
        {% endif %}
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    {% include 'layout/_flash_messages.html' %}

    <div class="card shadow-sm">
        <div class="card-header">
            <h5 class="mb-0 font-heading">Requests Assigned to You (Tier {{ inbox_requests[0].tier if inbox_requests else 'N/A' }})</h5>
            {# Optional: Filters for urgency, request type, date received #}
        </div>
        <div class="card-body p-0">
            {% if inbox_requests and inbox_requests | length > 0 %}
                <div class="list-group list-group-flush">
                    {% for request_obj in inbox_requests %}
                        {# Reusing _request_list_item.html - it highlights pending for current handler #}
                        {# This partial will render the action buttons for each request #}
                        {% include 'partials/_request_list_item.html' %}
                    {% endfor %}
                </div>
            {% else %}
                <div class="text-center text-muted p-5 content-placeholder">
                    <i class="bi bi-check2-square display-3 mb-3 text-success"></i>
                    <h4 class="font-heading">Inbox Clear!</h4>
                    <p>There are no requests currently awaiting your review.</p>
                </div>
            {% endif %}
        </div>
        {# Optional: Pagination if inbox list is very long #}
    </div>
</div>
{% endblock %}

{# The script is now correctly placed in its own block #}
{% block scripts %}
    {{ super() }} {# This includes any scripts from the base template #}
    <script>
    async function handleRequest(requestId, action, button) {
        const container = document.getElementById(`request-actions-${requestId}`);
        const csrfToken = '{{ csrf_token() }}'; // Get CSRF token from Flask

        // Provide immediate visual feedback
        container.innerHTML = '<div class="spinner-border spinner-border-sm" role="status"><span class="visually-hidden">Loading...</span></div>';

        try {
            const formData = new FormData();
            formData.append('action', action);

            const response = await fetch(`/club/request/${requestId}/handle`, {
                method: 'POST',
                headers: { 'X-CSRFToken': csrfToken },
                body: formData,
                redirect: 'manual' // IMPORTANT: Prevents fetch from following the redirect
            });

            // The backend flashes a message and redirects. We can simply reload to show the result.
            // A more advanced SPA-like implementation would update the DOM directly.
            if (response.type === 'opaqueredirect' || response.ok) {
                 window.location.reload();
            } else {
                const errorData = await response.json();
                throw new Error(errorData.error || 'An unknown error occurred.');
            }
        } catch (error) {
            console.error('Request handling failed:', error);
            // Restore buttons on failure
            container.innerHTML = `<div class="alert alert-danger p-1 small">Error: ${error.message}</div>`;
        }
    }
    </script>
{% endblock %}{#
This macro renders a single WTForms field with Bootstrap 5 styling.
It handles labels, 'is-invalid' class for errors, and displaying error messages.
Any extra keyword arguments passed to the macro (like placeholder, rows, etc.)
are passed directly to the form field's HTML attributes.
#}
{% macro render_field(field, label_visible=true) %}
  <div class="mb-3">
    {# Display the label unless it's explicitly hidden #}
    {% if label_visible %}
      {{ field.label(class="form-label") }}
    {% endif %}

    {# Add the 'is-invalid' class to the field if there are validation errors #}
    {% set field_class = 'form-control' %}
    {% if field.errors %}
      {% set field_class = field_class + ' is-invalid' %}
    {% endif %}

    {# Render the actual input field. The 'kwargs' variable automatically collects
       any extra arguments passed from the template call, like `placeholder` or `rows`. #}
    {{ field(class=field_class, **kwargs) }}

    {# Loop through and display any validation errors for this field #}
    {% for error in field.errors %}
      <div class="invalid-feedback">
        {{ error }}
      </div>
    {% endfor %}

    {# Display the field's help text/description, if it has one #}
    {% if field.description %}
      <div class="form-text">
        {{ field.description }}
      </div>
    {% endif %}
  </div>
{% endmacro %}{% extends "layout/base.html" %}

{% block page_title %}Assets Pending Review{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-hourglass-split me-2 text-warning"></i>Assets Pending Review
        </h1>
        <div class="btn-toolbar mb-2 mb-md-0">
            <a href="{{ url_for('list_all_assets') }}" class="btn btn-sm btn-outline-secondary">
                <i class="bi bi-boxes me-1"></i> View All Assets
            </a>
        </div>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    {% include 'layout/_flash_messages.html' %}

    <div class="card shadow-sm">
        <div class="card-header">
            <h5 class="mb-0 font-heading">New Assets Awaiting Your Approval</h5>
        </div>
        <div class="card-body p-0"> {# Remove padding for full-width table #}
            {% if pending_assets and pending_assets | length > 0 %}
                <div class="table-responsive">
                    <table class="table table-hover table-striped mb-0">
                        <thead class="table-light">
                            <tr>
                                <th scope="col">ID</th>
                                <th scope="col">Name</th>
                                <th scope="col">Added By</th>
                                <th scope="col">Date Added</th>
                                <th scope="col">Qty</th>
                                <th scope="col">Suggested Category</th>
                                <th scope="col">Suggested Lab</th>
                                <th scope="col" class="text-center">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% for asset in pending_assets %}
                            <tr>
                                <td>{{ asset.id }}</td>
                                <td class="fw-medium">
                                    <a href="{{ url_for('edit_asset', asset_id=asset.id) }}" class="text-decoration-none">
                                        {{ asset.name | truncate(40) }}
                                    </a>
                                </td>
                                <td>{{ asset.added_by_user.full_name or asset.added_by_user.username if asset.added_by_user else 'N/A' }}</td>
                                <td>{{ asset.created_at | dateformat if asset.created_at else (asset.reports[0].report_date | dateformat if asset.reports else 'N/A') }}</td> {# Assuming created_at for new assets #}
                                <td>{{ asset.quantity }}</td>
                                <td>
                                    {% if asset.category %}
                                        <span class="badge bg-info-subtle text-info-emphasis rounded-pill px-2 py-1">{{ asset.category.name }}</span>
                                    {% else %}
                                        <span class="text-muted fst-italic">None Suggested</span>
                                    {% endif %}
                                </td>
                                 <td>
                                    {% if asset.lab %}
                                        <span class="badge bg-secondary-subtle text-secondary-emphasis rounded-pill px-2 py-1">{{ asset.lab.name }}</span>
                                    {% elif asset.location_description %}
                                        <span class="text-muted fst-italic">{{ asset.location_description | truncate(20) }}</span>
                                    {% else %}
                                        <span class="text-muted fst-italic">None Suggested</span>
                                    {% endif %}
                                </td>
                                <td class="text-center">
                                    <a href="{{ url_for('edit_asset', asset_id=asset.id) }}" class="btn btn-sm btn-primary" title="Review and Edit Asset">
                                        <i class="bi bi-pencil-square me-1"></i> Review
                                    </a>
                                    {# Optional: Quick Approve/Reject if simple cases exist, but edit_asset is safer #}
                                </td>
                            </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                </div>
            {% else %}
                <div class="text-center text-muted p-5">
                    <i class="bi bi-check2-all display-3 mb-3 text-success"></i>
                    <h4 class="font-heading">All Clear!</h4>
                    <p>There are no new assets currently pending review.</p>
                </div>
            {% endif %}
        </div>
        {# Optional: Pagination if the list can be very long #}
        {# {% if paginated_assets and (paginated_assets.has_prev or paginated_assets.has_next) %} ... {% endif %} #}
    </div>
</div>
{% endblock %}{% extends "layout/base.html" %}

{% block page_title %}Manage Asset Categories{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-tags-fill me-2 text-primary"></i>Manage Asset Categories
        </h1>
        <a href="{{ url_for('hr_ceo_dashboard') }}" class="btn btn-sm btn-outline-secondary">
            <i class="bi bi-arrow-left-circle me-1"></i> Back to Dashboard
        </a>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    {% include 'layout/_flash_messages.html' %}

    <div class="row g-4">
        {# Left Column: List Existing Categories #}
        <div class="col-lg-7 col-xl-8">
            <div class="card shadow-sm">
                <div class="card-header">
                    <h5 class="mb-0 font-heading">Existing Asset Categories</h5>
                </div>
                <div class="card-body p-0"> {# No padding for full-width table #}
                    {% if categories and categories | length > 0 %}
                        <div class="table-responsive">
                            <table class="table table-hover table-striped mb-0">
                                <thead class="table-light">
                                    <tr>
                                        <th scope="col">ID</th>
                                        <th scope="col">Name</th>
                                        <th scope="col">Description</th>
                                        <th scope="col" class="text-center">Assets Linked</th>
                                        <th scope="col" class="text-center">Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {% for category in categories %}
                                    <tr>
                                        <td>{{ category.id }}</td>
                                        <td class="fw-medium">{{ category.name }}</td>
                                        <td>{{ category.description | truncate(60) if category.description else '-' }}</td>
                                        <td class="text-center">
                                            <span class="badge bg-secondary-subtle text-secondary-emphasis rounded-pill px-2">
                                                {{ category.assets.count() }} {# Assuming 'assets' is a dynamic relationship #}
                                            </span>
                                        </td>
                                        <td class="text-center">
                                            <a href="{{ url_for('edit_asset_category', category_id=category.id) }}" class="btn btn-sm btn-outline-primary p-1 me-1" title="Edit Category">
                                                <i class="bi bi-pencil-fill fs-6"></i>
                                            </a>
                                            {# Delete button triggers a modal confirmation #}
                                            <button type="button" class="btn btn-sm btn-outline-danger p-1"
                                                    data-bs-toggle="modal" data-bs-target="#deleteCategoryModal"
                                                    data-category-id="{{ category.id }}" data-category-name="{{ category.name }}"
                                                    title="Delete Category"
                                                    {% if category.assets.count() > 0 %}disabled{% endif %}> {# MODIFIED: Removed 'or category.channels.count() > 0' #}
                                                <i class="bi bi-trash-fill fs-6"></i>
                                            </button>
                                            {% if category.assets.count() > 0 %} {# MODIFIED: Removed 'or category.channels.count() > 0' #}
                                                <small class="d-block text-muted" style="font-size: 0.7rem;">(Reassign assets to enable delete)</small> {# MODIFIED: Text updated #}
                                            {% endif %}
                                        </td>
                                    </tr>
                                    {% endfor %}
                                </tbody>
                            </table>
                        </div>
                    {% else %}
                        <div class="text-center text-muted p-5">
                            <i class="bi bi-tag-fill display-3 mb-3"></i>
                            <h4 class="font-heading">No Categories Found</h4>
                            <p>Start by adding a new asset category using the form.</p>
                        </div>
                    {% endif %}
                </div>
            </div>
        </div>

        {# Right Column: Add New Category Form #}
        <div class="col-lg-5 col-xl-4">
            <div class="card shadow-sm">
                <div class="card-header bg-success-subtle text-success-emphasis">
                    <h5 class="mb-0 font-heading"><i class="bi bi-plus-circle-dotted me-2"></i>Add New Category</h5>
                </div>
                <div class="card-body p-4">
                    <form method="POST" action="{{ url_for('add_asset_category') }}" novalidate>
                        {{ add_form.hidden_tag() if add_form.hidden_tag }} {# CSRF Token for add_form #}

                        <div class="mb-3">
                            {{ add_form.name.label(class="form-label fw-medium") }}
                            {{ add_form.name(class="form-control" + (" is-invalid" if add_form.name.errors else ""), placeholder="e.g., IT Hardware, Furniture") }}
                            {% if add_form.name.errors %}
                                <div class="invalid-feedback">
                                    {% for error in add_form.name.errors %}<span>{{ error }}</span>{% endfor %}
                                </div>
                            {% endif %}
                        </div>

                        <div class="mb-3">
                            {{ add_form.description.label(class="form-label fw-medium") }}
                            {{ add_form.description(class="form-control" + (" is-invalid" if add_form.description.errors else ""), rows="3", placeholder="Optional brief description") }}
                            {% if add_form.description.errors %}
                                <div class="invalid-feedback">
                                    {% for error in add_form.description.errors %}<span>{{ error }}</span>{% endfor %}
                                </div>
                            {% endif %}
                        </div>

                        <div class="d-grid">
                            {{ add_form.submit(class="btn btn-success", value="Add Category") }}
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    {# Delete Category Confirmation Modal #}
    <div class="modal fade" id="deleteCategoryModal" tabindex="-1" aria-labelledby="deleteCategoryModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title font-heading" id="deleteCategoryModalLabel"><i class="bi bi-trash3-fill me-2"></i>Confirm Deletion</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete the category: <strong id="categoryNameToDelete"></strong>?</p>
                    <p class="text-danger"><small>This action cannot be undone. Ensure no assets are linked to this category.</small></p> {# MODIFIED: Text updated #}
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                    <form id="deleteCategoryForm" method="POST" action=""> {# Action will be set by JS #}
                        <input type="hidden" name="csrf_token" value="{{ csrf_token() if csrf_token else '' }}">
                        <button type="submit" class="btn btn-danger">Yes, Delete Category</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block body_scripts %}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const deleteCategoryModal = document.getElementById('deleteCategoryModal');
        if (deleteCategoryModal) {
            deleteCategoryModal.addEventListener('show.bs.modal', function (event) {
                const button = event.relatedTarget; // Button that triggered the modal
                const categoryId = button.getAttribute('data-category-id');
                const categoryName = button.getAttribute('data-category-name');

                const modalTitle = deleteCategoryModal.querySelector('.modal-title');
                const categoryNameSpan = deleteCategoryModal.querySelector('#categoryNameToDelete');
                const deleteForm = deleteCategoryModal.querySelector('#deleteCategoryForm');

                categoryNameSpan.textContent = categoryName;
                // Dynamically set the form action URL for deletion
                deleteForm.action = `/hr_ceo/asset_category/${categoryId}/delete`; // Matches your Flask route
            });
        }
        console.log('Manage Asset Categories JS loaded.');
    });
</script>
{% endblock %}
{% extends "layout/base.html" %}

{% block page_title %}Manage System TC Leader{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-person-workspace me-2 text-primary"></i>Manage System Talent Club Leader
        </h1>
        <a href="{{ url_for('hr_ceo_dashboard') }}" class="btn btn-sm btn-outline-secondary">
            <i class="bi bi-arrow-left-circle me-1"></i> Back to HR Dashboard
        </a>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    {% include 'layout/_flash_messages.html' %}

    <div class="row g-4">
        {# Current Leader & Election Status Column #}
        <div class="col-lg-5 col-xl-4">
            <div class="card shadow-sm mb-4">
                <div class="card-header">
                    <h5 class="mb-0 font-heading"><i class="bi bi-person-check-fill me-2"></i>Current System TC Leader</h5>
                </div>
                <div class="card-body">
                    {% if current_leader %}
                        <div class="d-flex align-items-center">
                            {% set leader_avatar = url_for('static', filename=(current_leader.profile_photo_url if current_leader.profile_photo_url else 'img/placeholders/user_avatar_default.png')) %}
                            <img src="{{ leader_avatar }}" alt="{{ current_leader.username }}" class="rounded-circle me-3" style="width: 60px; height: 60px; object-fit: cover;">
                            <div>
                                <h6 class="font-heading mb-0">{{ current_leader.full_name or current_leader.username }}</h6>
                                <small class="text-muted">{{ current_leader.username }} | {{ current_leader.role.name | title if current_leader.role }}</small>
                            </div>
                        </div>
                        <form action="{{ url_for('hr_ceo_demote_tc_leader', user_id=current_leader.id) }}" method="POST" class="mt-3">
                            {{ form.csrf_token }}
                            <button type="submit" class="btn btn-sm btn-outline-danger w-100 confirm-demote-leader">
                                <i class="bi bi-person-fill-down me-1"></i> Demote Current Leader
                            </button>
                        </form>
                    {% else %}
                        <p class="text-muted text-center py-3">No system-wide Talent Club Leader is currently assigned.</p>
                    {% endif %}
                </div>
            </div>

            <div class="card shadow-sm">
                <div class="card-header">
                    <h5 class="mb-0 font-heading"><i class="bi bi-archive-fill me-2"></i>Past Elections</h5>
                </div>
                <div class="list-group list-group-flush" style="max-height: 300px; overflow-y:auto;">
                    {% if past_elections and past_elections | length > 0 %}
                        {% for election in past_elections %}
                            <div class="list-group-item">
                                <small class="d-block">
                                    <strong>Concluded:</strong> {{ election.concluded_at | dateformat }}
                                    {% if election.elected_leader %}
                                        | <strong>Winner:</strong> {{ election.elected_leader.full_name or election.elected_leader.username }}
                                    {% else %}
                                        | <span class="text-muted">No winner declared</span>
                                    {% endif %}
                                </small>
                            </div>
                        {% endfor %}
                    {% else %}
                        <div class="list-group-item text-muted text-center p-3">No past election records.</div>
                    {% endif %}
                </div>
            </div>
        </div>

        {# Active Election Management Column #}
        <div class="col-lg-7 col-xl-8">
            <div class="card shadow-sm">
                <div class="card-header bg-primary-subtle text-primary-emphasis">
                    <h5 class="mb-0 font-heading"><i class="bi bi-person-bounding-box me-2"></i>Talent Club Leader Election</h5>
                </div>
                <div class="card-body">
                    {% if active_election %}
                        <h6 class="font-heading">Active Election (ID: {{ active_election.id }})</h6>
                        <p class="text-muted">Initiated on: {{ active_election.initiated_at | datetimeformat }}</p>
                        <p><strong>Total Votes Cast:</strong> <span class="badge bg-info rounded-pill fs-09rem">{{ total_votes_in_active_election }}</span></p>

                        <h6 class="mt-3 font-heading">Candidate Votes:</h6>
                        {% if candidate_vote_counts %}
                            <ul class="list-group list-group-numbered mb-3">
                                {% for candidate_id, votes in candidate_vote_counts.items() | sort(attribute='1', reverse=True) %}
                                    {% set cand = eligible_candidates | selectattr('id', 'equalto', candidate_id) | first %}
                                    <li class="list-group-item d-flex justify-content-between align-items-center">
                                        {{ cand.full_name or cand.username if cand else 'Unknown Candidate' }}
                                        <span class="badge bg-primary rounded-pill">{{ votes }} vote{{'s' if votes != 1 else ''}}</span>
                                    </li>
                                {% endfor %}
                            </ul>
                        {% else %}
                            <p class="text-muted">No votes cast yet in this election.</p>
                        {% endif %}

                        <form action="{{ url_for('hr_ceo_conclude_tc_leader_election', election_id=active_election.id) }}" method="POST" class="mt-3">
                            {{ form.csrf_token }}
                            <button type="submit" class="btn btn-success w-100 confirm-conclude-election">
                                <i class="bi bi-flag-fill me-1"></i> Conclude Election & Declare Winner
                            </button>
                        </form>
                        {# Optional: Cancel election button #}

                    {% else %}
                        <p class="text-muted">No election is currently active.</p>
                        {% if eligible_candidates and eligible_candidates | length > 0 %}
                        <form action="{{ url_for('hr_ceo_initiate_tc_leader_election') }}" method="POST">
                            {{ form.csrf_token }}
                            <button type="submit" class="btn btn-primary w-100">
                                <i class="bi bi-megaphone-fill me-1"></i> Initiate New Election
                            </button>
                        </form>
                        {% else %}
                            <div class="alert alert-warning small" role="alert">
                                <i class="bi bi-exclamation-circle-fill me-1"></i> Cannot initiate an election: No eligible Talent Club members found to be candidates/voters.
                            </div>
                        {% endif %}
                    {% endif %}

                    <hr class="my-4">
                    <h6 class="font-heading">Eligible Candidates/Voters (Active TC Members)</h6>
                    {% if eligible_candidates and eligible_candidates | length > 0 %}
                        <ul class="list-unstyled list-group- DGGGGGGGGGG" style="font-size: 0.9rem; max-height: 200px; overflow-y: auto;">
                            {% for candidate in eligible_candidates %}
                                <li class="list-group-item list-group-item-light py-1 px-2 d-flex align-items-center">
                                     {% set cand_avatar = url_for('static', filename=(candidate.profile_photo_url if candidate.profile_photo_url else 'img/placeholders/user_avatar_default.png')) %}
                                    <img src="{{ cand_avatar }}" alt="{{ candidate.username }}" class="rounded-circle me-2" style="width: 24px; height: 24px; object-fit: cover;">
                                    {{ candidate.full_name or candidate.username }}
                                    <small class="text-muted ms-auto">{{candidate.username}}</small>
                                </li>
                            {% endfor %}
                        </ul>
                    {% else %}
                        <p class="text-muted small">No active Talent Club members found.</p>
                    {% endif %}
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block body_scripts %}
<script src="{{ url_for('static', filename='js/talent_club.js') }}?v={{ range(1, 100000) | random }}"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Confirmation for demoting leader
        document.querySelectorAll('.confirm-demote-leader').forEach(button => {
            button.addEventListener('click', function(event) {
                if (!confirm('Are you sure you want to demote the current Talent Club Leader? This action cannot be undone easily.')) {
                    event.preventDefault();
                }
            });
        });
        // Confirmation for concluding election
         document.querySelectorAll('.confirm-conclude-election').forEach(button => {
            button.addEventListener('click', function(event) {
                if (!confirm('Are you sure you want to conclude this election? The candidate(s) with the most votes will be declared the winner. This cannot be undone.')) {
                    event.preventDefault();
                }
            });
        });
        console.log('Manage System TC Leader JS loaded.');
    });
</script>
{% endblock %}{% extends "layout/base.html" %}

{# DEFINE MACROS FIRST, AFTER EXTENDS #}
{% macro render_stat_card(card_title, card_value, card_icon, card_color_class, card_url=None, card_url_text='View Details') %}
<div class="col">
    <div class="card dashboard-stat-card h-100 shadow-sm">
        <div class="card-body d-flex align-items-center">
            <div class="stat-icon display-4 me-3 {{ card_color_class or 'text-primary' }}">
                <i class="bi {{ card_icon or 'bi-bar-chart-line-fill' }}"></i>
            </div>
            <div>
                <h6 class="card-subtitle mb-1 text-body-secondary text-uppercase" style="font-size: 0.75rem;">{{ card_title }}</h6>
                <p class="card-text display-6 fw-bold mb-0 font-heading">{{ card_value }}</p>
            </div>
        </div>
        {% if card_url %}
        <a href="{{ card_url }}" class="card-footer text-decoration-none text-muted bg-light-subtle hover-bg-light small">
            {{ card_url_text }} <i class="bi bi-arrow-right-short ms-1"></i>
        </a>
        {% endif %}
    </div>
</div>
{% endmacro %}

{% macro render_quick_links(links, title="Quick Actions", icon="bi-lightning-charge-fill") %}
    {% if links %}
    <div class="card shadow-sm dashboard-quick-links-card">
        <div class="card-header bg-light-subtle">
            <h5 class="mb-0 font-heading"><i class="bi {{ icon }} me-2"></i>{{ title }}</h5>
        </div>
        <div class="list-group list-group-flush">
            {% for link in links %}
                <a href="{{ link.url | default('#') if not link.disabled else 'javascript:void(0);' }}" 
                   class="list-group-item list-group-item-action d-flex align-items-center py-3 {% if link.js_onclick %}cursor-pointer{% endif %} {% if link.disabled %} disabled-link text-muted {% endif %}"
                   {% if link.tooltip %} data-bs-toggle="tooltip" title="{{ link.tooltip }}" {% endif %}
                   {% if link.js_onclick %} onclick="{{ link.js_onclick }}" {% endif %}>
                    <i class="bi {{ link.icon or 'bi-link-45deg' }} fs-5 me-3 {{ link.color_class or 'text-primary' }}" style="min-width: 24px;"></i>
                    <span class="fw-medium">{{ link.text or 'Link' }}</span>
                    <i class="bi bi-chevron-right ms-auto small"></i>
                </a>
            {% endfor %}
        </div>
    </div>
    {% endif %}
{% endmacro %}

{% macro render_recent_activity(activities) %}
<div class="card shadow-sm recent-activity-card">
    <div class="card-header bg-light-subtle">
        <h5 class="mb-0 font-heading"><i class="bi bi-clock-history me-2"></i>Recent Activity</h5>
    </div>
    <div class="card-body" style="max-height: 450px; overflow-y: auto;">
        {% if activities %}
            <ul class="list-unstyled mb-0">
                {% for activity in activities %}
                    <li class="d-flex align-items-start pb-3 {% if not loop.last %}mb-3 border-bottom{% endif %}">
                        <div class="activity-icon me-3">
                            <span class="badge bg-{{ activity.badge_color or 'secondary' }} p-2 rounded-circle d-flex">
                                <i class="bi {{ activity.icon or 'bi-bell' }} fs-5 text-white"></i>
                            </span>
                        </div>
                        <div class="activity-content">
                            <p class="mb-1">{{ activity.text | safe }}</p>
                            <small class="text-muted">
                                <i class="bi bi-calendar3 me-1"></i>{{ activity.timestamp | humanize_time_diff }}
                            </small>
                            {% if activity.url %}
                                <a href="{{ activity.url }}" class="ms-2 small text-decoration-none">View <i class="bi bi-arrow-up-right-square"></i></a>
                            {% endif %}
                        </div>
                    </li>
                {% endfor %}
            </ul>
        {% else %}
            <div class="text-center text-muted p-4">
                <i class="bi bi-moon-stars fs-1 mb-2"></i>
                <p>No recent activity to display.</p>
            </div>
        {% endif %}
    </div>
    {% if activities and activities|length > 5 %}
    <a href="{{ url_for('view_notifications') }}" class="card-footer text-center text-decoration-none text-muted bg-light-subtle hover-bg-light small">
        View All Activity <i class="bi bi-arrow-right-short ms-1"></i>
    </a>
    {% endif %}
</div>
{% endmacro %}
{# END OF MACRO DEFINITIONS #}

{% block page_title %}HR & Academics Dashboard{% endblock %}

{% block content_header %}
<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2 font-heading">
        <i class="bi bi-briefcase-fill me-2 text-primary"></i>HR & Academics Dashboard
    </h1>
    <div class="btn-toolbar mb-2 mb-md-0">
        <a href="{{ url_for('create_task') }}" class="btn btn-sm btn-success me-2">
             <i class="bi bi-plus-square-dotted me-1"></i>Create New Task
        </a>
        <a href="{{ url_for('settings') }}" class="btn btn-sm btn-outline-secondary">
            <i class="bi bi-gear-fill me-1"></i>Settings
        </a>
    </div>
</div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    <div class="alert alert-primary-subtle border-primary-subtle mb-4">
        <h4 class="alert-heading font-heading">Welcome, {{ current_user.full_name or current_user.username }}!</h4>
        <p class="mb-0">Oversee school operations, manage staff and student affairs, and track key performance indicators.</p>
    </div>

    {# Main Stats Cards Row #}
    <div class="row row-cols-1 row-cols-sm-2 row-cols-lg-3 row-cols-xl-4 g-4 mb-4">
        {{ render_stat_card("Total Students", student_count|default(0), "bi-people-fill", "text-info", url_for('student_database_index')) }}
        {{ render_stat_card("Total Teachers", teacher_count|default(0), "bi-person-video3", "text-success", "#") }}
        {{ render_stat_card("Student Leaders", student_leader_count|default(0), "bi-person-check-fill", "text-primary", url_for('manage_student_leaders')) }}
        {{ render_stat_card("Pending Assets", pending_assets|default(0), "bi-box-seam-fill", "text-warning", url_for('list_pending_assets')) }}
        {{ render_stat_card("Open Asset Reports", reports_open|default(0), "bi-flag-fill", "text-danger", url_for('list_asset_reports')) }}
        {{ render_stat_card("Tasks You Created", my_assigned_tasks_count|default(0), "bi-card-checklist", "text-secondary", url_for('my_assigned_tasks')) }}
        {{ render_stat_card("Requests Inbox", requests_inbox_count|default(0), "bi-envelope-paper-fill", "text-info", url_for('requests_inbox')) }}
        {{ render_stat_card("Unread Notifications", unread_notifications_count|default(0), "bi-bell-fill", "text-warning", url_for('view_notifications')) }}
    </div>

    <div class="row g-4">
        {# Left Column: Quick Links & Analytics Actions #}
        <div class="col-lg-4">
            {% set hr_ceo_quick_links = [
                {'url': url_for('list_pending_assets'), 'text': 'Review Pending Assets', 'icon': 'bi-box-arrow-in-down', 'color_class': 'text-primary'},
                {'url': url_for('list_asset_reports'), 'text': 'Manage Asset Reports', 'icon': 'bi-tools', 'color_class': 'text-danger'},
                {'url': url_for('manage_student_leaders'), 'text': 'Manage Student Leaders', 'icon': 'bi-person-badge-fill', 'color_class': 'text-success'},
                {'url': url_for('manage_asset_categories'), 'text': 'Manage Asset Categories', 'icon': 'bi-tags-fill', 'color_class': 'text-info'},
                {'url': url_for('my_assigned_tasks'), 'text': 'View Tasks You Created', 'icon': 'bi-card-list', 'color_class': 'text-secondary'},
                {'url': url_for('hr_ceo_initiate_request'), 'text': 'Initiate Tier 2 Request', 'icon': 'bi-send-plus-fill', 'color_class': 'text-warning'},
                {'url': url_for('manage_system_tc_leader'), 'text': 'Manage TC System Leader', 'icon': 'bi-trophy-fill', 'color_class': 'text-primary'}
            ] %}
            {{ render_quick_links(hr_ceo_quick_links, title="Management Actions") }}

            <div class="mt-4">
                 {% set analytics_links = [
                    {'url': 'javascript:void(0);', 'text': 'Attendance Overview', 'icon': 'bi-calendar3-event', 'color_class': 'text-success', 'js_onclick': "fetchAndDisplayAnalytics('attendance', 'Attendance Overview', 'attendanceChartContainer', 'doughnut');"},
                    {'url': 'javascript:void(0);', 'text': 'Performance Data', 'icon': 'bi-graph-up-arrow', 'color_class': 'text-info', 'js_onclick': "fetchAndDisplayAnalytics('performance', 'Performance Averages', 'performanceChartContainer', 'bar');"},
                    {'url': 'javascript:void(0);', 'text': 'Demographics Data', 'icon': 'bi-gender-ambiguous', 'color_class': 'text-warning', 'js_onclick': "fetchAndDisplayAnalytics('demographics', 'Student Demographics', 'demographicsChartContainer', 'pie');"}
                ] %}
                {{ render_quick_links(analytics_links, title="View Analytics", icon="bi-pie-chart-fill") }}
            </div>
        </div>

        {# Right Column: Analytics Charts & Recent Activity #}
        <div class="col-lg-8">
            <div class="row g-4 mb-4">
                <div class="col-xl-6">
                    <div class="card shadow-sm h-100">
                        <div class="card-header bg-light-subtle"><h5 class="mb-0 font-heading"><i class="bi bi-calendar3-event me-2"></i>Attendance Overview</h5></div>
                        <div class="card-body d-flex align-items-center justify-content-center"><div id="attendanceChartContainer" style="position: relative; height:250px; width:100%"><canvas id="attendanceChart"></canvas></div></div>
                    </div>
                </div>
                <div class="col-xl-6">
                    <div class="card shadow-sm h-100">
                        <div class="card-header bg-light-subtle"><h5 class="mb-0 font-heading"><i class="bi bi-graph-up-arrow me-2"></i>Performance Averages</h5></div>
                        <div class="card-body d-flex align-items-center justify-content-center"><div id="performanceChartContainer" style="position: relative; height:250px; width:100%"><canvas id="performanceChart"></canvas></div></div>
                    </div>
                </div>
                <div class="col-12">
                    <div class="card shadow-sm">
                        <div class="card-header bg-light-subtle"><h5 class="mb-0 font-heading"><i class="bi bi-gender-ambiguous me-2"></i>Student Demographics</h5></div>
                        <div class="card-body d-flex align-items-center justify-content-center"><div id="demographicsChartContainer" style="position: relative; height:250px; width:100%"><canvas id="demographicsChart"></canvas></div></div>
                    </div>
                </div>
            </div>

            {{ render_recent_activity(recent_activities) }}
        </div>
    </div>
</div>
{% endblock %}

{% block body_scripts %}
{# Assumes utils.js is loaded globally in base.html #}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Initial load of default chart
        if (typeof fetchAndDisplayAnalytics === 'function') {
            fetchAndDisplayAnalytics('attendance', 'Attendance Overview', 'attendanceChartContainer', 'doughnut');
        } else {
            console.error("The global function 'fetchAndDisplayAnalytics' was not found. Please ensure utils.js is loaded before this script.");
        }
    });

    // Make the analytics function globally accessible from the template's onclick attributes
    window.fetchAndDisplayAnalytics = window.fetchAndDisplayAnalytics || function(endpoint, title, containerId, type) {
        // This is a fallback in case utils.js hasn't defined it, to prevent hard errors.
        console.error(`Analytics function called for ${endpoint}, but the core implementation from utils.js is missing.`);
        const container = document.getElementById(containerId);
        if (container) container.innerHTML = '<p class="text-center text-danger">Chart loading function is unavailable.</p>';
    };
</script>
{% endblock %}{% extends "layout/base.html" %}

{% set page_title = "Edit Category: " + (category.name if category else "New Category") %}
{% block page_title %}{{ page_title }}{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-pencil-square me-2 text-primary"></i>{{ page_title }}
        </h1>
        <a href="{{ url_for('manage_asset_categories') }}" class="btn btn-sm btn-outline-secondary">
            <i class="bi bi-arrow-left-circle me-1"></i> Back to Categories
        </a>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    <div class="row justify-content-center">
        <div class="col-lg-7 col-md-9">
            <div class="card shadow-sm">
                <div class="card-header bg-primary-subtle text-primary-emphasis">
                    <h5 class="mb-0 font-heading">Category Details</h5>
                </div>
                <div class="card-body p-4">
                    {% include 'layout/_flash_messages.html' %}

                    <form method="POST" action="{{ url_for('edit_asset_category', category_id=category.id if category else 0) }}" novalidate>
                        {{ form.hidden_tag() if form.hidden_tag }} {# CSRF Token for the edit form #}

                        <div class="mb-3">
                            {{ form.name.label(class="form-label fw-medium") }}
                            {{ form.name(class="form-control" + (" is-invalid" if form.name.errors else ""), placeholder="e.g., IT Hardware, Furniture") }}
                            {% if form.name.errors %}
                                <div class="invalid-feedback">
                                    {% for error in form.name.errors %}<span>{{ error }}</span>{% endfor %}
                                </div>
                            {% endif %}
                        </div>

                        <div class="mb-3">
                            {{ form.description.label(class="form-label fw-medium") }}
                            {{ form.description(class="form-control" + (" is-invalid" if form.description.errors else ""), rows="4", placeholder="Optional brief description of the category") }}
                            {% if form.description.errors %}
                                <div class="invalid-feedback">
                                    {% for error in form.description.errors %}<span>{{ error }}</span>{% endfor %}
                                </div>
                            {% endif %}
                        </div>

                        <hr class="my-4">

                        <div class="d-flex justify-content-end">
                            <a href="{{ url_for('manage_asset_categories') }}" class="btn btn-outline-secondary me-2">Cancel</a>
                            {{ form.submit(class="btn btn-primary px-4", value="Save Changes") }}
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}{% extends "layout/base.html" %}

{% set page_title = "Resolve Report ID: " + (report.id | string) %}
{% block page_title %}{{ page_title }}{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-check-circle-fill text-success me-2"></i>{{ page_title }}
        </h1>
        <a href="{{ url_for('list_asset_reports') }}" class="btn btn-sm btn-outline-secondary">
            <i class="bi bi-arrow-left-circle me-1"></i> Back to All Reports
        </a>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    <div class="row justify-content-center">
        <div class="col-lg-9 col-md-11">
            <div class="card shadow-sm mb-4">
                <div class="card-header">
                    <h5 class="mb-0 font-heading">Report Details</h5>
                </div>
                <div class="card-body">
                    <dl class="row">
                        <dt class="col-sm-3">Report ID:</dt>
                        <dd class="col-sm-9">{{ report.id }}</dd>

                        <dt class="col-sm-3">Asset Reported:</dt>
                        <dd class="col-sm-9">
                            {% if report.asset %}
                                <a href="{{ url_for('edit_asset', asset_id=report.asset.id) }}" class="text-decoration-none">{{ report.asset.name }} (ID: {{ report.asset.id }})</a>
                            {% else %}
                                <span class="fst-italic text-muted">General Report (Not linked to a specific asset)</span>
                            {% endif %}
                        </dd>

                        <dt class="col-sm-3">Reported By:</dt>
                        <dd class="col-sm-9">{{ report.reporter.full_name or report.reporter.username if report.reporter else 'N/A' }}</dd>

                        <dt class="col-sm-3">Report Date:</dt>
                        <dd class="col-sm-9">{{ report.report_date | datetimeformat }}</dd>

                        <dt class="col-sm-3">Issue Description:</dt>
                        <dd class="col-sm-9">{{ report.damage_description }}</dd>

                        {% if report.date_of_damage %}
                        <dt class="col-sm-3">Date of Damage:</dt>
                        <dd class="col-sm-9">{{ report.date_of_damage | dateformat }}</dd>
                        {% endif %}

                        <dt class="col-sm-3">Quantity Damaged:</dt>
                        <dd class="col-sm-9">{{ report.quantity_damaged }}</dd>

                        <dt class="col-sm-3">Current Status:</dt>
                        <dd class="col-sm-9">
                             {% if report.status == 'Pending' %}
                                <span class="badge bg-warning-subtle text-warning-emphasis rounded-pill px-2 py-1">{{ report.status }}</span>
                            {% elif report.status == 'In Progress' %}
                                <span class="badge bg-info-subtle text-info-emphasis rounded-pill px-2 py-1">{{ report.status }}</span>
                            {% elif report.status == 'Resolved' %}
                                <span class="badge bg-success-subtle text-success-emphasis rounded-pill px-2 py-1">{{ report.status }}</span>
                            {% elif report.status == 'Rejected' %}
                                <span class="badge bg-danger-subtle text-danger-emphasis rounded-pill px-2 py-1">{{ report.status }}</span>
                            {% else %}
                                <span class="badge bg-secondary-subtle text-secondary-emphasis rounded-pill px-2 py-1">{{ report.status }}</span>
                            {% endif %}
                        </dd>

                        {% if report.resolver %}
                        <dt class="col-sm-3">Resolved/Rejected By:</dt>
                        <dd class="col-sm-9">{{ report.resolver.full_name or report.resolver.username }}</dd>
                        {% endif %}
                        {% if report.resolved_date %}
                        <dt class="col-sm-3">Resolved/Rejected Date:</dt>
                        <dd class="col-sm-9">{{ report.resolved_date | datetimeformat }}</dd>
                        {% endif %}
                    </dl>
                </div>
            </div>

            {% if report.status not in ['Resolved', 'Rejected'] %}
            <div class="card shadow-sm">
                <div class="card-header bg-primary-subtle text-primary-emphasis">
                    <h5 class="mb-0 font-heading"><i class="bi bi-pencil-fill me-2"></i>Update Report Status & Resolution</h5>
                </div>
                <div class="card-body p-4">
                    {% include 'layout/_flash_messages.html' %}
                    <form method="POST" action="{{ url_for('resolve_asset_report', report_id=report.id) }}" novalidate>
                        {{ form.hidden_tag() if form.hidden_tag }} {# CSRF Token #}

                        <div class="mb-3">
                            {{ form.status.label(class="form-label fw-medium") }}
                            {{ form.status(class="form-select" + (" is-invalid" if form.status.errors else "")) }}
                            {% if form.status.errors %}
                                <div class="invalid-feedback">
                                    {% for error in form.status.errors %}<span>{{ error }}</span>{% endfor %}
                                </div>
                            {% endif %}
                        </div>

                        <div class="mb-3">
                            {{ form.resolution_notes.label(class="form-label fw-medium") }}
                            {{ form.resolution_notes(class="form-control" + (" is-invalid" if form.resolution_notes.errors else ""), rows="4", placeholder="Enter notes regarding the resolution, actions taken, or reasons for rejection...") }}
                            {% if form.resolution_notes.errors %}
                                <div class="invalid-feedback">
                                    {% for error in form.resolution_notes.errors %}<span>{{ error }}</span>{% endfor %}
                                </div>
                            {% endif %}
                        </div>

                        {# Optional: Field to link a general report to an asset - More complex UI needed #}
                        {# {% if not report.asset_id and form.link_to_asset_id %}
                        <div class="mb-3">
                            {{ form.link_to_asset_id.label(class="form-label fw-medium") }}
                            {{ form.link_to_asset_id(class="form-select tom-select" + (" is-invalid" if form.link_to_asset_id.errors else "")) }}
                            <small class="form-text text-muted">If this general report pertains to a specific asset, link it here.</small>
                            {% if form.link_to_asset_id.errors %}<div class="invalid-feedback">{% for e in form.link_to_asset_id.errors %}{{e}}{% endfor %}</div>{% endif %}
                        </div>
                        {% endif %} #}

                        <hr class="my-4">
                        <div class="d-flex justify-content-end">
                            <a href="{{ url_for('list_asset_reports') }}" class="btn btn-outline-secondary me-2">Cancel</a>
                            {{ form.submit(class="btn btn-primary px-4", value="Update Report") }}
                        </div>
                    </form>
                </div>
            </div>
            {% elif report.resolution_notes %} {# Show notes if already resolved/rejected #}
             <div class="card shadow-sm">
                <div class="card-header bg-light-subtle">
                     <h5 class="mb-0 font-heading"><i class="bi bi-card-text me-2"></i>Resolution Notes</h5>
                </div>
                <div class="card-body">
                    <p class="fst-italic">{{ report.resolution_notes }}</p>
                </div>
            </div>
            {% endif %}
        </div>
    </div>
</div>
{% endblock %}

{% block body_scripts %}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Initialize TomSelect if link_to_asset_id field is present and needs it
        // const assetLinkSelect = document.getElementById('{{ form.link_to_asset_id.id if form.link_to_asset_id else '' }}');
        // if (assetLinkSelect) {
        //     new TomSelect(assetLinkSelect, {
        //         create: false,
        //         placeholder: 'Search and select an asset...'
        //         // Add remote loading options if needed for asset search
        //     });
        // }
        console.log('Resolve Asset Report page JS loaded.');
    });
</script>
{% endblock %}
{% extends "layout/base.html" %}

{% block page_title %}{{ title or "Manage Student Leaders" }}{% endblock %}

{% block content_header %}
<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="page-title font-heading mb-0">
        <i class="bi bi-person-badge-fill me-2 text-primary"></i>Manage Student Leaders & Assignments
    </h1>
    <a href="{{ url_for('hr_ceo_dashboard') }}" class="btn btn-sm btn-outline-secondary">
        <i class="bi bi-arrow-left-circle me-1"></i> Back to Dashboard
    </a>
</div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    {% include 'layout/_flash_messages.html' %}

    <div class="row g-4">
        {# Left Column: Assign Students Form & Current Leaders List (Optional) #}
        <div class="col-lg-4 col-xl-3">
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-primary-subtle text-primary-emphasis">
                    <h5 class="mb-0 font-heading"><i class="bi bi-person-plus-fill me-2"></i>Assign Students to Leader</h5>
                </div>
                <div class="card-body p-3">
                    {% if form and form.leader.choices and form.leader.choices[0][0] != 0 %} {# Check if leaders exist for form #}
                        <form method="POST" action="{{ url_for('manage_student_leaders') }}" novalidate>
                            {{ form.hidden_tag() if form.hidden_tag }} {# CSRF Token #}
                            <div class="mb-3">
                                {{ form.leader.label(class="form-label fw-medium") }}
                                {{ form.leader(class="form-select tom-select" + (" is-invalid" if form.leader.errors else "")) }}
                                {% if form.leader.errors %}
                                    <div class="invalid-feedback">
                                        {% for error in form.leader.errors %}<span>{{ error }}</span>{% endfor %}
                                    </div>
                                {% endif %}
                                <small class="form-text text-muted">Select an active student leader who has a grade and section assigned.</small>
                            </div>
                            <p class="fw-medium">Select students below (from the main list) to assign to this leader.</p>
                            <div class="d-grid">
                                {{ form.submit(class="btn btn-primary", value="Assign Selected Students") }}
                            </div>
                            <small class="form-text text-muted mt-2 d-block">Note: Students will only be assigned if they are in the same grade and section as the selected leader.</small>
                        </form>
                    {% else %}
                        <p class="text-muted text-center py-3">
                            <i class="bi bi-person-x-fill fs-3 mb-2"></i><br>
                            No active student leaders with assigned grade/sections found. Promote a student to leader first to enable assignment.
                        </p>
                    {% endif %}
                </div>
            </div>

            {% if current_leaders %}
            <div class="card shadow-sm">
                <div class="card-header">
                    <h5 class="mb-0 font-heading"><i class="bi bi-star-fill me-2 text-warning"></i>Current Student Leaders</h5>
                </div>
                <div class="list-group list-group-flush">
                    {% for leader_user in current_leaders %}
                        <a href="#block-{{ leader_user.grade }}-{{ leader_user.section }}" class="list-group-item list-group-item-action">
                            {{ leader_user.full_name or leader_user.username }}
                            <small class="d-block text-muted">Grade {{ leader_user.grade }} - Section {{ leader_user.section }}</small>
                        </a>
                    {% else %}
                        <div class="list-group-item text-muted">No student leaders currently assigned.</div>
                    {% endfor %}
                </div>
            </div>
            {% endif %}
        </div>

        {# Right Column: Student Blocks by Grade/Section #}
        <div class="col-lg-8 col-xl-9">
            {% if students_by_grade_section %}
                {% for key, data in students_by_grade_section.items() %}
                    {% set grade, section = key %}
                    <div class="card shadow-sm mb-4" id="block-{{ grade }}-{{ section }}">
                        <div class="card-header">
                            <h5 class="mb-0 font-heading">
                                <i class="bi bi-collection-fill me-2"></i>Grade {{ grade }} - Section {{ section }}
                                {% if data.leader %}
                                    <small class="text-muted fw-normal ms-2">(Leader: <span class="text-success">{{ data.leader.full_name or data.leader.username }}</span>)</small>
                                {% else %}
                                    <small class="text-danger fw-normal ms-2">(No Leader Assigned)</small>
                                {% endif %}
                            </h5>
                        </div>
                        <div class="card-body">
                            {% if not data.leader and not data.followers and not data.unassigned_students %}
                                <p class="text-muted text-center m-0 py-3">No students found in this block.</p>
                            {% else %}
                                <form method="POST" action="{{ url_for('manage_student_leaders') }}"> {# Target for student selection checkboxes #}
                                    {{ form.hidden_tag() if form.hidden_tag }} {# CSRF for the main assignment form #}
                                    
                                    <h6 class="font-heading text-muted mb-2">
                                        {% if data.leader %}
                                            Leader & Followers ({{ (data.followers or []) | length + 1 }})
                                        {% else %}
                                            Unassigned Students (Potential Leaders) ({{ (data.unassigned_students or []) | length }})
                                        {% endif %}
                                    </h6>
                                    <ul class="list-group list-group-flush mb-3">
                                        {# Display Leader (if exists for this block) #}
                                        {% if data.leader %}
                                            <li class="list-group-item d-flex justify-content-between align-items-center py-2 px-2">
                                                <div>
                                                    <input class="form-check-input me-2" type="checkbox" name="students_to_assign" value="{{ data.leader.id }}" id="student-{{ data.leader.id }}" form="assignStudentsFormId"> {# Add form attribute if assign form is outside this one #}
                                                    <label class="form-check-label fw-bold text-success" for="student-{{ data.leader.id }}">
                                                        {{ data.leader.full_name or data.leader.username }} (Current Leader <i class="bi bi-star-fill text-warning"></i>)
                                                    </label>
                                                </div>
                                                <form method="POST" action="{{ url_for('toggle_student_leader_status', student_id=data.leader.id) }}" class="d-inline">
                                                     <input type="hidden" name="csrf_token" value="{{ csrf_token() }}">
                                                    <button type="submit" class="btn btn-sm btn-outline-danger p-1" title="Demote Leader">
                                                        <i class="bi bi-person-x-fill fs-6"></i> Demote
                                                    </button>
                                                </form>
                                            </li>
                                        {% endif %}

                                        {# Display Followers (if leader exists) #}
                                        {% if data.leader and data.followers %}
                                            {% for student in data.followers %}
                                            <li class="list-group-item d-flex justify-content-between align-items-center py-2 px-2 ps-4"> {# Indent followers #}
                                                <div>
                                                    <input class="form-check-input me-2" type="checkbox" name="students_to_assign" value="{{ student.id }}" id="student-{{ student.id }}" form="assignStudentsFormId">
                                                    <label class="form-check-label" for="student-{{ student.id }}">
                                                        {{ student.full_name or student.username }}
                                                        <small class="text-muted ms-1">(Following {{ data.leader.username }})</small>
                                                    </label>
                                                </div>
                                                {# Action for follower - e.g., Unassign (handled by re-assigning to no one or another leader) #}
                                            </li>
                                            {% endfor %}
                                        {% endif %}

                                        {# Display Unassigned Students (or potential leaders if no leader for block) #}
                                        {% for student in data.unassigned_students %}
                                            <li class="list-group-item d-flex justify-content-between align-items-center py-2 px-2">
                                                <div>
                                                    <input class="form-check-input me-2" type="checkbox" name="students_to_assign" value="{{ student.id }}" id="student-{{ student.id }}" form="assignStudentsFormId">
                                                    <label class="form-check-label" for="student-{{ student.id }}">
                                                        {{ student.full_name or student.username }}
                                                        {% if student.leader %}<small class="text-muted ms-1">(Assigned to: {{ student.leader.username }})</small>{% endif %}
                                                    </label>
                                                </div>
                                                <form method="POST" action="{{ url_for('toggle_student_leader_status', student_id=student.id) }}" class="d-inline">
                                                    <input type="hidden" name="csrf_token" value="{{ csrf_token() }}">
                                                    <button type="submit" class="btn btn-sm btn-outline-success p-1" title="Promote to Leader">
                                                        <i class="bi bi-person-check-fill fs-6"></i> Promote
                                                    </button>
                                                </form>
                                            </li>
                                        {% endfor %}
                                    </ul>
                                </form> {# End of the checkbox form for assignments #}
                            {% endif %}
                        </div>
                    </div>
                {% endfor %}
            {% else %}
                <div class="alert alert-info text-center">No student blocks found. Please ensure students have grades and sections assigned.</div>
            {% endif %}
        </div>
    </div>
</div>
{% endblock %}

{% block body_scripts %}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Initialize TomSelect for the leader selection dropdown if it exists
        const leaderSelect = document.querySelector('.tom-select'); // Target the class if dynamically added
        if (leaderSelect) {
            new TomSelect(leaderSelect, {
                placeholder: 'Search or select a leader...',
                allowEmptyOption: true // If you have a "--- Select Leader ---" option
            });
        }

        // Optional: Add JS to handle dynamic checkbox selection and update hidden field for Assign Students form
        // This depends on how the form in the left column is structured relative to checkboxes in the right column.
        // For simplicity, the template above assumes the checkboxes are part of the same form, or `form="assignStudentsFormId"` is used.
        // If they are separate, JS would be needed to collect checked student IDs and populate a hidden field.
        console.log('Manage Student Leaders JS loaded.');
    });
</script>
{% endblock %}
{% extends "layout/base.html" %}

{% block page_title %}All Asset Reports{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-flag-fill text-danger me-2"></i>All Asset Reports
        </h1>
        {# Optional: Add filter controls or a "Report General Issue" button here if needed #}
        <a href="{{ url_for('report_asset_general') }}" class="btn btn-sm btn-outline-warning">
            <i class="bi bi-exclamation-triangle-fill me-1"></i> Report General Issue
        </a>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">
    <div class="card shadow-sm">
        <div class="card-header bg-light-subtle">
            <h5 class="mb-0 font-heading">List of Asset Reports</h5>
            {# Add search/filter form here if you implement those features in the route #}
        </div>
        <div class="card-body p-0">
            {% if reports %}
            <div class="table-responsive">
                <table class="table table-hover table-striped mb-0 align-middle">
                    <thead class="table-light">
                        <tr>
                            <th scope="col" class="ps-3">ID</th>
                            <th scope="col">Asset Name</th>
                            <th scope="col">Reported By</th>
                            <th scope="col">Report Date</th>
                            <th scope="col">Status</th>
                            <th scope="col" class="text-end pe-3">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        {% for report_item in reports %} {# Iterate through 'reports' (plural) #}
                        <tr>
                            <td class="ps-3"><strong>#{{ report_item.id }}</strong></td>
                            <td>
                                {% if report_item.asset %}
                                    <a href="{{ url_for('edit_asset', asset_id=report_item.asset.id) }}" class="text-decoration-none" title="View Asset Details">{{ report_item.asset.name }}</a>
                                    <small class="d-block text-muted">Category: {{ report_item.asset.category.name if report_item.asset.category else 'N/A' }}</small>
                                {% else %}
                                    <span class="fst-italic text-muted">General Report</span>
                                {% endif %}
                            </td>
                            <td>
                                {{ report_item.reporter.full_name or report_item.reporter.username if report_item.reporter else 'N/A' }}
                                <small class="d-block text-muted">{{ report_item.reporter.role.name.replace('_', ' ').title() if report_item.reporter and report_item.reporter.role else '' }}</small>
                            </td>
                            <td>
                                {{ report_item.report_date | datetimeformat('%b %d, %Y %I:%M %p') }}
                                <small class="d-block text-muted">({{ report_item.report_date | humanize_time_diff }})</small>
                            </td>
                            <td>
                                {% if report_item.status == 'Pending' %}
                                    <span class="badge bg-warning-subtle text-warning-emphasis rounded-pill px-2 py-1">{{ report_item.status }}</span>
                                {% elif report_item.status == 'In Progress' %}
                                    <span class="badge bg-info-subtle text-info-emphasis rounded-pill px-2 py-1">{{ report_item.status }}</span>
                                {% elif report_item.status == 'Resolved' %}
                                    <span class="badge bg-success-subtle text-success-emphasis rounded-pill px-2 py-1">{{ report_item.status }}</span>
                                {% elif report_item.status == 'Rejected' %}
                                    <span class="badge bg-danger-subtle text-danger-emphasis rounded-pill px-2 py-1">{{ report_item.status }}</span>
                                {% else %}
                                    <span class="badge bg-secondary-subtle text-secondary-emphasis rounded-pill px-2 py-1">{{ report_item.status }}</span>
                                {% endif %}
                            </td>
                            <td class="text-end pe-3">
                                <a href="{{ url_for('resolve_asset_report', report_id=report_item.id) }}" class="btn btn-sm btn-primary">
                                    <i class="bi bi-search me-1"></i> View/Resolve
                                </a>
                            </td>
                        </tr>
                        {% endfor %}
                    </tbody>
                </table>
            </div>
            {% else %}
            <div class="text-center p-5 text-muted">
                <i class="bi bi-inbox fs-1 mb-2"></i>
                <p class="mb-0">No asset reports found.</p>
            </div>
            {% endif %}
        </div>
        {# Optional: Add pagination controls here if you implement pagination in the route #}
        {# {% if pagination and pagination.pages > 1 %}
            <div class="card-footer text-center">
                ... pagination links ...
            </div>
        {% endif %} #}
    </div>
</div>
{% endblock %}

{% extends "layout/base.html" %}

{# Macros - ideally in _macros.html, but defined here for now #}
{% macro render_stat_card(card_title, card_value, card_icon, card_color_class, card_url=None, card_url_text='View Details', card_id=None) %}
<div class="col">
    <div class="card dashboard-stat-card h-100 shadow-sm" {% if card_id %}id="{{ card_id }}"{% endif %}>
        <div class="card-body d-flex align-items-center">
            <div class="stat-icon display-4 me-3 {{ card_color_class | default('text-primary') }}">
                <i class="bi {{ card_icon | default('bi-bar-chart-line-fill') }}"></i>
            </div>
            <div class="stat-content">
                <h6 class="card-subtitle mb-1 text-muted text-uppercase font-body" style="font-size: 0.8rem;">{{ card_title }}</h6>
                <p class="card-text display-6 fw-bold mb-0 font-heading">{{ card_value }}</p>
            </div>
        </div>
        {% if card_url %}
        <a href="{{ card_url }}" class="card-footer text-decoration-none text-muted bg-light-subtle hover-bg-light">
            <small>{{ card_url_text }} <i class="bi bi-arrow-right-short ms-1"></i></small>
        </a>
        {% endif %}
    </div>
</div>
{% endmacro %}

{% macro render_quick_links(links) %}
    {% if links and links | length > 0 %}
    <div class="card shadow-sm dashboard-quick-links-card">
        <div class="card-header">
            <h5 class="mb-0 font-heading"><i class="bi bi-lightning-charge-fill me-2"></i>Key Actions & Reports</h5>
        </div>
        <div class="list-group list-group-flush">
            {% for link in links %}
                <a href="{{ link.url | default('#') }}" class="list-group-item list-group-item-action d-flex align-items-center py-3">
                    <i class="bi {{ link.icon | default('bi-link-45deg') }} fs-5 me-3 {{ link.color_class | default('text-primary') }}" style="min-width: 24px;"></i>
                    <span class="fw-medium">{{ link.text | default('Link') }}</span>
                    <i class="bi bi-chevron-right ms-auto text-muted small"></i>
                </a>
            {% endfor %}
        </div>
    </div>
    {% endif %}
{% endmacro %}

{% macro render_recent_activity(activities) %}
<div class="card shadow-sm recent-activity-card">
    <div class="card-header">
        <h5 class="mb-0 font-heading"><i class="bi bi-journal-arrow-down me-2"></i>Recent Submissions/Updates</h5>
    </div>
    <div class="card-body" style="max-height: 400px; overflow-y: auto;">
        {% if activities and activities | length > 0 %}
            <ul class="list-unstyled">
                {% for activity in activities %}
                    <li class="d-flex align-items-start mb-3 pb-3 border-bottom">
                        <div class="activity-icon me-3">
                            <span class="badge bg-{{ activity.badge_color | default('secondary') }} p-2 rounded-circle">
                                <i class="bi {{ activity.icon | default('bi-file-earmark-text') }} fs-5 text-white"></i>
                            </span>
                        </div>
                        <div class="activity-content">
                            <p class="mb-1 text-dark">{{ activity.text | safe }}</p>
                            <small class="text-muted">
                                <i class="bi bi-calendar3 me-1"></i>
                                {{ activity.timestamp | datetimeformat('%b %d, %Y %I:%M %p') if activity.timestamp else 'Just now' }}
                            </small>
                            {% if activity.url %}
                                <a href="{{ activity.url }}" class="ms-2 small text-decoration-none">View Document <i class="bi bi-arrow-up-right-square"></i></a>
                            {% endif %}
                        </div>
                    </li>
                {% endfor %}
            </ul>
        {% else %}
            <div class="text-center text-muted p-3">
                <i class="bi bi-inbox fs-1 mb-2"></i>
                <p>No recent submissions or updates to display.</p>
            </div>
        {% endif %}
    </div>
    {# <a href="#" class="card-footer text-center text-decoration-none text-muted bg-light-subtle hover-bg-light">
        <small>View All Submissions <i class="bi bi-arrow-right-short ms-1"></i></small>
    </a> #}
</div>
{% endmacro %}

{% block page_title %}Government Oversight Dashboard{% endblock %}

{% block content_header %}
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="page-title font-heading mb-0">
            <i class="bi bi-bank2 me-2 text-primary"></i>Government Oversight Dashboard
        </h1>
        <div class="btn-toolbar mb-2 mb-md-0">
            <a href="{{ url_for('settings') }}" class="btn btn-sm btn-outline-secondary">
                <i class="bi bi-person-fill-gear me-1"></i> My Settings
            </a>
        </div>
    </div>
{% endblock %}

{% block content %}
<div class="container-fluid px-0">

    {# Welcome Message #}
    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow-sm welcome-card bg-secondary text-white"> {# Different color for this role #}
                <div class="card-body">
                    <h4 class="card-title font-heading">Compliance & Oversight Portal, {{ current_user.full_name or current_user.username }}!</h4>
                    <p class="mb-0">Access key institutional data, review compliance reports, and manage Tier 3 requests.</p>
                </div>
            </div>
        </div>
    </div>

    {# Main Stats Cards Row #}
    <div class="row row-cols-1 row-cols-sm-2 row-cols-lg-3 row-cols-xl-4 g-4 mb-4">
        {# card_url for viewing student aggregate data if available (not currently passed for this card) #}
        {{ render_stat_card(
            card_title="Total Enrolled Students",
            card_value=total_students | default(0),
            card_icon="bi-person-bounding-box",
            card_color_class="text-primary"
        ) }}

        {# card_url for viewing teacher aggregate data if available (not currently passed for this card) #}
        {{ render_stat_card(
            card_title="Total Active Teachers",
            card_value=total_teachers | default(0),
            card_icon="bi-person-video",
            card_color_class="text-success"
        ) }}

        {# Gov can view all assets list #}
        {{ render_stat_card(
            card_title="Total School Assets",
            card_value=total_assets_count | default(0),
            card_icon="bi-building-check",
            card_color_class="text-info",
            card_url=url_for('list_all_assets')
        ) }}

        {# Backend should provide count of Tier 3 requests for this user #}
        {{ render_stat_card(
            card_title="Tier 3 Requests Pending",
            card_value=requests_inbox_count | default(0),
            card_icon="bi-file-earmark-ruled-fill",
            card_color_class="text-warning",
            card_url=url_for('requests_inbox')
        ) }}
    </div>

    <div class="row g-4">
        {# Left Column: Quick Links & Compliance Status #}
        <div class="col-lg-4 col-xl-3">
            {% set gov_quick_links = [
                {'url': url_for('requests_inbox'), 'text': 'Review Tier 3 Requests', 'icon': 'bi-card-checklist', 'color_class': 'text-primary'},
                {'url': "#", 'text': 'View Compliance Reports', 'icon': 'bi-shield-fill-check', 'color_class': 'text-success'},
                {'url': "#", 'text': 'School Performance Data', 'icon': 'bi-graph-up', 'color_class': 'text-info'},
                {'url': url_for('export_analytics_data', export_type='demographics'), 'text': 'Export Demographics', 'icon': 'bi-download', 'color_class': 'text-secondary'}
            ] %}
            {{ render_quick_links(gov_quick_links) }}

            {# Compliance Status Placeholder #}
            <div class="card shadow-sm mt-4">
                <div class="card-header">
                    <h5 class="mb-0 font-heading"><i class="bi bi-check-circle-fill me-2 text-success"></i>Compliance Status</h5>
                </div>
                <div class="card-body">
                     <ul class="list-unstyled">
                        <li class="d-flex justify-content-between mb-2"><span>Accreditation:</span> <span class="badge bg-success-subtle text-success-emphasis p-2">Current</span></li>
                        <li class="d-flex justify-content-between mb-2"><span>Safety Audit:</span> <span class="badge bg-warning-subtle text-warning-emphasis p-2">Due Soon</span></li>
                        <li class="d-flex justify-content-between"><span>Financial Reporting:</span> <span class="badge bg-success-subtle text-success-emphasis p-2">Submitted</span></li>
                    </ul>
                </div>
            </div>
        </div>

        {# Right Column: Key Data Reports & Recent Submissions to Government #}
        <div class="col-lg-8 col-xl-9">
            <div class="card shadow-sm">
                <div class="card-header">
                    <h5 class="mb-0 font-heading"><i class="bi bi-file-earmark-bar-graph-fill me-2"></i>Key Institutional Reports</h5>
                </div>
                <div class="card-body text-center text-muted content-placeholder">
                    <i class="bi bi-folder2-open fs-1 mb-2"></i>
                    <p>Links to key institutional reports (e.g., annual performance, financial statements) will be available here.</p>
                </div>
            </div>

            <div class="mt-4">
             {{ render_recent_activity(recent_gov_submissions) }} {# Assuming recent_gov_submissions is passed #}
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block body_scripts %}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Placeholder for any Government dashboard specific JS
        console.log('Government Dashboard JS loaded.');
    });
</script>
{% endblock %}

