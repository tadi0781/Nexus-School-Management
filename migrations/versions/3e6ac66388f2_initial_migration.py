"""Initial migration

Revision ID: 3e6ac66388f2
Revises: 
Create Date: 2025-06-14 13:31:23.361629

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '3e6ac66388f2'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - now adjusted and named properly ###

    # Alter column types and nullability
    op.alter_column('social_group', 'description',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.Text(),
               existing_nullable=True)

    op.alter_column('social_group', 'owner_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    op.alter_column('social_group', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False,
               existing_server_default=sa.text('now()'))

    # Drop old unnamed indexes
    op.drop_index('ix_social_groups_name', table_name='social_group')
    op.drop_index('ix_social_groups_owner_id', table_name='social_group')

    # Create new index (renamed properly)
    op.create_index('ix_social_group_owner_id', 'social_group', ['owner_id'], unique=False)

    # Create named unique constraints
    op.create_unique_constraint('uq_social_group_name', 'social_group', ['name'])
    op.create_unique_constraint('uq_group_user', 'social_group_member', ['group_id', 'user_id'])
    op.create_unique_constraint('uq_tcc_membership', 'talent_club_community_members', ['community_id', 'user_id'])
    op.create_unique_constraint('uq_tc_membership', 'talent_club_memberships', ['talent_club_id', 'user_id'])

    # Drop and replace old unique constraint on teacher_profile
    op.drop_constraint('uq_teacher_profile_assignment', 'teacher_profile', type_='unique')
    op.create_unique_constraint('uq_teacher_profile_user_id', 'teacher_profile', ['user_id'])

    # ### end Alembic commands ###


def downgrade():
    # ### reverse all operations above ###

    # Drop newly added constraints
    op.drop_constraint('uq_teacher_profile_user_id', 'teacher_profile', type_='unique')
    op.create_unique_constraint('uq_teacher_profile_assignment', 'teacher_profile',
                                ['user_id', 'secret_code_id', 'grade', 'section'])

    op.drop_constraint('uq_tc_membership', 'talent_club_memberships', type_='unique')
    op.drop_constraint('uq_tcc_membership', 'talent_club_community_members', type_='unique')
    op.drop_constraint('uq_group_user', 'social_group_member', type_='unique')
    op.drop_constraint('uq_social_group_name', 'social_group', type_='unique')

    # Drop new index and recreate old ones
    op.drop_index('ix_social_group_owner_id', table_name='social_group')
    op.create_index('ix_social_groups_owner_id', 'social_group', ['owner_id'], unique=False)
    op.create_index('ix_social_groups_name', 'social_group', ['name'], unique=True)

    # Revert column types and nullability
    op.alter_column('social_group', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))

    op.alter_column('social_group', 'owner_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    op.alter_column('social_group', 'description',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)

    # ### end Alembic commands ###
